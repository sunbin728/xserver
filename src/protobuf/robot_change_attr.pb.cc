// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: robot_change_attr.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "robot_change_attr.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace NetProto {
class RobotAttrDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RobotAttr> {
} _RobotAttr_default_instance_;
class NotifyRobotAttrChangedDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NotifyRobotAttrChanged> {
} _NotifyRobotAttrChanged_default_instance_;
class RobotAttrEventDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RobotAttrEvent> {
} _RobotAttrEvent_default_instance_;

namespace protobuf_robot_5fchange_5fattr_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotAttr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotAttr, attr_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotAttr, attr_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotAttr, attr_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRobotAttrChanged, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRobotAttrChanged, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRobotAttrChanged, attr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotAttrEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotAttrEvent, robot_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotAttrEvent, event_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(RobotAttr)},
  { 8, -1, sizeof(NotifyRobotAttrChanged)},
  { 15, -1, sizeof(RobotAttrEvent)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_RobotAttr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NotifyRobotAttrChanged_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RobotAttrEvent_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "robot_change_attr.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _RobotAttr_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _NotifyRobotAttrChanged_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _RobotAttrEvent_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::NetProto::protobuf_msg_5fhead_2eproto::InitDefaults();
  _RobotAttr_default_instance_.DefaultConstruct();
  _NotifyRobotAttrChanged_default_instance_.DefaultConstruct();
  _RobotAttrEvent_default_instance_.DefaultConstruct();
  _NotifyRobotAttrChanged_default_instance_.get_mutable()->head_ = const_cast< ::NetProto::MsgHead*>(
      ::NetProto::MsgHead::internal_default_instance());
  _RobotAttrEvent_default_instance_.get_mutable()->event_ = const_cast< ::NetProto::RobotAttrEvent*>(
      ::NetProto::RobotAttrEvent::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\027robot_change_attr.proto\022\010NetProto\032\016msg"
      "_head.proto\"C\n\tRobotAttr\022\021\n\tattr_name\030\002 "
      "\001(\t\022\017\n\007attr_id\030\003 \001(\r\022\022\n\nattr_value\030\004 \001(\r"
      "\"\\\n\026NotifyRobotAttrChanged\022\037\n\004head\030\001 \001(\013"
      "2\021.NetProto.MsgHead\022!\n\004attr\030\002 \003(\0132\023.NetP"
      "roto.RobotAttr\"M\n\016RobotAttrEvent\022\022\n\nrobo"
      "t_uuid\030\001 \001(\t\022\'\n\005event\030\002 \001(\0132\030.NetProto.R"
      "obotAttrEvent*\203\003\n\013RobotAttrId\022\025\n\021RobotAt"
      "tr_invalid\020\000\022\021\n\rRobotAttr_age\020\001\022\024\n\020Robot"
      "Attr_gender\020\002\022\032\n\026RobotAttr_intellectual\020"
      "\003\022\027\n\023RobotAttr_beautiful\020\004\022\024\n\020RobotAttr_"
      "lovely\020\005\022\027\n\023RobotAttr_skinState\020\006\022\025\n\021Rob"
      "otAttr_longPhy\020\007\022\026\n\022RobotAttr_shortPhy\020\010"
      "\022\024\n\020RobotAttr_energy\020\t\022\025\n\021RobotAttr_thir"
      "sty\020\n\022\024\n\020RobotAttr_hunger\020\013\022\023\n\017RobotAttr"
      "_clean\020\014\022\037\n\033RobotAttr_sufaceTemperature\020"
      "\r\022\023\n\017RobotAttr_money\020\016\022\023\n\017RobotAttr_slee"
      "p\020\017*L\n\022RobotAttrEventType\022\n\n\006HUNGRY\020\000\022\013\n"
      "\007THIRSTY\020\001\022\n\n\006ENERGY\020\002\022\007\n\003HOT\020\003\022\010\n\004COOL\020"
      "\004b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 769);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "robot_change_attr.proto", &protobuf_RegisterTypes);
  ::NetProto::protobuf_msg_5fhead_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_robot_5fchange_5fattr_2eproto

const ::google::protobuf::EnumDescriptor* RobotAttrId_descriptor() {
  protobuf_robot_5fchange_5fattr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_robot_5fchange_5fattr_2eproto::file_level_enum_descriptors[0];
}
bool RobotAttrId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RobotAttrEventType_descriptor() {
  protobuf_robot_5fchange_5fattr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_robot_5fchange_5fattr_2eproto::file_level_enum_descriptors[1];
}
bool RobotAttrEventType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotAttr::kAttrNameFieldNumber;
const int RobotAttr::kAttrIdFieldNumber;
const int RobotAttr::kAttrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotAttr::RobotAttr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_robot_5fchange_5fattr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.RobotAttr)
}
RobotAttr::RobotAttr(const RobotAttr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attr_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attr_name().size() > 0) {
    attr_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attr_name_);
  }
  ::memcpy(&attr_id_, &from.attr_id_,
    reinterpret_cast<char*>(&attr_value_) -
    reinterpret_cast<char*>(&attr_id_) + sizeof(attr_value_));
  // @@protoc_insertion_point(copy_constructor:NetProto.RobotAttr)
}

void RobotAttr::SharedCtor() {
  attr_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&attr_id_, 0, reinterpret_cast<char*>(&attr_value_) -
    reinterpret_cast<char*>(&attr_id_) + sizeof(attr_value_));
  _cached_size_ = 0;
}

RobotAttr::~RobotAttr() {
  // @@protoc_insertion_point(destructor:NetProto.RobotAttr)
  SharedDtor();
}

void RobotAttr::SharedDtor() {
  attr_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RobotAttr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RobotAttr::descriptor() {
  protobuf_robot_5fchange_5fattr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_robot_5fchange_5fattr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RobotAttr& RobotAttr::default_instance() {
  protobuf_robot_5fchange_5fattr_2eproto::InitDefaults();
  return *internal_default_instance();
}

RobotAttr* RobotAttr::New(::google::protobuf::Arena* arena) const {
  RobotAttr* n = new RobotAttr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RobotAttr::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.RobotAttr)
  attr_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&attr_id_, 0, reinterpret_cast<char*>(&attr_value_) -
    reinterpret_cast<char*>(&attr_id_) + sizeof(attr_value_));
}

bool RobotAttr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.RobotAttr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string attr_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_attr_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->attr_name().data(), this->attr_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.RobotAttr.attr_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 attr_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attr_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 attr_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attr_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.RobotAttr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.RobotAttr)
  return false;
#undef DO_
}

void RobotAttr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.RobotAttr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string attr_name = 2;
  if (this->attr_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->attr_name().data(), this->attr_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.RobotAttr.attr_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->attr_name(), output);
  }

  // uint32 attr_id = 3;
  if (this->attr_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->attr_id(), output);
  }

  // uint32 attr_value = 4;
  if (this->attr_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->attr_value(), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.RobotAttr)
}

::google::protobuf::uint8* RobotAttr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.RobotAttr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string attr_name = 2;
  if (this->attr_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->attr_name().data(), this->attr_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.RobotAttr.attr_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->attr_name(), target);
  }

  // uint32 attr_id = 3;
  if (this->attr_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->attr_id(), target);
  }

  // uint32 attr_value = 4;
  if (this->attr_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->attr_value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.RobotAttr)
  return target;
}

size_t RobotAttr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.RobotAttr)
  size_t total_size = 0;

  // string attr_name = 2;
  if (this->attr_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->attr_name());
  }

  // uint32 attr_id = 3;
  if (this->attr_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->attr_id());
  }

  // uint32 attr_value = 4;
  if (this->attr_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->attr_value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RobotAttr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.RobotAttr)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotAttr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RobotAttr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.RobotAttr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.RobotAttr)
    MergeFrom(*source);
  }
}

void RobotAttr::MergeFrom(const RobotAttr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.RobotAttr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.attr_name().size() > 0) {

    attr_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attr_name_);
  }
  if (from.attr_id() != 0) {
    set_attr_id(from.attr_id());
  }
  if (from.attr_value() != 0) {
    set_attr_value(from.attr_value());
  }
}

void RobotAttr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.RobotAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotAttr::CopyFrom(const RobotAttr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.RobotAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotAttr::IsInitialized() const {
  return true;
}

void RobotAttr::Swap(RobotAttr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotAttr::InternalSwap(RobotAttr* other) {
  attr_name_.Swap(&other->attr_name_);
  std::swap(attr_id_, other->attr_id_);
  std::swap(attr_value_, other->attr_value_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RobotAttr::GetMetadata() const {
  protobuf_robot_5fchange_5fattr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_robot_5fchange_5fattr_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RobotAttr

// string attr_name = 2;
void RobotAttr::clear_attr_name() {
  attr_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RobotAttr::attr_name() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotAttr.attr_name)
  return attr_name_.GetNoArena();
}
void RobotAttr::set_attr_name(const ::std::string& value) {
  
  attr_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.RobotAttr.attr_name)
}
#if LANG_CXX11
void RobotAttr::set_attr_name(::std::string&& value) {
  
  attr_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.RobotAttr.attr_name)
}
#endif
void RobotAttr::set_attr_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attr_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.RobotAttr.attr_name)
}
void RobotAttr::set_attr_name(const char* value, size_t size) {
  
  attr_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.RobotAttr.attr_name)
}
::std::string* RobotAttr::mutable_attr_name() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.RobotAttr.attr_name)
  return attr_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RobotAttr::release_attr_name() {
  // @@protoc_insertion_point(field_release:NetProto.RobotAttr.attr_name)
  
  return attr_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RobotAttr::set_allocated_attr_name(::std::string* attr_name) {
  if (attr_name != NULL) {
    
  } else {
    
  }
  attr_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attr_name);
  // @@protoc_insertion_point(field_set_allocated:NetProto.RobotAttr.attr_name)
}

// uint32 attr_id = 3;
void RobotAttr::clear_attr_id() {
  attr_id_ = 0u;
}
::google::protobuf::uint32 RobotAttr::attr_id() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotAttr.attr_id)
  return attr_id_;
}
void RobotAttr::set_attr_id(::google::protobuf::uint32 value) {
  
  attr_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.RobotAttr.attr_id)
}

// uint32 attr_value = 4;
void RobotAttr::clear_attr_value() {
  attr_value_ = 0u;
}
::google::protobuf::uint32 RobotAttr::attr_value() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotAttr.attr_value)
  return attr_value_;
}
void RobotAttr::set_attr_value(::google::protobuf::uint32 value) {
  
  attr_value_ = value;
  // @@protoc_insertion_point(field_set:NetProto.RobotAttr.attr_value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NotifyRobotAttrChanged::kHeadFieldNumber;
const int NotifyRobotAttrChanged::kAttrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NotifyRobotAttrChanged::NotifyRobotAttrChanged()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_robot_5fchange_5fattr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.NotifyRobotAttrChanged)
}
NotifyRobotAttrChanged::NotifyRobotAttrChanged(const NotifyRobotAttrChanged& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      attr_(from.attr_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::NetProto::MsgHead(*from.head_);
  } else {
    head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NetProto.NotifyRobotAttrChanged)
}

void NotifyRobotAttrChanged::SharedCtor() {
  head_ = NULL;
  _cached_size_ = 0;
}

NotifyRobotAttrChanged::~NotifyRobotAttrChanged() {
  // @@protoc_insertion_point(destructor:NetProto.NotifyRobotAttrChanged)
  SharedDtor();
}

void NotifyRobotAttrChanged::SharedDtor() {
  if (this != internal_default_instance()) {
    delete head_;
  }
}

void NotifyRobotAttrChanged::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyRobotAttrChanged::descriptor() {
  protobuf_robot_5fchange_5fattr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_robot_5fchange_5fattr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NotifyRobotAttrChanged& NotifyRobotAttrChanged::default_instance() {
  protobuf_robot_5fchange_5fattr_2eproto::InitDefaults();
  return *internal_default_instance();
}

NotifyRobotAttrChanged* NotifyRobotAttrChanged::New(::google::protobuf::Arena* arena) const {
  NotifyRobotAttrChanged* n = new NotifyRobotAttrChanged;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NotifyRobotAttrChanged::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.NotifyRobotAttrChanged)
  attr_.Clear();
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
}

bool NotifyRobotAttrChanged::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.NotifyRobotAttrChanged)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.MsgHead head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NetProto.RobotAttr attr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.NotifyRobotAttrChanged)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.NotifyRobotAttrChanged)
  return false;
#undef DO_
}

void NotifyRobotAttrChanged::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.NotifyRobotAttrChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->head_, output);
  }

  // repeated .NetProto.RobotAttr attr = 2;
  for (unsigned int i = 0, n = this->attr_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->attr(i), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.NotifyRobotAttrChanged)
}

::google::protobuf::uint8* NotifyRobotAttrChanged::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.NotifyRobotAttrChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->head_, deterministic, target);
  }

  // repeated .NetProto.RobotAttr attr = 2;
  for (unsigned int i = 0, n = this->attr_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->attr(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.NotifyRobotAttrChanged)
  return target;
}

size_t NotifyRobotAttrChanged::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.NotifyRobotAttrChanged)
  size_t total_size = 0;

  // repeated .NetProto.RobotAttr attr = 2;
  {
    unsigned int count = this->attr_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->attr(i));
    }
  }

  // .NetProto.MsgHead head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyRobotAttrChanged::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.NotifyRobotAttrChanged)
  GOOGLE_DCHECK_NE(&from, this);
  const NotifyRobotAttrChanged* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NotifyRobotAttrChanged>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.NotifyRobotAttrChanged)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.NotifyRobotAttrChanged)
    MergeFrom(*source);
  }
}

void NotifyRobotAttrChanged::MergeFrom(const NotifyRobotAttrChanged& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.NotifyRobotAttrChanged)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attr_.MergeFrom(from.attr_);
  if (from.has_head()) {
    mutable_head()->::NetProto::MsgHead::MergeFrom(from.head());
  }
}

void NotifyRobotAttrChanged::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.NotifyRobotAttrChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyRobotAttrChanged::CopyFrom(const NotifyRobotAttrChanged& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.NotifyRobotAttrChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyRobotAttrChanged::IsInitialized() const {
  return true;
}

void NotifyRobotAttrChanged::Swap(NotifyRobotAttrChanged* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotifyRobotAttrChanged::InternalSwap(NotifyRobotAttrChanged* other) {
  attr_.InternalSwap(&other->attr_);
  std::swap(head_, other->head_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NotifyRobotAttrChanged::GetMetadata() const {
  protobuf_robot_5fchange_5fattr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_robot_5fchange_5fattr_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NotifyRobotAttrChanged

// .NetProto.MsgHead head = 1;
bool NotifyRobotAttrChanged::has_head() const {
  return this != internal_default_instance() && head_ != NULL;
}
void NotifyRobotAttrChanged::clear_head() {
  if (GetArenaNoVirtual() == NULL && head_ != NULL) delete head_;
  head_ = NULL;
}
const ::NetProto::MsgHead& NotifyRobotAttrChanged::head() const {
  // @@protoc_insertion_point(field_get:NetProto.NotifyRobotAttrChanged.head)
  return head_ != NULL ? *head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
::NetProto::MsgHead* NotifyRobotAttrChanged::mutable_head() {
  
  if (head_ == NULL) {
    head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.NotifyRobotAttrChanged.head)
  return head_;
}
::NetProto::MsgHead* NotifyRobotAttrChanged::release_head() {
  // @@protoc_insertion_point(field_release:NetProto.NotifyRobotAttrChanged.head)
  
  ::NetProto::MsgHead* temp = head_;
  head_ = NULL;
  return temp;
}
void NotifyRobotAttrChanged::set_allocated_head(::NetProto::MsgHead* head) {
  delete head_;
  head_ = head;
  if (head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.NotifyRobotAttrChanged.head)
}

// repeated .NetProto.RobotAttr attr = 2;
int NotifyRobotAttrChanged::attr_size() const {
  return attr_.size();
}
void NotifyRobotAttrChanged::clear_attr() {
  attr_.Clear();
}
const ::NetProto::RobotAttr& NotifyRobotAttrChanged::attr(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.NotifyRobotAttrChanged.attr)
  return attr_.Get(index);
}
::NetProto::RobotAttr* NotifyRobotAttrChanged::mutable_attr(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.NotifyRobotAttrChanged.attr)
  return attr_.Mutable(index);
}
::NetProto::RobotAttr* NotifyRobotAttrChanged::add_attr() {
  // @@protoc_insertion_point(field_add:NetProto.NotifyRobotAttrChanged.attr)
  return attr_.Add();
}
::google::protobuf::RepeatedPtrField< ::NetProto::RobotAttr >*
NotifyRobotAttrChanged::mutable_attr() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.NotifyRobotAttrChanged.attr)
  return &attr_;
}
const ::google::protobuf::RepeatedPtrField< ::NetProto::RobotAttr >&
NotifyRobotAttrChanged::attr() const {
  // @@protoc_insertion_point(field_list:NetProto.NotifyRobotAttrChanged.attr)
  return attr_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotAttrEvent::kRobotUuidFieldNumber;
const int RobotAttrEvent::kEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotAttrEvent::RobotAttrEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_robot_5fchange_5fattr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.RobotAttrEvent)
}
RobotAttrEvent::RobotAttrEvent(const RobotAttrEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  robot_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.robot_uuid().size() > 0) {
    robot_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.robot_uuid_);
  }
  if (from.has_event()) {
    event_ = new ::NetProto::RobotAttrEvent(*from.event_);
  } else {
    event_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NetProto.RobotAttrEvent)
}

void RobotAttrEvent::SharedCtor() {
  robot_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  event_ = NULL;
  _cached_size_ = 0;
}

RobotAttrEvent::~RobotAttrEvent() {
  // @@protoc_insertion_point(destructor:NetProto.RobotAttrEvent)
  SharedDtor();
}

void RobotAttrEvent::SharedDtor() {
  robot_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete event_;
  }
}

void RobotAttrEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RobotAttrEvent::descriptor() {
  protobuf_robot_5fchange_5fattr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_robot_5fchange_5fattr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RobotAttrEvent& RobotAttrEvent::default_instance() {
  protobuf_robot_5fchange_5fattr_2eproto::InitDefaults();
  return *internal_default_instance();
}

RobotAttrEvent* RobotAttrEvent::New(::google::protobuf::Arena* arena) const {
  RobotAttrEvent* n = new RobotAttrEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RobotAttrEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.RobotAttrEvent)
  robot_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && event_ != NULL) {
    delete event_;
  }
  event_ = NULL;
}

bool RobotAttrEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.RobotAttrEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string robot_uuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_robot_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->robot_uuid().data(), this->robot_uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.RobotAttrEvent.robot_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.RobotAttrEvent event = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.RobotAttrEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.RobotAttrEvent)
  return false;
#undef DO_
}

void RobotAttrEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.RobotAttrEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string robot_uuid = 1;
  if (this->robot_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->robot_uuid().data(), this->robot_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.RobotAttrEvent.robot_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->robot_uuid(), output);
  }

  // .NetProto.RobotAttrEvent event = 2;
  if (this->has_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->event_, output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.RobotAttrEvent)
}

::google::protobuf::uint8* RobotAttrEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.RobotAttrEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string robot_uuid = 1;
  if (this->robot_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->robot_uuid().data(), this->robot_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.RobotAttrEvent.robot_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->robot_uuid(), target);
  }

  // .NetProto.RobotAttrEvent event = 2;
  if (this->has_event()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->event_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.RobotAttrEvent)
  return target;
}

size_t RobotAttrEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.RobotAttrEvent)
  size_t total_size = 0;

  // string robot_uuid = 1;
  if (this->robot_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->robot_uuid());
  }

  // .NetProto.RobotAttrEvent event = 2;
  if (this->has_event()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->event_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RobotAttrEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.RobotAttrEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotAttrEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RobotAttrEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.RobotAttrEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.RobotAttrEvent)
    MergeFrom(*source);
  }
}

void RobotAttrEvent::MergeFrom(const RobotAttrEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.RobotAttrEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.robot_uuid().size() > 0) {

    robot_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.robot_uuid_);
  }
  if (from.has_event()) {
    mutable_event()->::NetProto::RobotAttrEvent::MergeFrom(from.event());
  }
}

void RobotAttrEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.RobotAttrEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotAttrEvent::CopyFrom(const RobotAttrEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.RobotAttrEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotAttrEvent::IsInitialized() const {
  return true;
}

void RobotAttrEvent::Swap(RobotAttrEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotAttrEvent::InternalSwap(RobotAttrEvent* other) {
  robot_uuid_.Swap(&other->robot_uuid_);
  std::swap(event_, other->event_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RobotAttrEvent::GetMetadata() const {
  protobuf_robot_5fchange_5fattr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_robot_5fchange_5fattr_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RobotAttrEvent

// string robot_uuid = 1;
void RobotAttrEvent::clear_robot_uuid() {
  robot_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RobotAttrEvent::robot_uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotAttrEvent.robot_uuid)
  return robot_uuid_.GetNoArena();
}
void RobotAttrEvent::set_robot_uuid(const ::std::string& value) {
  
  robot_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.RobotAttrEvent.robot_uuid)
}
#if LANG_CXX11
void RobotAttrEvent::set_robot_uuid(::std::string&& value) {
  
  robot_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.RobotAttrEvent.robot_uuid)
}
#endif
void RobotAttrEvent::set_robot_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  robot_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.RobotAttrEvent.robot_uuid)
}
void RobotAttrEvent::set_robot_uuid(const char* value, size_t size) {
  
  robot_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.RobotAttrEvent.robot_uuid)
}
::std::string* RobotAttrEvent::mutable_robot_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.RobotAttrEvent.robot_uuid)
  return robot_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RobotAttrEvent::release_robot_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.RobotAttrEvent.robot_uuid)
  
  return robot_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RobotAttrEvent::set_allocated_robot_uuid(::std::string* robot_uuid) {
  if (robot_uuid != NULL) {
    
  } else {
    
  }
  robot_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), robot_uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.RobotAttrEvent.robot_uuid)
}

// .NetProto.RobotAttrEvent event = 2;
bool RobotAttrEvent::has_event() const {
  return this != internal_default_instance() && event_ != NULL;
}
void RobotAttrEvent::clear_event() {
  if (GetArenaNoVirtual() == NULL && event_ != NULL) delete event_;
  event_ = NULL;
}
const ::NetProto::RobotAttrEvent& RobotAttrEvent::event() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotAttrEvent.event)
  return event_ != NULL ? *event_
                         : *::NetProto::RobotAttrEvent::internal_default_instance();
}
::NetProto::RobotAttrEvent* RobotAttrEvent::mutable_event() {
  
  if (event_ == NULL) {
    event_ = new ::NetProto::RobotAttrEvent;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.RobotAttrEvent.event)
  return event_;
}
::NetProto::RobotAttrEvent* RobotAttrEvent::release_event() {
  // @@protoc_insertion_point(field_release:NetProto.RobotAttrEvent.event)
  
  ::NetProto::RobotAttrEvent* temp = event_;
  event_ = NULL;
  return temp;
}
void RobotAttrEvent::set_allocated_event(::NetProto::RobotAttrEvent* event) {
  delete event_;
  event_ = event;
  if (event) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.RobotAttrEvent.event)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace NetProto

// @@protoc_insertion_point(global_scope)
