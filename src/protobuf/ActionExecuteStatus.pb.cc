// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ActionExecuteStatus.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ActionExecuteStatus.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace NetProto {
namespace Action {
namespace Status {
class ActionExecuteStatusDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ActionExecuteStatus> {
} _ActionExecuteStatus_default_instance_;
class ActionExecuteStatusFeedBackDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ActionExecuteStatusFeedBack> {
} _ActionExecuteStatusFeedBack_default_instance_;

namespace protobuf_ActionExecuteStatus_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionExecuteStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionExecuteStatus, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionExecuteStatus, param1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionExecuteStatus, param2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionExecuteStatusFeedBack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionExecuteStatusFeedBack, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionExecuteStatusFeedBack, statusarray_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionExecuteStatusFeedBack, natural_action_status_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(ActionExecuteStatus)},
  { 8, -1, sizeof(ActionExecuteStatusFeedBack)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActionExecuteStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActionExecuteStatusFeedBack_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ActionExecuteStatus.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _ActionExecuteStatus_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ActionExecuteStatusFeedBack_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::NetProto::protobuf_msg_5fhead_2eproto::InitDefaults();
  ::NetProto::Action::Status::protobuf_natural_5faction_5fstatus_2eproto::InitDefaults();
  _ActionExecuteStatus_default_instance_.DefaultConstruct();
  _ActionExecuteStatusFeedBack_default_instance_.DefaultConstruct();
  _ActionExecuteStatusFeedBack_default_instance_.get_mutable()->head_ = const_cast< ::NetProto::MsgHead*>(
      ::NetProto::MsgHead::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\031ActionExecuteStatus.proto\022\026NetProto.Ac"
      "tion.Status\032\016msg_head.proto\032\033natural_act"
      "ion_status.proto\"\222\002\n\023ActionExecuteStatus"
      "\022>\n\004type\030\001 \001(\01620.NetProto.Action.Status."
      "ActionExecuteStatus.Type\022\016\n\006param1\030\002 \001(\t"
      "\022\016\n\006param2\030\003 \001(\t\"\232\001\n\004Type\022\020\n\014STATUS_UKNO"
      "W\020\000\022\016\n\nSTATUS_EAT\020\001\022\021\n\rSTATUS_NO_EAT\020\002\022\017"
      "\n\013STATUS_BATH\020\003\022\020\n\014STATUS_DRINK\020\004\022\023\n\017STA"
      "TUS_NO_DRINK\020\005\022\020\n\014STATUS_STAND\020\006\022\023\n\017STAT"
      "US_NO_STAND\020\007\"\314\001\n\033ActionExecuteStatusFee"
      "dBack\022\037\n\004head\030\001 \001(\0132\021.NetProto.MsgHead\022@"
      "\n\013statusArray\030\002 \003(\0132+.NetProto.Action.St"
      "atus.ActionExecuteStatus\022J\n\025natural_acti"
      "on_status\030\003 \003(\0132+.NetProto.Action.Status"
      ".NaturalActionStatusb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 588);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ActionExecuteStatus.proto", &protobuf_RegisterTypes);
  ::NetProto::protobuf_msg_5fhead_2eproto::AddDescriptors();
  ::NetProto::Action::Status::protobuf_natural_5faction_5fstatus_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_ActionExecuteStatus_2eproto

const ::google::protobuf::EnumDescriptor* ActionExecuteStatus_Type_descriptor() {
  protobuf_ActionExecuteStatus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActionExecuteStatus_2eproto::file_level_enum_descriptors[0];
}
bool ActionExecuteStatus_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ActionExecuteStatus_Type ActionExecuteStatus::STATUS_UKNOW;
const ActionExecuteStatus_Type ActionExecuteStatus::STATUS_EAT;
const ActionExecuteStatus_Type ActionExecuteStatus::STATUS_NO_EAT;
const ActionExecuteStatus_Type ActionExecuteStatus::STATUS_BATH;
const ActionExecuteStatus_Type ActionExecuteStatus::STATUS_DRINK;
const ActionExecuteStatus_Type ActionExecuteStatus::STATUS_NO_DRINK;
const ActionExecuteStatus_Type ActionExecuteStatus::STATUS_STAND;
const ActionExecuteStatus_Type ActionExecuteStatus::STATUS_NO_STAND;
const ActionExecuteStatus_Type ActionExecuteStatus::Type_MIN;
const ActionExecuteStatus_Type ActionExecuteStatus::Type_MAX;
const int ActionExecuteStatus::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActionExecuteStatus::kTypeFieldNumber;
const int ActionExecuteStatus::kParam1FieldNumber;
const int ActionExecuteStatus::kParam2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionExecuteStatus::ActionExecuteStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActionExecuteStatus_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.Action.Status.ActionExecuteStatus)
}
ActionExecuteStatus::ActionExecuteStatus(const ActionExecuteStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  param1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.param1().size() > 0) {
    param1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param1_);
  }
  param2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.param2().size() > 0) {
    param2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param2_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:NetProto.Action.Status.ActionExecuteStatus)
}

void ActionExecuteStatus::SharedCtor() {
  param1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

ActionExecuteStatus::~ActionExecuteStatus() {
  // @@protoc_insertion_point(destructor:NetProto.Action.Status.ActionExecuteStatus)
  SharedDtor();
}

void ActionExecuteStatus::SharedDtor() {
  param1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ActionExecuteStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActionExecuteStatus::descriptor() {
  protobuf_ActionExecuteStatus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActionExecuteStatus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActionExecuteStatus& ActionExecuteStatus::default_instance() {
  protobuf_ActionExecuteStatus_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActionExecuteStatus* ActionExecuteStatus::New(::google::protobuf::Arena* arena) const {
  ActionExecuteStatus* n = new ActionExecuteStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActionExecuteStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.Action.Status.ActionExecuteStatus)
  param1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

bool ActionExecuteStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.Action.Status.ActionExecuteStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.Action.Status.ActionExecuteStatus.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::NetProto::Action::Status::ActionExecuteStatus_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string param1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param1()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->param1().data(), this->param1().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.Action.Status.ActionExecuteStatus.param1"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string param2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->param2().data(), this->param2().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.Action.Status.ActionExecuteStatus.param2"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.Action.Status.ActionExecuteStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.Action.Status.ActionExecuteStatus)
  return false;
#undef DO_
}

void ActionExecuteStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.Action.Status.ActionExecuteStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.Action.Status.ActionExecuteStatus.Type type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // string param1 = 2;
  if (this->param1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->param1().data(), this->param1().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.Action.Status.ActionExecuteStatus.param1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->param1(), output);
  }

  // string param2 = 3;
  if (this->param2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->param2().data(), this->param2().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.Action.Status.ActionExecuteStatus.param2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->param2(), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.Action.Status.ActionExecuteStatus)
}

::google::protobuf::uint8* ActionExecuteStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.Action.Status.ActionExecuteStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.Action.Status.ActionExecuteStatus.Type type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // string param1 = 2;
  if (this->param1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->param1().data(), this->param1().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.Action.Status.ActionExecuteStatus.param1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->param1(), target);
  }

  // string param2 = 3;
  if (this->param2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->param2().data(), this->param2().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.Action.Status.ActionExecuteStatus.param2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->param2(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.Action.Status.ActionExecuteStatus)
  return target;
}

size_t ActionExecuteStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.Action.Status.ActionExecuteStatus)
  size_t total_size = 0;

  // string param1 = 2;
  if (this->param1().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->param1());
  }

  // string param2 = 3;
  if (this->param2().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->param2());
  }

  // .NetProto.Action.Status.ActionExecuteStatus.Type type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActionExecuteStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.Action.Status.ActionExecuteStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionExecuteStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActionExecuteStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.Action.Status.ActionExecuteStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.Action.Status.ActionExecuteStatus)
    MergeFrom(*source);
  }
}

void ActionExecuteStatus::MergeFrom(const ActionExecuteStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.Action.Status.ActionExecuteStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.param1().size() > 0) {

    param1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param1_);
  }
  if (from.param2().size() > 0) {

    param2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param2_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void ActionExecuteStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.Action.Status.ActionExecuteStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionExecuteStatus::CopyFrom(const ActionExecuteStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.Action.Status.ActionExecuteStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionExecuteStatus::IsInitialized() const {
  return true;
}

void ActionExecuteStatus::Swap(ActionExecuteStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActionExecuteStatus::InternalSwap(ActionExecuteStatus* other) {
  param1_.Swap(&other->param1_);
  param2_.Swap(&other->param2_);
  std::swap(type_, other->type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActionExecuteStatus::GetMetadata() const {
  protobuf_ActionExecuteStatus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActionExecuteStatus_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActionExecuteStatus

// .NetProto.Action.Status.ActionExecuteStatus.Type type = 1;
void ActionExecuteStatus::clear_type() {
  type_ = 0;
}
::NetProto::Action::Status::ActionExecuteStatus_Type ActionExecuteStatus::type() const {
  // @@protoc_insertion_point(field_get:NetProto.Action.Status.ActionExecuteStatus.type)
  return static_cast< ::NetProto::Action::Status::ActionExecuteStatus_Type >(type_);
}
void ActionExecuteStatus::set_type(::NetProto::Action::Status::ActionExecuteStatus_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetProto.Action.Status.ActionExecuteStatus.type)
}

// string param1 = 2;
void ActionExecuteStatus::clear_param1() {
  param1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ActionExecuteStatus::param1() const {
  // @@protoc_insertion_point(field_get:NetProto.Action.Status.ActionExecuteStatus.param1)
  return param1_.GetNoArena();
}
void ActionExecuteStatus::set_param1(const ::std::string& value) {
  
  param1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.Action.Status.ActionExecuteStatus.param1)
}
#if LANG_CXX11
void ActionExecuteStatus::set_param1(::std::string&& value) {
  
  param1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.Action.Status.ActionExecuteStatus.param1)
}
#endif
void ActionExecuteStatus::set_param1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  param1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.Action.Status.ActionExecuteStatus.param1)
}
void ActionExecuteStatus::set_param1(const char* value, size_t size) {
  
  param1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.Action.Status.ActionExecuteStatus.param1)
}
::std::string* ActionExecuteStatus::mutable_param1() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.Action.Status.ActionExecuteStatus.param1)
  return param1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ActionExecuteStatus::release_param1() {
  // @@protoc_insertion_point(field_release:NetProto.Action.Status.ActionExecuteStatus.param1)
  
  return param1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ActionExecuteStatus::set_allocated_param1(::std::string* param1) {
  if (param1 != NULL) {
    
  } else {
    
  }
  param1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param1);
  // @@protoc_insertion_point(field_set_allocated:NetProto.Action.Status.ActionExecuteStatus.param1)
}

// string param2 = 3;
void ActionExecuteStatus::clear_param2() {
  param2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ActionExecuteStatus::param2() const {
  // @@protoc_insertion_point(field_get:NetProto.Action.Status.ActionExecuteStatus.param2)
  return param2_.GetNoArena();
}
void ActionExecuteStatus::set_param2(const ::std::string& value) {
  
  param2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.Action.Status.ActionExecuteStatus.param2)
}
#if LANG_CXX11
void ActionExecuteStatus::set_param2(::std::string&& value) {
  
  param2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.Action.Status.ActionExecuteStatus.param2)
}
#endif
void ActionExecuteStatus::set_param2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  param2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.Action.Status.ActionExecuteStatus.param2)
}
void ActionExecuteStatus::set_param2(const char* value, size_t size) {
  
  param2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.Action.Status.ActionExecuteStatus.param2)
}
::std::string* ActionExecuteStatus::mutable_param2() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.Action.Status.ActionExecuteStatus.param2)
  return param2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ActionExecuteStatus::release_param2() {
  // @@protoc_insertion_point(field_release:NetProto.Action.Status.ActionExecuteStatus.param2)
  
  return param2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ActionExecuteStatus::set_allocated_param2(::std::string* param2) {
  if (param2 != NULL) {
    
  } else {
    
  }
  param2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param2);
  // @@protoc_insertion_point(field_set_allocated:NetProto.Action.Status.ActionExecuteStatus.param2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActionExecuteStatusFeedBack::kHeadFieldNumber;
const int ActionExecuteStatusFeedBack::kStatusArrayFieldNumber;
const int ActionExecuteStatusFeedBack::kNaturalActionStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionExecuteStatusFeedBack::ActionExecuteStatusFeedBack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActionExecuteStatus_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.Action.Status.ActionExecuteStatusFeedBack)
}
ActionExecuteStatusFeedBack::ActionExecuteStatusFeedBack(const ActionExecuteStatusFeedBack& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      statusarray_(from.statusarray_),
      natural_action_status_(from.natural_action_status_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::NetProto::MsgHead(*from.head_);
  } else {
    head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NetProto.Action.Status.ActionExecuteStatusFeedBack)
}

void ActionExecuteStatusFeedBack::SharedCtor() {
  head_ = NULL;
  _cached_size_ = 0;
}

ActionExecuteStatusFeedBack::~ActionExecuteStatusFeedBack() {
  // @@protoc_insertion_point(destructor:NetProto.Action.Status.ActionExecuteStatusFeedBack)
  SharedDtor();
}

void ActionExecuteStatusFeedBack::SharedDtor() {
  if (this != internal_default_instance()) {
    delete head_;
  }
}

void ActionExecuteStatusFeedBack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActionExecuteStatusFeedBack::descriptor() {
  protobuf_ActionExecuteStatus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActionExecuteStatus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActionExecuteStatusFeedBack& ActionExecuteStatusFeedBack::default_instance() {
  protobuf_ActionExecuteStatus_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActionExecuteStatusFeedBack* ActionExecuteStatusFeedBack::New(::google::protobuf::Arena* arena) const {
  ActionExecuteStatusFeedBack* n = new ActionExecuteStatusFeedBack;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActionExecuteStatusFeedBack::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.Action.Status.ActionExecuteStatusFeedBack)
  statusarray_.Clear();
  natural_action_status_.Clear();
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
}

bool ActionExecuteStatusFeedBack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.Action.Status.ActionExecuteStatusFeedBack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.MsgHead head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NetProto.Action.Status.ActionExecuteStatus statusArray = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_statusarray()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NetProto.Action.Status.NaturalActionStatus natural_action_status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_natural_action_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.Action.Status.ActionExecuteStatusFeedBack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.Action.Status.ActionExecuteStatusFeedBack)
  return false;
#undef DO_
}

void ActionExecuteStatusFeedBack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.Action.Status.ActionExecuteStatusFeedBack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->head_, output);
  }

  // repeated .NetProto.Action.Status.ActionExecuteStatus statusArray = 2;
  for (unsigned int i = 0, n = this->statusarray_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->statusarray(i), output);
  }

  // repeated .NetProto.Action.Status.NaturalActionStatus natural_action_status = 3;
  for (unsigned int i = 0, n = this->natural_action_status_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->natural_action_status(i), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.Action.Status.ActionExecuteStatusFeedBack)
}

::google::protobuf::uint8* ActionExecuteStatusFeedBack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.Action.Status.ActionExecuteStatusFeedBack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->head_, deterministic, target);
  }

  // repeated .NetProto.Action.Status.ActionExecuteStatus statusArray = 2;
  for (unsigned int i = 0, n = this->statusarray_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->statusarray(i), deterministic, target);
  }

  // repeated .NetProto.Action.Status.NaturalActionStatus natural_action_status = 3;
  for (unsigned int i = 0, n = this->natural_action_status_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->natural_action_status(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.Action.Status.ActionExecuteStatusFeedBack)
  return target;
}

size_t ActionExecuteStatusFeedBack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.Action.Status.ActionExecuteStatusFeedBack)
  size_t total_size = 0;

  // repeated .NetProto.Action.Status.ActionExecuteStatus statusArray = 2;
  {
    unsigned int count = this->statusarray_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->statusarray(i));
    }
  }

  // repeated .NetProto.Action.Status.NaturalActionStatus natural_action_status = 3;
  {
    unsigned int count = this->natural_action_status_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->natural_action_status(i));
    }
  }

  // .NetProto.MsgHead head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActionExecuteStatusFeedBack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.Action.Status.ActionExecuteStatusFeedBack)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionExecuteStatusFeedBack* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActionExecuteStatusFeedBack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.Action.Status.ActionExecuteStatusFeedBack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.Action.Status.ActionExecuteStatusFeedBack)
    MergeFrom(*source);
  }
}

void ActionExecuteStatusFeedBack::MergeFrom(const ActionExecuteStatusFeedBack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.Action.Status.ActionExecuteStatusFeedBack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  statusarray_.MergeFrom(from.statusarray_);
  natural_action_status_.MergeFrom(from.natural_action_status_);
  if (from.has_head()) {
    mutable_head()->::NetProto::MsgHead::MergeFrom(from.head());
  }
}

void ActionExecuteStatusFeedBack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.Action.Status.ActionExecuteStatusFeedBack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionExecuteStatusFeedBack::CopyFrom(const ActionExecuteStatusFeedBack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.Action.Status.ActionExecuteStatusFeedBack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionExecuteStatusFeedBack::IsInitialized() const {
  return true;
}

void ActionExecuteStatusFeedBack::Swap(ActionExecuteStatusFeedBack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActionExecuteStatusFeedBack::InternalSwap(ActionExecuteStatusFeedBack* other) {
  statusarray_.InternalSwap(&other->statusarray_);
  natural_action_status_.InternalSwap(&other->natural_action_status_);
  std::swap(head_, other->head_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActionExecuteStatusFeedBack::GetMetadata() const {
  protobuf_ActionExecuteStatus_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActionExecuteStatus_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActionExecuteStatusFeedBack

// .NetProto.MsgHead head = 1;
bool ActionExecuteStatusFeedBack::has_head() const {
  return this != internal_default_instance() && head_ != NULL;
}
void ActionExecuteStatusFeedBack::clear_head() {
  if (GetArenaNoVirtual() == NULL && head_ != NULL) delete head_;
  head_ = NULL;
}
const ::NetProto::MsgHead& ActionExecuteStatusFeedBack::head() const {
  // @@protoc_insertion_point(field_get:NetProto.Action.Status.ActionExecuteStatusFeedBack.head)
  return head_ != NULL ? *head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
::NetProto::MsgHead* ActionExecuteStatusFeedBack::mutable_head() {
  
  if (head_ == NULL) {
    head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.Action.Status.ActionExecuteStatusFeedBack.head)
  return head_;
}
::NetProto::MsgHead* ActionExecuteStatusFeedBack::release_head() {
  // @@protoc_insertion_point(field_release:NetProto.Action.Status.ActionExecuteStatusFeedBack.head)
  
  ::NetProto::MsgHead* temp = head_;
  head_ = NULL;
  return temp;
}
void ActionExecuteStatusFeedBack::set_allocated_head(::NetProto::MsgHead* head) {
  delete head_;
  head_ = head;
  if (head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.Action.Status.ActionExecuteStatusFeedBack.head)
}

// repeated .NetProto.Action.Status.ActionExecuteStatus statusArray = 2;
int ActionExecuteStatusFeedBack::statusarray_size() const {
  return statusarray_.size();
}
void ActionExecuteStatusFeedBack::clear_statusarray() {
  statusarray_.Clear();
}
const ::NetProto::Action::Status::ActionExecuteStatus& ActionExecuteStatusFeedBack::statusarray(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.Action.Status.ActionExecuteStatusFeedBack.statusArray)
  return statusarray_.Get(index);
}
::NetProto::Action::Status::ActionExecuteStatus* ActionExecuteStatusFeedBack::mutable_statusarray(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.Action.Status.ActionExecuteStatusFeedBack.statusArray)
  return statusarray_.Mutable(index);
}
::NetProto::Action::Status::ActionExecuteStatus* ActionExecuteStatusFeedBack::add_statusarray() {
  // @@protoc_insertion_point(field_add:NetProto.Action.Status.ActionExecuteStatusFeedBack.statusArray)
  return statusarray_.Add();
}
::google::protobuf::RepeatedPtrField< ::NetProto::Action::Status::ActionExecuteStatus >*
ActionExecuteStatusFeedBack::mutable_statusarray() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.Action.Status.ActionExecuteStatusFeedBack.statusArray)
  return &statusarray_;
}
const ::google::protobuf::RepeatedPtrField< ::NetProto::Action::Status::ActionExecuteStatus >&
ActionExecuteStatusFeedBack::statusarray() const {
  // @@protoc_insertion_point(field_list:NetProto.Action.Status.ActionExecuteStatusFeedBack.statusArray)
  return statusarray_;
}

// repeated .NetProto.Action.Status.NaturalActionStatus natural_action_status = 3;
int ActionExecuteStatusFeedBack::natural_action_status_size() const {
  return natural_action_status_.size();
}
void ActionExecuteStatusFeedBack::clear_natural_action_status() {
  natural_action_status_.Clear();
}
const ::NetProto::Action::Status::NaturalActionStatus& ActionExecuteStatusFeedBack::natural_action_status(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.Action.Status.ActionExecuteStatusFeedBack.natural_action_status)
  return natural_action_status_.Get(index);
}
::NetProto::Action::Status::NaturalActionStatus* ActionExecuteStatusFeedBack::mutable_natural_action_status(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.Action.Status.ActionExecuteStatusFeedBack.natural_action_status)
  return natural_action_status_.Mutable(index);
}
::NetProto::Action::Status::NaturalActionStatus* ActionExecuteStatusFeedBack::add_natural_action_status() {
  // @@protoc_insertion_point(field_add:NetProto.Action.Status.ActionExecuteStatusFeedBack.natural_action_status)
  return natural_action_status_.Add();
}
::google::protobuf::RepeatedPtrField< ::NetProto::Action::Status::NaturalActionStatus >*
ActionExecuteStatusFeedBack::mutable_natural_action_status() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.Action.Status.ActionExecuteStatusFeedBack.natural_action_status)
  return &natural_action_status_;
}
const ::google::protobuf::RepeatedPtrField< ::NetProto::Action::Status::NaturalActionStatus >&
ActionExecuteStatusFeedBack::natural_action_status() const {
  // @@protoc_insertion_point(field_list:NetProto.Action.Status.ActionExecuteStatusFeedBack.natural_action_status)
  return natural_action_status_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Status
}  // namespace Action
}  // namespace NetProto

// @@protoc_insertion_point(global_scope)
