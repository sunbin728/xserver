// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: robot_ill.proto

#ifndef PROTOBUF_robot_5fill_2eproto__INCLUDED
#define PROTOBUF_robot_5fill_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "msg_head.pb.h"
// @@protoc_insertion_point(includes)
namespace NetProto {
class IllEvent;
class IllEventDefaultTypeInternal;
extern IllEventDefaultTypeInternal _IllEvent_default_instance_;
class MsgHead;
class MsgHeadDefaultTypeInternal;
extern MsgHeadDefaultTypeInternal _MsgHead_default_instance_;
}  // namespace NetProto

namespace NetProto {

namespace protobuf_robot_5fill_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_robot_5fill_2eproto

enum IllType {
  ILL_UNKNOWN = 0,
  ILL_STOMACH = 1,
  ILL_TOOTH = 2,
  ILL_FEVER = 3,
  IllType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  IllType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool IllType_IsValid(int value);
const IllType IllType_MIN = ILL_UNKNOWN;
const IllType IllType_MAX = ILL_FEVER;
const int IllType_ARRAYSIZE = IllType_MAX + 1;

const ::google::protobuf::EnumDescriptor* IllType_descriptor();
inline const ::std::string& IllType_Name(IllType value) {
  return ::google::protobuf::internal::NameOfEnum(
    IllType_descriptor(), value);
}
inline bool IllType_Parse(
    const ::std::string& name, IllType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<IllType>(
    IllType_descriptor(), name, value);
}
enum IllLevel {
  LEVEL_UNKNOWN = 0,
  LEVEL_NONE = 1,
  LEVEL_LIGHT = 2,
  LEVEL_HEAVY = 3,
  IllLevel_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  IllLevel_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool IllLevel_IsValid(int value);
const IllLevel IllLevel_MIN = LEVEL_UNKNOWN;
const IllLevel IllLevel_MAX = LEVEL_HEAVY;
const int IllLevel_ARRAYSIZE = IllLevel_MAX + 1;

const ::google::protobuf::EnumDescriptor* IllLevel_descriptor();
inline const ::std::string& IllLevel_Name(IllLevel value) {
  return ::google::protobuf::internal::NameOfEnum(
    IllLevel_descriptor(), value);
}
inline bool IllLevel_Parse(
    const ::std::string& name, IllLevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<IllLevel>(
    IllLevel_descriptor(), name, value);
}
// ===================================================================

class IllEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.IllEvent) */ {
 public:
  IllEvent();
  virtual ~IllEvent();

  IllEvent(const IllEvent& from);

  inline IllEvent& operator=(const IllEvent& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IllEvent& default_instance();

  static inline const IllEvent* internal_default_instance() {
    return reinterpret_cast<const IllEvent*>(
               &_IllEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(IllEvent* other);

  // implements Message ----------------------------------------------

  inline IllEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  IllEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IllEvent& from);
  void MergeFrom(const IllEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IllEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .NetProto.MsgHead head = 1;
  bool has_head() const;
  void clear_head();
  static const int kHeadFieldNumber = 1;
  const ::NetProto::MsgHead& head() const;
  ::NetProto::MsgHead* mutable_head();
  ::NetProto::MsgHead* release_head();
  void set_allocated_head(::NetProto::MsgHead* head);

  // .NetProto.IllType type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::NetProto::IllType type() const;
  void set_type(::NetProto::IllType value);

  // .NetProto.IllLevel level = 3;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::NetProto::IllLevel level() const;
  void set_level(::NetProto::IllLevel value);

  // @@protoc_insertion_point(class_scope:NetProto.IllEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetProto::MsgHead* head_;
  int type_;
  int level_;
  mutable int _cached_size_;
  friend struct protobuf_robot_5fill_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// IllEvent

// .NetProto.MsgHead head = 1;
inline bool IllEvent::has_head() const {
  return this != internal_default_instance() && head_ != NULL;
}
inline void IllEvent::clear_head() {
  if (GetArenaNoVirtual() == NULL && head_ != NULL) delete head_;
  head_ = NULL;
}
inline const ::NetProto::MsgHead& IllEvent::head() const {
  // @@protoc_insertion_point(field_get:NetProto.IllEvent.head)
  return head_ != NULL ? *head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
inline ::NetProto::MsgHead* IllEvent::mutable_head() {
  
  if (head_ == NULL) {
    head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.IllEvent.head)
  return head_;
}
inline ::NetProto::MsgHead* IllEvent::release_head() {
  // @@protoc_insertion_point(field_release:NetProto.IllEvent.head)
  
  ::NetProto::MsgHead* temp = head_;
  head_ = NULL;
  return temp;
}
inline void IllEvent::set_allocated_head(::NetProto::MsgHead* head) {
  delete head_;
  head_ = head;
  if (head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.IllEvent.head)
}

// .NetProto.IllType type = 2;
inline void IllEvent::clear_type() {
  type_ = 0;
}
inline ::NetProto::IllType IllEvent::type() const {
  // @@protoc_insertion_point(field_get:NetProto.IllEvent.type)
  return static_cast< ::NetProto::IllType >(type_);
}
inline void IllEvent::set_type(::NetProto::IllType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetProto.IllEvent.type)
}

// .NetProto.IllLevel level = 3;
inline void IllEvent::clear_level() {
  level_ = 0;
}
inline ::NetProto::IllLevel IllEvent::level() const {
  // @@protoc_insertion_point(field_get:NetProto.IllEvent.level)
  return static_cast< ::NetProto::IllLevel >(level_);
}
inline void IllEvent::set_level(::NetProto::IllLevel value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:NetProto.IllEvent.level)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace NetProto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::NetProto::IllType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetProto::IllType>() {
  return ::NetProto::IllType_descriptor();
}
template <> struct is_proto_enum< ::NetProto::IllLevel> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetProto::IllLevel>() {
  return ::NetProto::IllLevel_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_robot_5fill_2eproto__INCLUDED
