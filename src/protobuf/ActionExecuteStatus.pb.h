// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ActionExecuteStatus.proto

#ifndef PROTOBUF_ActionExecuteStatus_2eproto__INCLUDED
#define PROTOBUF_ActionExecuteStatus_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "msg_head.pb.h"
#include "natural_action_status.pb.h"
// @@protoc_insertion_point(includes)
namespace NetProto {
class MsgHead;
class MsgHeadDefaultTypeInternal;
extern MsgHeadDefaultTypeInternal _MsgHead_default_instance_;
namespace Action {
namespace Status {
class ActStatus;
class ActStatusDefaultTypeInternal;
extern ActStatusDefaultTypeInternal _ActStatus_default_instance_;
class ActionExecuteStatus;
class ActionExecuteStatusDefaultTypeInternal;
extern ActionExecuteStatusDefaultTypeInternal _ActionExecuteStatus_default_instance_;
class ActionExecuteStatusFeedBack;
class ActionExecuteStatusFeedBackDefaultTypeInternal;
extern ActionExecuteStatusFeedBackDefaultTypeInternal _ActionExecuteStatusFeedBack_default_instance_;
class AllOpenStatus;
class AllOpenStatusDefaultTypeInternal;
extern AllOpenStatusDefaultTypeInternal _AllOpenStatus_default_instance_;
class AttrStatus;
class AttrStatusDefaultTypeInternal;
extern AttrStatusDefaultTypeInternal _AttrStatus_default_instance_;
class BurnStatus;
class BurnStatusDefaultTypeInternal;
extern BurnStatusDefaultTypeInternal _BurnStatus_default_instance_;
class ContainerStatus;
class ContainerStatusDefaultTypeInternal;
extern ContainerStatusDefaultTypeInternal _ContainerStatus_default_instance_;
class EmsComing;
class EmsComingDefaultTypeInternal;
extern EmsComingDefaultTypeInternal _EmsComing_default_instance_;
class FillAttr;
class FillAttrDefaultTypeInternal;
extern FillAttrDefaultTypeInternal _FillAttr_default_instance_;
class NaturalActionStatus;
class NaturalActionStatusDefaultTypeInternal;
extern NaturalActionStatusDefaultTypeInternal _NaturalActionStatus_default_instance_;
class NaturalActionStatusData;
class NaturalActionStatusDataDefaultTypeInternal;
extern NaturalActionStatusDataDefaultTypeInternal _NaturalActionStatusData_default_instance_;
class NotifyNaturalStatusChange;
class NotifyNaturalStatusChangeDefaultTypeInternal;
extern NotifyNaturalStatusChangeDefaultTypeInternal _NotifyNaturalStatusChange_default_instance_;
class OpenStatus;
class OpenStatusDefaultTypeInternal;
extern OpenStatusDefaultTypeInternal _OpenStatus_default_instance_;
}  // namespace Status
}  // namespace Action
}  // namespace NetProto

namespace NetProto {
namespace Action {
namespace Status {

namespace protobuf_ActionExecuteStatus_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_ActionExecuteStatus_2eproto

enum ActionExecuteStatus_Type {
  ActionExecuteStatus_Type_STATUS_UKNOW = 0,
  ActionExecuteStatus_Type_STATUS_EAT = 1,
  ActionExecuteStatus_Type_STATUS_NO_EAT = 2,
  ActionExecuteStatus_Type_STATUS_BATH = 3,
  ActionExecuteStatus_Type_STATUS_DRINK = 4,
  ActionExecuteStatus_Type_STATUS_NO_DRINK = 5,
  ActionExecuteStatus_Type_STATUS_STAND = 6,
  ActionExecuteStatus_Type_STATUS_NO_STAND = 7,
  ActionExecuteStatus_Type_ActionExecuteStatus_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ActionExecuteStatus_Type_ActionExecuteStatus_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ActionExecuteStatus_Type_IsValid(int value);
const ActionExecuteStatus_Type ActionExecuteStatus_Type_Type_MIN = ActionExecuteStatus_Type_STATUS_UKNOW;
const ActionExecuteStatus_Type ActionExecuteStatus_Type_Type_MAX = ActionExecuteStatus_Type_STATUS_NO_STAND;
const int ActionExecuteStatus_Type_Type_ARRAYSIZE = ActionExecuteStatus_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* ActionExecuteStatus_Type_descriptor();
inline const ::std::string& ActionExecuteStatus_Type_Name(ActionExecuteStatus_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    ActionExecuteStatus_Type_descriptor(), value);
}
inline bool ActionExecuteStatus_Type_Parse(
    const ::std::string& name, ActionExecuteStatus_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ActionExecuteStatus_Type>(
    ActionExecuteStatus_Type_descriptor(), name, value);
}
// ===================================================================

class ActionExecuteStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.Action.Status.ActionExecuteStatus) */ {
 public:
  ActionExecuteStatus();
  virtual ~ActionExecuteStatus();

  ActionExecuteStatus(const ActionExecuteStatus& from);

  inline ActionExecuteStatus& operator=(const ActionExecuteStatus& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionExecuteStatus& default_instance();

  static inline const ActionExecuteStatus* internal_default_instance() {
    return reinterpret_cast<const ActionExecuteStatus*>(
               &_ActionExecuteStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ActionExecuteStatus* other);

  // implements Message ----------------------------------------------

  inline ActionExecuteStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  ActionExecuteStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ActionExecuteStatus& from);
  void MergeFrom(const ActionExecuteStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ActionExecuteStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ActionExecuteStatus_Type Type;
  static const Type STATUS_UKNOW =
    ActionExecuteStatus_Type_STATUS_UKNOW;
  static const Type STATUS_EAT =
    ActionExecuteStatus_Type_STATUS_EAT;
  static const Type STATUS_NO_EAT =
    ActionExecuteStatus_Type_STATUS_NO_EAT;
  static const Type STATUS_BATH =
    ActionExecuteStatus_Type_STATUS_BATH;
  static const Type STATUS_DRINK =
    ActionExecuteStatus_Type_STATUS_DRINK;
  static const Type STATUS_NO_DRINK =
    ActionExecuteStatus_Type_STATUS_NO_DRINK;
  static const Type STATUS_STAND =
    ActionExecuteStatus_Type_STATUS_STAND;
  static const Type STATUS_NO_STAND =
    ActionExecuteStatus_Type_STATUS_NO_STAND;
  static inline bool Type_IsValid(int value) {
    return ActionExecuteStatus_Type_IsValid(value);
  }
  static const Type Type_MIN =
    ActionExecuteStatus_Type_Type_MIN;
  static const Type Type_MAX =
    ActionExecuteStatus_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    ActionExecuteStatus_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return ActionExecuteStatus_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return ActionExecuteStatus_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return ActionExecuteStatus_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string param1 = 2;
  void clear_param1();
  static const int kParam1FieldNumber = 2;
  const ::std::string& param1() const;
  void set_param1(const ::std::string& value);
  #if LANG_CXX11
  void set_param1(::std::string&& value);
  #endif
  void set_param1(const char* value);
  void set_param1(const char* value, size_t size);
  ::std::string* mutable_param1();
  ::std::string* release_param1();
  void set_allocated_param1(::std::string* param1);

  // string param2 = 3;
  void clear_param2();
  static const int kParam2FieldNumber = 3;
  const ::std::string& param2() const;
  void set_param2(const ::std::string& value);
  #if LANG_CXX11
  void set_param2(::std::string&& value);
  #endif
  void set_param2(const char* value);
  void set_param2(const char* value, size_t size);
  ::std::string* mutable_param2();
  ::std::string* release_param2();
  void set_allocated_param2(::std::string* param2);

  // .NetProto.Action.Status.ActionExecuteStatus.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::NetProto::Action::Status::ActionExecuteStatus_Type type() const;
  void set_type(::NetProto::Action::Status::ActionExecuteStatus_Type value);

  // @@protoc_insertion_point(class_scope:NetProto.Action.Status.ActionExecuteStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr param1_;
  ::google::protobuf::internal::ArenaStringPtr param2_;
  int type_;
  mutable int _cached_size_;
  friend struct protobuf_ActionExecuteStatus_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActionExecuteStatusFeedBack : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.Action.Status.ActionExecuteStatusFeedBack) */ {
 public:
  ActionExecuteStatusFeedBack();
  virtual ~ActionExecuteStatusFeedBack();

  ActionExecuteStatusFeedBack(const ActionExecuteStatusFeedBack& from);

  inline ActionExecuteStatusFeedBack& operator=(const ActionExecuteStatusFeedBack& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionExecuteStatusFeedBack& default_instance();

  static inline const ActionExecuteStatusFeedBack* internal_default_instance() {
    return reinterpret_cast<const ActionExecuteStatusFeedBack*>(
               &_ActionExecuteStatusFeedBack_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ActionExecuteStatusFeedBack* other);

  // implements Message ----------------------------------------------

  inline ActionExecuteStatusFeedBack* New() const PROTOBUF_FINAL { return New(NULL); }

  ActionExecuteStatusFeedBack* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ActionExecuteStatusFeedBack& from);
  void MergeFrom(const ActionExecuteStatusFeedBack& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ActionExecuteStatusFeedBack* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NetProto.Action.Status.ActionExecuteStatus statusArray = 2;
  int statusarray_size() const;
  void clear_statusarray();
  static const int kStatusArrayFieldNumber = 2;
  const ::NetProto::Action::Status::ActionExecuteStatus& statusarray(int index) const;
  ::NetProto::Action::Status::ActionExecuteStatus* mutable_statusarray(int index);
  ::NetProto::Action::Status::ActionExecuteStatus* add_statusarray();
  ::google::protobuf::RepeatedPtrField< ::NetProto::Action::Status::ActionExecuteStatus >*
      mutable_statusarray();
  const ::google::protobuf::RepeatedPtrField< ::NetProto::Action::Status::ActionExecuteStatus >&
      statusarray() const;

  // repeated .NetProto.Action.Status.NaturalActionStatus natural_action_status = 3;
  int natural_action_status_size() const;
  void clear_natural_action_status();
  static const int kNaturalActionStatusFieldNumber = 3;
  const ::NetProto::Action::Status::NaturalActionStatus& natural_action_status(int index) const;
  ::NetProto::Action::Status::NaturalActionStatus* mutable_natural_action_status(int index);
  ::NetProto::Action::Status::NaturalActionStatus* add_natural_action_status();
  ::google::protobuf::RepeatedPtrField< ::NetProto::Action::Status::NaturalActionStatus >*
      mutable_natural_action_status();
  const ::google::protobuf::RepeatedPtrField< ::NetProto::Action::Status::NaturalActionStatus >&
      natural_action_status() const;

  // .NetProto.MsgHead head = 1;
  bool has_head() const;
  void clear_head();
  static const int kHeadFieldNumber = 1;
  const ::NetProto::MsgHead& head() const;
  ::NetProto::MsgHead* mutable_head();
  ::NetProto::MsgHead* release_head();
  void set_allocated_head(::NetProto::MsgHead* head);

  // @@protoc_insertion_point(class_scope:NetProto.Action.Status.ActionExecuteStatusFeedBack)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetProto::Action::Status::ActionExecuteStatus > statusarray_;
  ::google::protobuf::RepeatedPtrField< ::NetProto::Action::Status::NaturalActionStatus > natural_action_status_;
  ::NetProto::MsgHead* head_;
  mutable int _cached_size_;
  friend struct protobuf_ActionExecuteStatus_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ActionExecuteStatus

// .NetProto.Action.Status.ActionExecuteStatus.Type type = 1;
inline void ActionExecuteStatus::clear_type() {
  type_ = 0;
}
inline ::NetProto::Action::Status::ActionExecuteStatus_Type ActionExecuteStatus::type() const {
  // @@protoc_insertion_point(field_get:NetProto.Action.Status.ActionExecuteStatus.type)
  return static_cast< ::NetProto::Action::Status::ActionExecuteStatus_Type >(type_);
}
inline void ActionExecuteStatus::set_type(::NetProto::Action::Status::ActionExecuteStatus_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetProto.Action.Status.ActionExecuteStatus.type)
}

// string param1 = 2;
inline void ActionExecuteStatus::clear_param1() {
  param1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActionExecuteStatus::param1() const {
  // @@protoc_insertion_point(field_get:NetProto.Action.Status.ActionExecuteStatus.param1)
  return param1_.GetNoArena();
}
inline void ActionExecuteStatus::set_param1(const ::std::string& value) {
  
  param1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.Action.Status.ActionExecuteStatus.param1)
}
#if LANG_CXX11
inline void ActionExecuteStatus::set_param1(::std::string&& value) {
  
  param1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.Action.Status.ActionExecuteStatus.param1)
}
#endif
inline void ActionExecuteStatus::set_param1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  param1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.Action.Status.ActionExecuteStatus.param1)
}
inline void ActionExecuteStatus::set_param1(const char* value, size_t size) {
  
  param1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.Action.Status.ActionExecuteStatus.param1)
}
inline ::std::string* ActionExecuteStatus::mutable_param1() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.Action.Status.ActionExecuteStatus.param1)
  return param1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActionExecuteStatus::release_param1() {
  // @@protoc_insertion_point(field_release:NetProto.Action.Status.ActionExecuteStatus.param1)
  
  return param1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActionExecuteStatus::set_allocated_param1(::std::string* param1) {
  if (param1 != NULL) {
    
  } else {
    
  }
  param1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param1);
  // @@protoc_insertion_point(field_set_allocated:NetProto.Action.Status.ActionExecuteStatus.param1)
}

// string param2 = 3;
inline void ActionExecuteStatus::clear_param2() {
  param2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActionExecuteStatus::param2() const {
  // @@protoc_insertion_point(field_get:NetProto.Action.Status.ActionExecuteStatus.param2)
  return param2_.GetNoArena();
}
inline void ActionExecuteStatus::set_param2(const ::std::string& value) {
  
  param2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.Action.Status.ActionExecuteStatus.param2)
}
#if LANG_CXX11
inline void ActionExecuteStatus::set_param2(::std::string&& value) {
  
  param2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.Action.Status.ActionExecuteStatus.param2)
}
#endif
inline void ActionExecuteStatus::set_param2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  param2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.Action.Status.ActionExecuteStatus.param2)
}
inline void ActionExecuteStatus::set_param2(const char* value, size_t size) {
  
  param2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.Action.Status.ActionExecuteStatus.param2)
}
inline ::std::string* ActionExecuteStatus::mutable_param2() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.Action.Status.ActionExecuteStatus.param2)
  return param2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActionExecuteStatus::release_param2() {
  // @@protoc_insertion_point(field_release:NetProto.Action.Status.ActionExecuteStatus.param2)
  
  return param2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActionExecuteStatus::set_allocated_param2(::std::string* param2) {
  if (param2 != NULL) {
    
  } else {
    
  }
  param2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param2);
  // @@protoc_insertion_point(field_set_allocated:NetProto.Action.Status.ActionExecuteStatus.param2)
}

// -------------------------------------------------------------------

// ActionExecuteStatusFeedBack

// .NetProto.MsgHead head = 1;
inline bool ActionExecuteStatusFeedBack::has_head() const {
  return this != internal_default_instance() && head_ != NULL;
}
inline void ActionExecuteStatusFeedBack::clear_head() {
  if (GetArenaNoVirtual() == NULL && head_ != NULL) delete head_;
  head_ = NULL;
}
inline const ::NetProto::MsgHead& ActionExecuteStatusFeedBack::head() const {
  // @@protoc_insertion_point(field_get:NetProto.Action.Status.ActionExecuteStatusFeedBack.head)
  return head_ != NULL ? *head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
inline ::NetProto::MsgHead* ActionExecuteStatusFeedBack::mutable_head() {
  
  if (head_ == NULL) {
    head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.Action.Status.ActionExecuteStatusFeedBack.head)
  return head_;
}
inline ::NetProto::MsgHead* ActionExecuteStatusFeedBack::release_head() {
  // @@protoc_insertion_point(field_release:NetProto.Action.Status.ActionExecuteStatusFeedBack.head)
  
  ::NetProto::MsgHead* temp = head_;
  head_ = NULL;
  return temp;
}
inline void ActionExecuteStatusFeedBack::set_allocated_head(::NetProto::MsgHead* head) {
  delete head_;
  head_ = head;
  if (head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.Action.Status.ActionExecuteStatusFeedBack.head)
}

// repeated .NetProto.Action.Status.ActionExecuteStatus statusArray = 2;
inline int ActionExecuteStatusFeedBack::statusarray_size() const {
  return statusarray_.size();
}
inline void ActionExecuteStatusFeedBack::clear_statusarray() {
  statusarray_.Clear();
}
inline const ::NetProto::Action::Status::ActionExecuteStatus& ActionExecuteStatusFeedBack::statusarray(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.Action.Status.ActionExecuteStatusFeedBack.statusArray)
  return statusarray_.Get(index);
}
inline ::NetProto::Action::Status::ActionExecuteStatus* ActionExecuteStatusFeedBack::mutable_statusarray(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.Action.Status.ActionExecuteStatusFeedBack.statusArray)
  return statusarray_.Mutable(index);
}
inline ::NetProto::Action::Status::ActionExecuteStatus* ActionExecuteStatusFeedBack::add_statusarray() {
  // @@protoc_insertion_point(field_add:NetProto.Action.Status.ActionExecuteStatusFeedBack.statusArray)
  return statusarray_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetProto::Action::Status::ActionExecuteStatus >*
ActionExecuteStatusFeedBack::mutable_statusarray() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.Action.Status.ActionExecuteStatusFeedBack.statusArray)
  return &statusarray_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetProto::Action::Status::ActionExecuteStatus >&
ActionExecuteStatusFeedBack::statusarray() const {
  // @@protoc_insertion_point(field_list:NetProto.Action.Status.ActionExecuteStatusFeedBack.statusArray)
  return statusarray_;
}

// repeated .NetProto.Action.Status.NaturalActionStatus natural_action_status = 3;
inline int ActionExecuteStatusFeedBack::natural_action_status_size() const {
  return natural_action_status_.size();
}
inline void ActionExecuteStatusFeedBack::clear_natural_action_status() {
  natural_action_status_.Clear();
}
inline const ::NetProto::Action::Status::NaturalActionStatus& ActionExecuteStatusFeedBack::natural_action_status(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.Action.Status.ActionExecuteStatusFeedBack.natural_action_status)
  return natural_action_status_.Get(index);
}
inline ::NetProto::Action::Status::NaturalActionStatus* ActionExecuteStatusFeedBack::mutable_natural_action_status(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.Action.Status.ActionExecuteStatusFeedBack.natural_action_status)
  return natural_action_status_.Mutable(index);
}
inline ::NetProto::Action::Status::NaturalActionStatus* ActionExecuteStatusFeedBack::add_natural_action_status() {
  // @@protoc_insertion_point(field_add:NetProto.Action.Status.ActionExecuteStatusFeedBack.natural_action_status)
  return natural_action_status_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetProto::Action::Status::NaturalActionStatus >*
ActionExecuteStatusFeedBack::mutable_natural_action_status() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.Action.Status.ActionExecuteStatusFeedBack.natural_action_status)
  return &natural_action_status_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetProto::Action::Status::NaturalActionStatus >&
ActionExecuteStatusFeedBack::natural_action_status() const {
  // @@protoc_insertion_point(field_list:NetProto.Action.Status.ActionExecuteStatusFeedBack.natural_action_status)
  return natural_action_status_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace Status
}  // namespace Action
}  // namespace NetProto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::NetProto::Action::Status::ActionExecuteStatus_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetProto::Action::Status::ActionExecuteStatus_Type>() {
  return ::NetProto::Action::Status::ActionExecuteStatus_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ActionExecuteStatus_2eproto__INCLUDED
