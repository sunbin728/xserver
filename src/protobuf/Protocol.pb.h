// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Protocol.proto

#ifndef PROTOBUF_Protocol_2eproto__INCLUDED
#define PROTOBUF_Protocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
#include "msg_head.pb.h"
#include "robot_info.pb.h"
#include "pw_data.pb.h"
#include "natural_action_status.pb.h"
#include "obj_pos_relation.pb.h"
#include "pos_rot.pb.h"
// @@protoc_insertion_point(includes)
namespace NetProto {
class A2CAddUserResp;
class A2CAddUserRespDefaultTypeInternal;
extern A2CAddUserRespDefaultTypeInternal _A2CAddUserResp_default_instance_;
class A2CCheckUserResp;
class A2CCheckUserRespDefaultTypeInternal;
extern A2CCheckUserRespDefaultTypeInternal _A2CCheckUserResp_default_instance_;
class C2AAddUserReq;
class C2AAddUserReqDefaultTypeInternal;
extern C2AAddUserReqDefaultTypeInternal _C2AAddUserReq_default_instance_;
class C2ACheckUserReq;
class C2ACheckUserReqDefaultTypeInternal;
extern C2ACheckUserReqDefaultTypeInternal _C2ACheckUserReq_default_instance_;
class C2GSCreateRobot;
class C2GSCreateRobotDefaultTypeInternal;
extern C2GSCreateRobotDefaultTypeInternal _C2GSCreateRobot_default_instance_;
class C2GSEnterScene;
class C2GSEnterSceneDefaultTypeInternal;
extern C2GSEnterSceneDefaultTypeInternal _C2GSEnterScene_default_instance_;
class C2GSHeartBeat;
class C2GSHeartBeatDefaultTypeInternal;
extern C2GSHeartBeatDefaultTypeInternal _C2GSHeartBeat_default_instance_;
class C2GSLogin;
class C2GSLoginDefaultTypeInternal;
extern C2GSLoginDefaultTypeInternal _C2GSLogin_default_instance_;
class CreateRobotInfo;
class CreateRobotInfoDefaultTypeInternal;
extern CreateRobotInfoDefaultTypeInternal _CreateRobotInfo_default_instance_;
class CreateSceneItem;
class CreateSceneItemDefaultTypeInternal;
extern CreateSceneItemDefaultTypeInternal _CreateSceneItem_default_instance_;
class GS2CCreateRobot;
class GS2CCreateRobotDefaultTypeInternal;
extern GS2CCreateRobotDefaultTypeInternal _GS2CCreateRobot_default_instance_;
class GS2CEnterScene;
class GS2CEnterSceneDefaultTypeInternal;
extern GS2CEnterSceneDefaultTypeInternal _GS2CEnterScene_default_instance_;
class GS2CEnterScene_ObjInfo;
class GS2CEnterScene_ObjInfoDefaultTypeInternal;
extern GS2CEnterScene_ObjInfoDefaultTypeInternal _GS2CEnterScene_ObjInfo_default_instance_;
class GS2CLogin;
class GS2CLoginDefaultTypeInternal;
extern GS2CLoginDefaultTypeInternal _GS2CLogin_default_instance_;
class GS2MTSCreateRobot;
class GS2MTSCreateRobotDefaultTypeInternal;
extern GS2MTSCreateRobotDefaultTypeInternal _GS2MTSCreateRobot_default_instance_;
class GS2MTSCreateScene;
class GS2MTSCreateSceneDefaultTypeInternal;
extern GS2MTSCreateSceneDefaultTypeInternal _GS2MTSCreateScene_default_instance_;
class GS2MTSGetRobotList;
class GS2MTSGetRobotListDefaultTypeInternal;
extern GS2MTSGetRobotListDefaultTypeInternal _GS2MTSGetRobotList_default_instance_;
class GS2MTSGetSceneItem;
class GS2MTSGetSceneItemDefaultTypeInternal;
extern GS2MTSGetSceneItemDefaultTypeInternal _GS2MTSGetSceneItem_default_instance_;
class GS2MTSHeart;
class GS2MTSHeartDefaultTypeInternal;
extern GS2MTSHeartDefaultTypeInternal _GS2MTSHeart_default_instance_;
class GS2PWGetPWData;
class GS2PWGetPWDataDefaultTypeInternal;
extern GS2PWGetPWDataDefaultTypeInternal _GS2PWGetPWData_default_instance_;
class MTS2GSCreateRobot;
class MTS2GSCreateRobotDefaultTypeInternal;
extern MTS2GSCreateRobotDefaultTypeInternal _MTS2GSCreateRobot_default_instance_;
class MTS2GSCreateScene;
class MTS2GSCreateSceneDefaultTypeInternal;
extern MTS2GSCreateSceneDefaultTypeInternal _MTS2GSCreateScene_default_instance_;
class MTS2GSGetRobotList;
class MTS2GSGetRobotListDefaultTypeInternal;
extern MTS2GSGetRobotListDefaultTypeInternal _MTS2GSGetRobotList_default_instance_;
class MTS2GSGetSceneItem;
class MTS2GSGetSceneItemDefaultTypeInternal;
extern MTS2GSGetSceneItemDefaultTypeInternal _MTS2GSGetSceneItem_default_instance_;
class MsgHead;
class MsgHeadDefaultTypeInternal;
extern MsgHeadDefaultTypeInternal _MsgHead_default_instance_;
class ObjPosRelation;
class ObjPosRelationDefaultTypeInternal;
extern ObjPosRelationDefaultTypeInternal _ObjPosRelation_default_instance_;
class PW2GSNotifyPWData;
class PW2GSNotifyPWDataDefaultTypeInternal;
extern PW2GSNotifyPWDataDefaultTypeInternal _PW2GSNotifyPWData_default_instance_;
class PWDataRobotInfoParam;
class PWDataRobotInfoParamDefaultTypeInternal;
extern PWDataRobotInfoParamDefaultTypeInternal _PWDataRobotInfoParam_default_instance_;
class PWDataSceneMapParam;
class PWDataSceneMapParamDefaultTypeInternal;
extern PWDataSceneMapParamDefaultTypeInternal _PWDataSceneMapParam_default_instance_;
class PosRot;
class PosRotDefaultTypeInternal;
extern PosRotDefaultTypeInternal _PosRot_default_instance_;
class RobotInfo;
class RobotInfoDefaultTypeInternal;
extern RobotInfoDefaultTypeInternal _RobotInfo_default_instance_;
class RobotOffline;
class RobotOfflineDefaultTypeInternal;
extern RobotOfflineDefaultTypeInternal _RobotOffline_default_instance_;
class SceneData;
class SceneDataDefaultTypeInternal;
extern SceneDataDefaultTypeInternal _SceneData_default_instance_;
class SceneData_ObjInfo;
class SceneData_ObjInfoDefaultTypeInternal;
extern SceneData_ObjInfoDefaultTypeInternal _SceneData_ObjInfo_default_instance_;
class UniversalProtocol;
class UniversalProtocolDefaultTypeInternal;
extern UniversalProtocolDefaultTypeInternal _UniversalProtocol_default_instance_;
namespace Action {
namespace Status {
class ActStatus;
class ActStatusDefaultTypeInternal;
extern ActStatusDefaultTypeInternal _ActStatus_default_instance_;
class AllOpenStatus;
class AllOpenStatusDefaultTypeInternal;
extern AllOpenStatusDefaultTypeInternal _AllOpenStatus_default_instance_;
class AttrStatus;
class AttrStatusDefaultTypeInternal;
extern AttrStatusDefaultTypeInternal _AttrStatus_default_instance_;
class BurnStatus;
class BurnStatusDefaultTypeInternal;
extern BurnStatusDefaultTypeInternal _BurnStatus_default_instance_;
class ContainerStatus;
class ContainerStatusDefaultTypeInternal;
extern ContainerStatusDefaultTypeInternal _ContainerStatus_default_instance_;
class EmsComing;
class EmsComingDefaultTypeInternal;
extern EmsComingDefaultTypeInternal _EmsComing_default_instance_;
class FillAttr;
class FillAttrDefaultTypeInternal;
extern FillAttrDefaultTypeInternal _FillAttr_default_instance_;
class NaturalActionStatus;
class NaturalActionStatusDefaultTypeInternal;
extern NaturalActionStatusDefaultTypeInternal _NaturalActionStatus_default_instance_;
class NaturalActionStatusData;
class NaturalActionStatusDataDefaultTypeInternal;
extern NaturalActionStatusDataDefaultTypeInternal _NaturalActionStatusData_default_instance_;
class NotifyNaturalStatusChange;
class NotifyNaturalStatusChangeDefaultTypeInternal;
extern NotifyNaturalStatusChangeDefaultTypeInternal _NotifyNaturalStatusChange_default_instance_;
class OpenStatus;
class OpenStatusDefaultTypeInternal;
extern OpenStatusDefaultTypeInternal _OpenStatus_default_instance_;
}  // namespace Status
}  // namespace Action
}  // namespace NetProto
namespace google {
namespace protobuf {
class Any;
class AnyDefaultTypeInternal;
extern AnyDefaultTypeInternal _Any_default_instance_;
}  // namespace protobuf
}  // namespace google

namespace NetProto {

namespace protobuf_Protocol_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_Protocol_2eproto

enum MsgCommand {
  C2A_ADD_USER_REQ = 0,
  C2A_CHECK_USER_REQ = 1,
  A2C_ADD_USER_RESP = 100,
  A2C_CHECK_USER_RESP = 101,
  C2GS_HEART_BEAT = 200,
  C2GS_LOGIN = 201,
  C2GS_CREATE_ROBOT = 202,
  C2GS_ENTER_SCENE = 203,
  GS2C_LOGIN = 300,
  GS2C_CREATE_ROBOT = 301,
  GS2C_ENTER_SCENE = 302,
  GS2PW_HEART_BEAT = 400,
  GS2PW_ROBOT_ONLINE = 401,
  GS2PW_ROBOT_OFFLINE = 402,
  GS2PW_CREATE_ROBOT = 403,
  GS2PW_ALL_WORLD_DATA = 404,
  GS2PW_GET_PW_DATA = 405,
  PW2GS_ROBOT_ONLINE = 500,
  PW2GS_ROBOT_OFFLINE = 501,
  PW2GS_CREATE_ROBOT = 502,
  PW2GS_ALL_WORLD_DATA = 503,
  PW2GS_GET_PW_DATA = 504,
  GS2MTS_HEART_BEAT = 600,
  GS2MTS_GET_ROBOT_LIST = 601,
  GS2MTS_CREATE_ROBOT = 602,
  GS2MTS_GET_SCENE_ITEM = 603,
  GS2MTS_CREATE_SCENE = 604,
  MTS2GS_GET_ROBOT_LIST = 700,
  MTS2GS_CREATE_ROBOT = 701,
  MTS2GS_CREATE_SCENE = 702,
  MTS2GS_GET_SCENE_ITEM = 703,
  CommunicateTest = 999999,
  MsgCommand_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MsgCommand_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MsgCommand_IsValid(int value);
const MsgCommand MsgCommand_MIN = C2A_ADD_USER_REQ;
const MsgCommand MsgCommand_MAX = CommunicateTest;
const int MsgCommand_ARRAYSIZE = MsgCommand_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgCommand_descriptor();
inline const ::std::string& MsgCommand_Name(MsgCommand value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgCommand_descriptor(), value);
}
inline bool MsgCommand_Parse(
    const ::std::string& name, MsgCommand* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgCommand>(
    MsgCommand_descriptor(), name, value);
}
// ===================================================================

class UniversalProtocol : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.UniversalProtocol) */ {
 public:
  UniversalProtocol();
  virtual ~UniversalProtocol();

  UniversalProtocol(const UniversalProtocol& from);

  inline UniversalProtocol& operator=(const UniversalProtocol& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UniversalProtocol& default_instance();

  static inline const UniversalProtocol* internal_default_instance() {
    return reinterpret_cast<const UniversalProtocol*>(
               &_UniversalProtocol_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(UniversalProtocol* other);

  // implements Message ----------------------------------------------

  inline UniversalProtocol* New() const PROTOBUF_FINAL { return New(NULL); }

  UniversalProtocol* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UniversalProtocol& from);
  void MergeFrom(const UniversalProtocol& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UniversalProtocol* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 communicateTest = 1;
  void clear_communicatetest();
  static const int kCommunicateTestFieldNumber = 1;
  ::google::protobuf::uint32 communicatetest() const;
  void set_communicatetest(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetProto.UniversalProtocol)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 communicatetest_;
  mutable int _cached_size_;
  friend struct protobuf_Protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateSceneItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.CreateSceneItem) */ {
 public:
  CreateSceneItem();
  virtual ~CreateSceneItem();

  CreateSceneItem(const CreateSceneItem& from);

  inline CreateSceneItem& operator=(const CreateSceneItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateSceneItem& default_instance();

  static inline const CreateSceneItem* internal_default_instance() {
    return reinterpret_cast<const CreateSceneItem*>(
               &_CreateSceneItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CreateSceneItem* other);

  // implements Message ----------------------------------------------

  inline CreateSceneItem* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateSceneItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateSceneItem& from);
  void MergeFrom(const CreateSceneItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateSceneItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string objectUuid = 1;
  void clear_objectuuid();
  static const int kObjectUuidFieldNumber = 1;
  const ::std::string& objectuuid() const;
  void set_objectuuid(const ::std::string& value);
  #if LANG_CXX11
  void set_objectuuid(::std::string&& value);
  #endif
  void set_objectuuid(const char* value);
  void set_objectuuid(const char* value, size_t size);
  ::std::string* mutable_objectuuid();
  ::std::string* release_objectuuid();
  void set_allocated_objectuuid(::std::string* objectuuid);

  // uint32 itemID = 2;
  void clear_itemid();
  static const int kItemIDFieldNumber = 2;
  ::google::protobuf::uint32 itemid() const;
  void set_itemid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetProto.CreateSceneItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr objectuuid_;
  ::google::protobuf::uint32 itemid_;
  mutable int _cached_size_;
  friend struct protobuf_Protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateRobotInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.CreateRobotInfo) */ {
 public:
  CreateRobotInfo();
  virtual ~CreateRobotInfo();

  CreateRobotInfo(const CreateRobotInfo& from);

  inline CreateRobotInfo& operator=(const CreateRobotInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateRobotInfo& default_instance();

  static inline const CreateRobotInfo* internal_default_instance() {
    return reinterpret_cast<const CreateRobotInfo*>(
               &_CreateRobotInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CreateRobotInfo* other);

  // implements Message ----------------------------------------------

  inline CreateRobotInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateRobotInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateRobotInfo& from);
  void MergeFrom(const CreateRobotInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateRobotInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string robotID = 1;
  void clear_robotid();
  static const int kRobotIDFieldNumber = 1;
  const ::std::string& robotid() const;
  void set_robotid(const ::std::string& value);
  #if LANG_CXX11
  void set_robotid(::std::string&& value);
  #endif
  void set_robotid(const char* value);
  void set_robotid(const char* value, size_t size);
  ::std::string* mutable_robotid();
  ::std::string* release_robotid();
  void set_allocated_robotid(::std::string* robotid);

  // uint32 robotPrototypeID = 2;
  void clear_robotprototypeid();
  static const int kRobotPrototypeIDFieldNumber = 2;
  ::google::protobuf::uint32 robotprototypeid() const;
  void set_robotprototypeid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetProto.CreateRobotInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr robotid_;
  ::google::protobuf::uint32 robotprototypeid_;
  mutable int _cached_size_;
  friend struct protobuf_Protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneData_ObjInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.SceneData.ObjInfo) */ {
 public:
  SceneData_ObjInfo();
  virtual ~SceneData_ObjInfo();

  SceneData_ObjInfo(const SceneData_ObjInfo& from);

  inline SceneData_ObjInfo& operator=(const SceneData_ObjInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneData_ObjInfo& default_instance();

  static inline const SceneData_ObjInfo* internal_default_instance() {
    return reinterpret_cast<const SceneData_ObjInfo*>(
               &_SceneData_ObjInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(SceneData_ObjInfo* other);

  // implements Message ----------------------------------------------

  inline SceneData_ObjInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneData_ObjInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneData_ObjInfo& from);
  void MergeFrom(const SceneData_ObjInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneData_ObjInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 1;
  void clear_uuid();
  static const int kUuidFieldNumber = 1;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // .NetProto.PosRot pos_rot = 4;
  bool has_pos_rot() const;
  void clear_pos_rot();
  static const int kPosRotFieldNumber = 4;
  const ::NetProto::PosRot& pos_rot() const;
  ::NetProto::PosRot* mutable_pos_rot();
  ::NetProto::PosRot* release_pos_rot();
  void set_allocated_pos_rot(::NetProto::PosRot* pos_rot);

  // uint32 class_id = 2;
  void clear_class_id();
  static const int kClassIdFieldNumber = 2;
  ::google::protobuf::uint32 class_id() const;
  void set_class_id(::google::protobuf::uint32 value);

  // uint32 item_id = 3;
  void clear_item_id();
  static const int kItemIdFieldNumber = 3;
  ::google::protobuf::uint32 item_id() const;
  void set_item_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetProto.SceneData.ObjInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::NetProto::PosRot* pos_rot_;
  ::google::protobuf::uint32 class_id_;
  ::google::protobuf::uint32 item_id_;
  mutable int _cached_size_;
  friend struct protobuf_Protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.SceneData) */ {
 public:
  SceneData();
  virtual ~SceneData();

  SceneData(const SceneData& from);

  inline SceneData& operator=(const SceneData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneData& default_instance();

  static inline const SceneData* internal_default_instance() {
    return reinterpret_cast<const SceneData*>(
               &_SceneData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(SceneData* other);

  // implements Message ----------------------------------------------

  inline SceneData* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneData& from);
  void MergeFrom(const SceneData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneData_ObjInfo ObjInfo;

  // accessors -------------------------------------------------------

  // repeated .NetProto.SceneData.ObjInfo objInfo = 3;
  int objinfo_size() const;
  void clear_objinfo();
  static const int kObjInfoFieldNumber = 3;
  const ::NetProto::SceneData_ObjInfo& objinfo(int index) const;
  ::NetProto::SceneData_ObjInfo* mutable_objinfo(int index);
  ::NetProto::SceneData_ObjInfo* add_objinfo();
  ::google::protobuf::RepeatedPtrField< ::NetProto::SceneData_ObjInfo >*
      mutable_objinfo();
  const ::google::protobuf::RepeatedPtrField< ::NetProto::SceneData_ObjInfo >&
      objinfo() const;

  // repeated .NetProto.Action.Status.NaturalActionStatus statusVector = 4;
  int statusvector_size() const;
  void clear_statusvector();
  static const int kStatusVectorFieldNumber = 4;
  const ::NetProto::Action::Status::NaturalActionStatus& statusvector(int index) const;
  ::NetProto::Action::Status::NaturalActionStatus* mutable_statusvector(int index);
  ::NetProto::Action::Status::NaturalActionStatus* add_statusvector();
  ::google::protobuf::RepeatedPtrField< ::NetProto::Action::Status::NaturalActionStatus >*
      mutable_statusvector();
  const ::google::protobuf::RepeatedPtrField< ::NetProto::Action::Status::NaturalActionStatus >&
      statusvector() const;

  // string robot_id = 1;
  void clear_robot_id();
  static const int kRobotIdFieldNumber = 1;
  const ::std::string& robot_id() const;
  void set_robot_id(const ::std::string& value);
  #if LANG_CXX11
  void set_robot_id(::std::string&& value);
  #endif
  void set_robot_id(const char* value);
  void set_robot_id(const char* value, size_t size);
  ::std::string* mutable_robot_id();
  ::std::string* release_robot_id();
  void set_allocated_robot_id(::std::string* robot_id);

  // uint32 map_id = 2;
  void clear_map_id();
  static const int kMapIdFieldNumber = 2;
  ::google::protobuf::uint32 map_id() const;
  void set_map_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetProto.SceneData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetProto::SceneData_ObjInfo > objinfo_;
  ::google::protobuf::RepeatedPtrField< ::NetProto::Action::Status::NaturalActionStatus > statusvector_;
  ::google::protobuf::internal::ArenaStringPtr robot_id_;
  ::google::protobuf::uint32 map_id_;
  mutable int _cached_size_;
  friend struct protobuf_Protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class C2AAddUserReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.C2AAddUserReq) */ {
 public:
  C2AAddUserReq();
  virtual ~C2AAddUserReq();

  C2AAddUserReq(const C2AAddUserReq& from);

  inline C2AAddUserReq& operator=(const C2AAddUserReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2AAddUserReq& default_instance();

  static inline const C2AAddUserReq* internal_default_instance() {
    return reinterpret_cast<const C2AAddUserReq*>(
               &_C2AAddUserReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(C2AAddUserReq* other);

  // implements Message ----------------------------------------------

  inline C2AAddUserReq* New() const PROTOBUF_FINAL { return New(NULL); }

  C2AAddUserReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C2AAddUserReq& from);
  void MergeFrom(const C2AAddUserReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C2AAddUserReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Seq = 2;
  void clear_seq();
  static const int kSeqFieldNumber = 2;
  const ::std::string& seq() const;
  void set_seq(const ::std::string& value);
  #if LANG_CXX11
  void set_seq(::std::string&& value);
  #endif
  void set_seq(const char* value);
  void set_seq(const char* value, size_t size);
  ::std::string* mutable_seq();
  ::std::string* release_seq();
  void set_allocated_seq(::std::string* seq);

  // string Appid = 3;
  void clear_appid();
  static const int kAppidFieldNumber = 3;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // string Uname = 4;
  void clear_uname();
  static const int kUnameFieldNumber = 4;
  const ::std::string& uname() const;
  void set_uname(const ::std::string& value);
  #if LANG_CXX11
  void set_uname(::std::string&& value);
  #endif
  void set_uname(const char* value);
  void set_uname(const char* value, size_t size);
  ::std::string* mutable_uname();
  ::std::string* release_uname();
  void set_allocated_uname(::std::string* uname);

  // string Password = 5;
  void clear_password();
  static const int kPasswordFieldNumber = 5;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // .NetProto.MsgHead Header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::NetProto::MsgHead& header() const;
  ::NetProto::MsgHead* mutable_header();
  ::NetProto::MsgHead* release_header();
  void set_allocated_header(::NetProto::MsgHead* header);

  // @@protoc_insertion_point(class_scope:NetProto.C2AAddUserReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr seq_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::google::protobuf::internal::ArenaStringPtr uname_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::NetProto::MsgHead* header_;
  mutable int _cached_size_;
  friend struct protobuf_Protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class C2ACheckUserReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.C2ACheckUserReq) */ {
 public:
  C2ACheckUserReq();
  virtual ~C2ACheckUserReq();

  C2ACheckUserReq(const C2ACheckUserReq& from);

  inline C2ACheckUserReq& operator=(const C2ACheckUserReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2ACheckUserReq& default_instance();

  static inline const C2ACheckUserReq* internal_default_instance() {
    return reinterpret_cast<const C2ACheckUserReq*>(
               &_C2ACheckUserReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(C2ACheckUserReq* other);

  // implements Message ----------------------------------------------

  inline C2ACheckUserReq* New() const PROTOBUF_FINAL { return New(NULL); }

  C2ACheckUserReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C2ACheckUserReq& from);
  void MergeFrom(const C2ACheckUserReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C2ACheckUserReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Seq = 2;
  void clear_seq();
  static const int kSeqFieldNumber = 2;
  const ::std::string& seq() const;
  void set_seq(const ::std::string& value);
  #if LANG_CXX11
  void set_seq(::std::string&& value);
  #endif
  void set_seq(const char* value);
  void set_seq(const char* value, size_t size);
  ::std::string* mutable_seq();
  ::std::string* release_seq();
  void set_allocated_seq(::std::string* seq);

  // string Appid = 3;
  void clear_appid();
  static const int kAppidFieldNumber = 3;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // string Uname = 4;
  void clear_uname();
  static const int kUnameFieldNumber = 4;
  const ::std::string& uname() const;
  void set_uname(const ::std::string& value);
  #if LANG_CXX11
  void set_uname(::std::string&& value);
  #endif
  void set_uname(const char* value);
  void set_uname(const char* value, size_t size);
  ::std::string* mutable_uname();
  ::std::string* release_uname();
  void set_allocated_uname(::std::string* uname);

  // string Password = 5;
  void clear_password();
  static const int kPasswordFieldNumber = 5;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // .NetProto.MsgHead Header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::NetProto::MsgHead& header() const;
  ::NetProto::MsgHead* mutable_header();
  ::NetProto::MsgHead* release_header();
  void set_allocated_header(::NetProto::MsgHead* header);

  // @@protoc_insertion_point(class_scope:NetProto.C2ACheckUserReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr seq_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::google::protobuf::internal::ArenaStringPtr uname_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::NetProto::MsgHead* header_;
  mutable int _cached_size_;
  friend struct protobuf_Protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class A2CAddUserResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.A2CAddUserResp) */ {
 public:
  A2CAddUserResp();
  virtual ~A2CAddUserResp();

  A2CAddUserResp(const A2CAddUserResp& from);

  inline A2CAddUserResp& operator=(const A2CAddUserResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const A2CAddUserResp& default_instance();

  static inline const A2CAddUserResp* internal_default_instance() {
    return reinterpret_cast<const A2CAddUserResp*>(
               &_A2CAddUserResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(A2CAddUserResp* other);

  // implements Message ----------------------------------------------

  inline A2CAddUserResp* New() const PROTOBUF_FINAL { return New(NULL); }

  A2CAddUserResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const A2CAddUserResp& from);
  void MergeFrom(const A2CAddUserResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(A2CAddUserResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Seq = 2;
  void clear_seq();
  static const int kSeqFieldNumber = 2;
  const ::std::string& seq() const;
  void set_seq(const ::std::string& value);
  #if LANG_CXX11
  void set_seq(::std::string&& value);
  #endif
  void set_seq(const char* value);
  void set_seq(const char* value, size_t size);
  ::std::string* mutable_seq();
  ::std::string* release_seq();
  void set_allocated_seq(::std::string* seq);

  // string Msg = 4;
  void clear_msg();
  static const int kMsgFieldNumber = 4;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // string Uname = 6;
  void clear_uname();
  static const int kUnameFieldNumber = 6;
  const ::std::string& uname() const;
  void set_uname(const ::std::string& value);
  #if LANG_CXX11
  void set_uname(::std::string&& value);
  #endif
  void set_uname(const char* value);
  void set_uname(const char* value, size_t size);
  ::std::string* mutable_uname();
  ::std::string* release_uname();
  void set_allocated_uname(::std::string* uname);

  // .NetProto.MsgHead Header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::NetProto::MsgHead& header() const;
  ::NetProto::MsgHead* mutable_header();
  ::NetProto::MsgHead* release_header();
  void set_allocated_header(::NetProto::MsgHead* header);

  // int64 Result = 3;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::google::protobuf::int64 result() const;
  void set_result(::google::protobuf::int64 value);

  // int64 Uid = 5;
  void clear_uid();
  static const int kUidFieldNumber = 5;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:NetProto.A2CAddUserResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr seq_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr uname_;
  ::NetProto::MsgHead* header_;
  ::google::protobuf::int64 result_;
  ::google::protobuf::int64 uid_;
  mutable int _cached_size_;
  friend struct protobuf_Protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class A2CCheckUserResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.A2CCheckUserResp) */ {
 public:
  A2CCheckUserResp();
  virtual ~A2CCheckUserResp();

  A2CCheckUserResp(const A2CCheckUserResp& from);

  inline A2CCheckUserResp& operator=(const A2CCheckUserResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const A2CCheckUserResp& default_instance();

  static inline const A2CCheckUserResp* internal_default_instance() {
    return reinterpret_cast<const A2CCheckUserResp*>(
               &_A2CCheckUserResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(A2CCheckUserResp* other);

  // implements Message ----------------------------------------------

  inline A2CCheckUserResp* New() const PROTOBUF_FINAL { return New(NULL); }

  A2CCheckUserResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const A2CCheckUserResp& from);
  void MergeFrom(const A2CCheckUserResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(A2CCheckUserResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Seq = 2;
  void clear_seq();
  static const int kSeqFieldNumber = 2;
  const ::std::string& seq() const;
  void set_seq(const ::std::string& value);
  #if LANG_CXX11
  void set_seq(::std::string&& value);
  #endif
  void set_seq(const char* value);
  void set_seq(const char* value, size_t size);
  ::std::string* mutable_seq();
  ::std::string* release_seq();
  void set_allocated_seq(::std::string* seq);

  // string Msg = 4;
  void clear_msg();
  static const int kMsgFieldNumber = 4;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // string Uname = 6;
  void clear_uname();
  static const int kUnameFieldNumber = 6;
  const ::std::string& uname() const;
  void set_uname(const ::std::string& value);
  #if LANG_CXX11
  void set_uname(::std::string&& value);
  #endif
  void set_uname(const char* value);
  void set_uname(const char* value, size_t size);
  ::std::string* mutable_uname();
  ::std::string* release_uname();
  void set_allocated_uname(::std::string* uname);

  // string GameServerAddr = 7;
  void clear_gameserveraddr();
  static const int kGameServerAddrFieldNumber = 7;
  const ::std::string& gameserveraddr() const;
  void set_gameserveraddr(const ::std::string& value);
  #if LANG_CXX11
  void set_gameserveraddr(::std::string&& value);
  #endif
  void set_gameserveraddr(const char* value);
  void set_gameserveraddr(const char* value, size_t size);
  ::std::string* mutable_gameserveraddr();
  ::std::string* release_gameserveraddr();
  void set_allocated_gameserveraddr(::std::string* gameserveraddr);

  // .NetProto.MsgHead Header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::NetProto::MsgHead& header() const;
  ::NetProto::MsgHead* mutable_header();
  ::NetProto::MsgHead* release_header();
  void set_allocated_header(::NetProto::MsgHead* header);

  // int64 Result = 3;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::google::protobuf::int64 result() const;
  void set_result(::google::protobuf::int64 value);

  // int64 Uid = 5;
  void clear_uid();
  static const int kUidFieldNumber = 5;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:NetProto.A2CCheckUserResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr seq_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr uname_;
  ::google::protobuf::internal::ArenaStringPtr gameserveraddr_;
  ::NetProto::MsgHead* header_;
  ::google::protobuf::int64 result_;
  ::google::protobuf::int64 uid_;
  mutable int _cached_size_;
  friend struct protobuf_Protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class C2GSHeartBeat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.C2GSHeartBeat) */ {
 public:
  C2GSHeartBeat();
  virtual ~C2GSHeartBeat();

  C2GSHeartBeat(const C2GSHeartBeat& from);

  inline C2GSHeartBeat& operator=(const C2GSHeartBeat& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GSHeartBeat& default_instance();

  static inline const C2GSHeartBeat* internal_default_instance() {
    return reinterpret_cast<const C2GSHeartBeat*>(
               &_C2GSHeartBeat_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(C2GSHeartBeat* other);

  // implements Message ----------------------------------------------

  inline C2GSHeartBeat* New() const PROTOBUF_FINAL { return New(NULL); }

  C2GSHeartBeat* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C2GSHeartBeat& from);
  void MergeFrom(const C2GSHeartBeat& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C2GSHeartBeat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 clientID = 1;
  void clear_clientid();
  static const int kClientIDFieldNumber = 1;
  ::google::protobuf::uint32 clientid() const;
  void set_clientid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetProto.C2GSHeartBeat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 clientid_;
  mutable int _cached_size_;
  friend struct protobuf_Protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class C2GSLogin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.C2GSLogin) */ {
 public:
  C2GSLogin();
  virtual ~C2GSLogin();

  C2GSLogin(const C2GSLogin& from);

  inline C2GSLogin& operator=(const C2GSLogin& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GSLogin& default_instance();

  static inline const C2GSLogin* internal_default_instance() {
    return reinterpret_cast<const C2GSLogin*>(
               &_C2GSLogin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(C2GSLogin* other);

  // implements Message ----------------------------------------------

  inline C2GSLogin* New() const PROTOBUF_FINAL { return New(NULL); }

  C2GSLogin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C2GSLogin& from);
  void MergeFrom(const C2GSLogin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C2GSLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 accountID = 1;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  ::google::protobuf::uint32 accountid() const;
  void set_accountid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetProto.C2GSLogin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 accountid_;
  mutable int _cached_size_;
  friend struct protobuf_Protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class C2GSCreateRobot : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.C2GSCreateRobot) */ {
 public:
  C2GSCreateRobot();
  virtual ~C2GSCreateRobot();

  C2GSCreateRobot(const C2GSCreateRobot& from);

  inline C2GSCreateRobot& operator=(const C2GSCreateRobot& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GSCreateRobot& default_instance();

  static inline const C2GSCreateRobot* internal_default_instance() {
    return reinterpret_cast<const C2GSCreateRobot*>(
               &_C2GSCreateRobot_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(C2GSCreateRobot* other);

  // implements Message ----------------------------------------------

  inline C2GSCreateRobot* New() const PROTOBUF_FINAL { return New(NULL); }

  C2GSCreateRobot* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C2GSCreateRobot& from);
  void MergeFrom(const C2GSCreateRobot& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C2GSCreateRobot* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 accountID = 1;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  ::google::protobuf::uint32 accountid() const;
  void set_accountid(::google::protobuf::uint32 value);

  // uint32 robotType = 2;
  void clear_robottype();
  static const int kRobotTypeFieldNumber = 2;
  ::google::protobuf::uint32 robottype() const;
  void set_robottype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetProto.C2GSCreateRobot)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 robottype_;
  mutable int _cached_size_;
  friend struct protobuf_Protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class C2GSEnterScene : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.C2GSEnterScene) */ {
 public:
  C2GSEnterScene();
  virtual ~C2GSEnterScene();

  C2GSEnterScene(const C2GSEnterScene& from);

  inline C2GSEnterScene& operator=(const C2GSEnterScene& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2GSEnterScene& default_instance();

  static inline const C2GSEnterScene* internal_default_instance() {
    return reinterpret_cast<const C2GSEnterScene*>(
               &_C2GSEnterScene_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(C2GSEnterScene* other);

  // implements Message ----------------------------------------------

  inline C2GSEnterScene* New() const PROTOBUF_FINAL { return New(NULL); }

  C2GSEnterScene* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C2GSEnterScene& from);
  void MergeFrom(const C2GSEnterScene& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C2GSEnterScene* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .NetProto.MsgHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::NetProto::MsgHead& msghead() const;
  ::NetProto::MsgHead* mutable_msghead();
  ::NetProto::MsgHead* release_msghead();
  void set_allocated_msghead(::NetProto::MsgHead* msghead);

  // uint32 accountID = 2;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 2;
  ::google::protobuf::uint32 accountid() const;
  void set_accountid(::google::protobuf::uint32 value);

  // uint32 sceneType = 3;
  void clear_scenetype();
  static const int kSceneTypeFieldNumber = 3;
  ::google::protobuf::uint32 scenetype() const;
  void set_scenetype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetProto.C2GSEnterScene)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetProto::MsgHead* msghead_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 scenetype_;
  mutable int _cached_size_;
  friend struct protobuf_Protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GS2CLogin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.GS2CLogin) */ {
 public:
  GS2CLogin();
  virtual ~GS2CLogin();

  GS2CLogin(const GS2CLogin& from);

  inline GS2CLogin& operator=(const GS2CLogin& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2CLogin& default_instance();

  static inline const GS2CLogin* internal_default_instance() {
    return reinterpret_cast<const GS2CLogin*>(
               &_GS2CLogin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(GS2CLogin* other);

  // implements Message ----------------------------------------------

  inline GS2CLogin* New() const PROTOBUF_FINAL { return New(NULL); }

  GS2CLogin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GS2CLogin& from);
  void MergeFrom(const GS2CLogin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GS2CLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NetProto.CreateRobotInfo robotList = 4;
  int robotlist_size() const;
  void clear_robotlist();
  static const int kRobotListFieldNumber = 4;
  const ::NetProto::CreateRobotInfo& robotlist(int index) const;
  ::NetProto::CreateRobotInfo* mutable_robotlist(int index);
  ::NetProto::CreateRobotInfo* add_robotlist();
  ::google::protobuf::RepeatedPtrField< ::NetProto::CreateRobotInfo >*
      mutable_robotlist();
  const ::google::protobuf::RepeatedPtrField< ::NetProto::CreateRobotInfo >&
      robotlist() const;

  // string ret = 2;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  const ::std::string& ret() const;
  void set_ret(const ::std::string& value);
  #if LANG_CXX11
  void set_ret(::std::string&& value);
  #endif
  void set_ret(const char* value);
  void set_ret(const char* value, size_t size);
  ::std::string* mutable_ret();
  ::std::string* release_ret();
  void set_allocated_ret(::std::string* ret);

  // bool isSuccess = 1;
  void clear_issuccess();
  static const int kIsSuccessFieldNumber = 1;
  bool issuccess() const;
  void set_issuccess(bool value);

  // uint32 robotFlag = 3;
  void clear_robotflag();
  static const int kRobotFlagFieldNumber = 3;
  ::google::protobuf::uint32 robotflag() const;
  void set_robotflag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetProto.GS2CLogin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetProto::CreateRobotInfo > robotlist_;
  ::google::protobuf::internal::ArenaStringPtr ret_;
  bool issuccess_;
  ::google::protobuf::uint32 robotflag_;
  mutable int _cached_size_;
  friend struct protobuf_Protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GS2CCreateRobot : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.GS2CCreateRobot) */ {
 public:
  GS2CCreateRobot();
  virtual ~GS2CCreateRobot();

  GS2CCreateRobot(const GS2CCreateRobot& from);

  inline GS2CCreateRobot& operator=(const GS2CCreateRobot& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2CCreateRobot& default_instance();

  static inline const GS2CCreateRobot* internal_default_instance() {
    return reinterpret_cast<const GS2CCreateRobot*>(
               &_GS2CCreateRobot_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(GS2CCreateRobot* other);

  // implements Message ----------------------------------------------

  inline GS2CCreateRobot* New() const PROTOBUF_FINAL { return New(NULL); }

  GS2CCreateRobot* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GS2CCreateRobot& from);
  void MergeFrom(const GS2CCreateRobot& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GS2CCreateRobot* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ret = 2;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  const ::std::string& ret() const;
  void set_ret(const ::std::string& value);
  #if LANG_CXX11
  void set_ret(::std::string&& value);
  #endif
  void set_ret(const char* value);
  void set_ret(const char* value, size_t size);
  ::std::string* mutable_ret();
  ::std::string* release_ret();
  void set_allocated_ret(::std::string* ret);

  // .NetProto.RobotInfo robotInfo = 3;
  bool has_robotinfo() const;
  void clear_robotinfo();
  static const int kRobotInfoFieldNumber = 3;
  const ::NetProto::RobotInfo& robotinfo() const;
  ::NetProto::RobotInfo* mutable_robotinfo();
  ::NetProto::RobotInfo* release_robotinfo();
  void set_allocated_robotinfo(::NetProto::RobotInfo* robotinfo);

  // bool isSuccess = 1;
  void clear_issuccess();
  static const int kIsSuccessFieldNumber = 1;
  bool issuccess() const;
  void set_issuccess(bool value);

  // @@protoc_insertion_point(class_scope:NetProto.GS2CCreateRobot)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ret_;
  ::NetProto::RobotInfo* robotinfo_;
  bool issuccess_;
  mutable int _cached_size_;
  friend struct protobuf_Protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GS2CEnterScene_ObjInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.GS2CEnterScene.ObjInfo) */ {
 public:
  GS2CEnterScene_ObjInfo();
  virtual ~GS2CEnterScene_ObjInfo();

  GS2CEnterScene_ObjInfo(const GS2CEnterScene_ObjInfo& from);

  inline GS2CEnterScene_ObjInfo& operator=(const GS2CEnterScene_ObjInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2CEnterScene_ObjInfo& default_instance();

  static inline const GS2CEnterScene_ObjInfo* internal_default_instance() {
    return reinterpret_cast<const GS2CEnterScene_ObjInfo*>(
               &_GS2CEnterScene_ObjInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(GS2CEnterScene_ObjInfo* other);

  // implements Message ----------------------------------------------

  inline GS2CEnterScene_ObjInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  GS2CEnterScene_ObjInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GS2CEnterScene_ObjInfo& from);
  void MergeFrom(const GS2CEnterScene_ObjInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GS2CEnterScene_ObjInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 1;
  void clear_uuid();
  static const int kUuidFieldNumber = 1;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // .NetProto.PosRot pos_rot = 4;
  bool has_pos_rot() const;
  void clear_pos_rot();
  static const int kPosRotFieldNumber = 4;
  const ::NetProto::PosRot& pos_rot() const;
  ::NetProto::PosRot* mutable_pos_rot();
  ::NetProto::PosRot* release_pos_rot();
  void set_allocated_pos_rot(::NetProto::PosRot* pos_rot);

  // uint32 class_id = 2;
  void clear_class_id();
  static const int kClassIdFieldNumber = 2;
  ::google::protobuf::uint32 class_id() const;
  void set_class_id(::google::protobuf::uint32 value);

  // uint32 item_id = 3;
  void clear_item_id();
  static const int kItemIdFieldNumber = 3;
  ::google::protobuf::uint32 item_id() const;
  void set_item_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetProto.GS2CEnterScene.ObjInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::NetProto::PosRot* pos_rot_;
  ::google::protobuf::uint32 class_id_;
  ::google::protobuf::uint32 item_id_;
  mutable int _cached_size_;
  friend struct protobuf_Protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GS2CEnterScene : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.GS2CEnterScene) */ {
 public:
  GS2CEnterScene();
  virtual ~GS2CEnterScene();

  GS2CEnterScene(const GS2CEnterScene& from);

  inline GS2CEnterScene& operator=(const GS2CEnterScene& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2CEnterScene& default_instance();

  static inline const GS2CEnterScene* internal_default_instance() {
    return reinterpret_cast<const GS2CEnterScene*>(
               &_GS2CEnterScene_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(GS2CEnterScene* other);

  // implements Message ----------------------------------------------

  inline GS2CEnterScene* New() const PROTOBUF_FINAL { return New(NULL); }

  GS2CEnterScene* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GS2CEnterScene& from);
  void MergeFrom(const GS2CEnterScene& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GS2CEnterScene* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GS2CEnterScene_ObjInfo ObjInfo;

  // accessors -------------------------------------------------------

  // repeated .NetProto.GS2CEnterScene.ObjInfo obj_info = 1003;
  int obj_info_size() const;
  void clear_obj_info();
  static const int kObjInfoFieldNumber = 1003;
  const ::NetProto::GS2CEnterScene_ObjInfo& obj_info(int index) const;
  ::NetProto::GS2CEnterScene_ObjInfo* mutable_obj_info(int index);
  ::NetProto::GS2CEnterScene_ObjInfo* add_obj_info();
  ::google::protobuf::RepeatedPtrField< ::NetProto::GS2CEnterScene_ObjInfo >*
      mutable_obj_info();
  const ::google::protobuf::RepeatedPtrField< ::NetProto::GS2CEnterScene_ObjInfo >&
      obj_info() const;

  // repeated .NetProto.Action.Status.NaturalActionStatus status_vector = 1005;
  int status_vector_size() const;
  void clear_status_vector();
  static const int kStatusVectorFieldNumber = 1005;
  const ::NetProto::Action::Status::NaturalActionStatus& status_vector(int index) const;
  ::NetProto::Action::Status::NaturalActionStatus* mutable_status_vector(int index);
  ::NetProto::Action::Status::NaturalActionStatus* add_status_vector();
  ::google::protobuf::RepeatedPtrField< ::NetProto::Action::Status::NaturalActionStatus >*
      mutable_status_vector();
  const ::google::protobuf::RepeatedPtrField< ::NetProto::Action::Status::NaturalActionStatus >&
      status_vector() const;

  // string owner_uuid = 1000;
  void clear_owner_uuid();
  static const int kOwnerUuidFieldNumber = 1000;
  const ::std::string& owner_uuid() const;
  void set_owner_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_owner_uuid(::std::string&& value);
  #endif
  void set_owner_uuid(const char* value);
  void set_owner_uuid(const char* value, size_t size);
  ::std::string* mutable_owner_uuid();
  ::std::string* release_owner_uuid();
  void set_allocated_owner_uuid(::std::string* owner_uuid);

  // string scene_id = 1002;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1002;
  const ::std::string& scene_id() const;
  void set_scene_id(const ::std::string& value);
  #if LANG_CXX11
  void set_scene_id(::std::string&& value);
  #endif
  void set_scene_id(const char* value);
  void set_scene_id(const char* value, size_t size);
  ::std::string* mutable_scene_id();
  ::std::string* release_scene_id();
  void set_allocated_scene_id(::std::string* scene_id);

  // uint32 map_id = 1001;
  void clear_map_id();
  static const int kMapIdFieldNumber = 1001;
  ::google::protobuf::uint32 map_id() const;
  void set_map_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetProto.GS2CEnterScene)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetProto::GS2CEnterScene_ObjInfo > obj_info_;
  ::google::protobuf::RepeatedPtrField< ::NetProto::Action::Status::NaturalActionStatus > status_vector_;
  ::google::protobuf::internal::ArenaStringPtr owner_uuid_;
  ::google::protobuf::internal::ArenaStringPtr scene_id_;
  ::google::protobuf::uint32 map_id_;
  mutable int _cached_size_;
  friend struct protobuf_Protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GS2MTSHeart : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.GS2MTSHeart) */ {
 public:
  GS2MTSHeart();
  virtual ~GS2MTSHeart();

  GS2MTSHeart(const GS2MTSHeart& from);

  inline GS2MTSHeart& operator=(const GS2MTSHeart& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2MTSHeart& default_instance();

  static inline const GS2MTSHeart* internal_default_instance() {
    return reinterpret_cast<const GS2MTSHeart*>(
               &_GS2MTSHeart_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(GS2MTSHeart* other);

  // implements Message ----------------------------------------------

  inline GS2MTSHeart* New() const PROTOBUF_FINAL { return New(NULL); }

  GS2MTSHeart* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GS2MTSHeart& from);
  void MergeFrom(const GS2MTSHeart& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GS2MTSHeart* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 gameServerID = 1;
  void clear_gameserverid();
  static const int kGameServerIDFieldNumber = 1;
  ::google::protobuf::uint32 gameserverid() const;
  void set_gameserverid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetProto.GS2MTSHeart)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 gameserverid_;
  mutable int _cached_size_;
  friend struct protobuf_Protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GS2MTSGetRobotList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.GS2MTSGetRobotList) */ {
 public:
  GS2MTSGetRobotList();
  virtual ~GS2MTSGetRobotList();

  GS2MTSGetRobotList(const GS2MTSGetRobotList& from);

  inline GS2MTSGetRobotList& operator=(const GS2MTSGetRobotList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2MTSGetRobotList& default_instance();

  static inline const GS2MTSGetRobotList* internal_default_instance() {
    return reinterpret_cast<const GS2MTSGetRobotList*>(
               &_GS2MTSGetRobotList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(GS2MTSGetRobotList* other);

  // implements Message ----------------------------------------------

  inline GS2MTSGetRobotList* New() const PROTOBUF_FINAL { return New(NULL); }

  GS2MTSGetRobotList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GS2MTSGetRobotList& from);
  void MergeFrom(const GS2MTSGetRobotList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GS2MTSGetRobotList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .NetProto.MsgHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::NetProto::MsgHead& msghead() const;
  ::NetProto::MsgHead* mutable_msghead();
  ::NetProto::MsgHead* release_msghead();
  void set_allocated_msghead(::NetProto::MsgHead* msghead);

  // uint32 accountID = 2;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 2;
  ::google::protobuf::uint32 accountid() const;
  void set_accountid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetProto.GS2MTSGetRobotList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetProto::MsgHead* msghead_;
  ::google::protobuf::uint32 accountid_;
  mutable int _cached_size_;
  friend struct protobuf_Protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GS2MTSCreateRobot : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.GS2MTSCreateRobot) */ {
 public:
  GS2MTSCreateRobot();
  virtual ~GS2MTSCreateRobot();

  GS2MTSCreateRobot(const GS2MTSCreateRobot& from);

  inline GS2MTSCreateRobot& operator=(const GS2MTSCreateRobot& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2MTSCreateRobot& default_instance();

  static inline const GS2MTSCreateRobot* internal_default_instance() {
    return reinterpret_cast<const GS2MTSCreateRobot*>(
               &_GS2MTSCreateRobot_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(GS2MTSCreateRobot* other);

  // implements Message ----------------------------------------------

  inline GS2MTSCreateRobot* New() const PROTOBUF_FINAL { return New(NULL); }

  GS2MTSCreateRobot* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GS2MTSCreateRobot& from);
  void MergeFrom(const GS2MTSCreateRobot& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GS2MTSCreateRobot* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .NetProto.MsgHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::NetProto::MsgHead& msghead() const;
  ::NetProto::MsgHead* mutable_msghead();
  ::NetProto::MsgHead* release_msghead();
  void set_allocated_msghead(::NetProto::MsgHead* msghead);

  // uint32 accountID = 2;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 2;
  ::google::protobuf::uint32 accountid() const;
  void set_accountid(::google::protobuf::uint32 value);

  // uint32 robotPrototypeID = 3;
  void clear_robotprototypeid();
  static const int kRobotPrototypeIDFieldNumber = 3;
  ::google::protobuf::uint32 robotprototypeid() const;
  void set_robotprototypeid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetProto.GS2MTSCreateRobot)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetProto::MsgHead* msghead_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 robotprototypeid_;
  mutable int _cached_size_;
  friend struct protobuf_Protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GS2MTSGetSceneItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.GS2MTSGetSceneItem) */ {
 public:
  GS2MTSGetSceneItem();
  virtual ~GS2MTSGetSceneItem();

  GS2MTSGetSceneItem(const GS2MTSGetSceneItem& from);

  inline GS2MTSGetSceneItem& operator=(const GS2MTSGetSceneItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2MTSGetSceneItem& default_instance();

  static inline const GS2MTSGetSceneItem* internal_default_instance() {
    return reinterpret_cast<const GS2MTSGetSceneItem*>(
               &_GS2MTSGetSceneItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(GS2MTSGetSceneItem* other);

  // implements Message ----------------------------------------------

  inline GS2MTSGetSceneItem* New() const PROTOBUF_FINAL { return New(NULL); }

  GS2MTSGetSceneItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GS2MTSGetSceneItem& from);
  void MergeFrom(const GS2MTSGetSceneItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GS2MTSGetSceneItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string sceneID = 4;
  void clear_sceneid();
  static const int kSceneIDFieldNumber = 4;
  const ::std::string& sceneid() const;
  void set_sceneid(const ::std::string& value);
  #if LANG_CXX11
  void set_sceneid(::std::string&& value);
  #endif
  void set_sceneid(const char* value);
  void set_sceneid(const char* value, size_t size);
  ::std::string* mutable_sceneid();
  ::std::string* release_sceneid();
  void set_allocated_sceneid(::std::string* sceneid);

  // .NetProto.MsgHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::NetProto::MsgHead& msghead() const;
  ::NetProto::MsgHead* mutable_msghead();
  ::NetProto::MsgHead* release_msghead();
  void set_allocated_msghead(::NetProto::MsgHead* msghead);

  // uint32 accountID = 2;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 2;
  ::google::protobuf::uint32 accountid() const;
  void set_accountid(::google::protobuf::uint32 value);

  // uint32 sceneType = 3;
  void clear_scenetype();
  static const int kSceneTypeFieldNumber = 3;
  ::google::protobuf::uint32 scenetype() const;
  void set_scenetype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetProto.GS2MTSGetSceneItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr sceneid_;
  ::NetProto::MsgHead* msghead_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 scenetype_;
  mutable int _cached_size_;
  friend struct protobuf_Protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GS2MTSCreateScene : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.GS2MTSCreateScene) */ {
 public:
  GS2MTSCreateScene();
  virtual ~GS2MTSCreateScene();

  GS2MTSCreateScene(const GS2MTSCreateScene& from);

  inline GS2MTSCreateScene& operator=(const GS2MTSCreateScene& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2MTSCreateScene& default_instance();

  static inline const GS2MTSCreateScene* internal_default_instance() {
    return reinterpret_cast<const GS2MTSCreateScene*>(
               &_GS2MTSCreateScene_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(GS2MTSCreateScene* other);

  // implements Message ----------------------------------------------

  inline GS2MTSCreateScene* New() const PROTOBUF_FINAL { return New(NULL); }

  GS2MTSCreateScene* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GS2MTSCreateScene& from);
  void MergeFrom(const GS2MTSCreateScene& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GS2MTSCreateScene* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .NetProto.MsgHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::NetProto::MsgHead& msghead() const;
  ::NetProto::MsgHead* mutable_msghead();
  ::NetProto::MsgHead* release_msghead();
  void set_allocated_msghead(::NetProto::MsgHead* msghead);

  // uint32 accountID = 2;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 2;
  ::google::protobuf::uint32 accountid() const;
  void set_accountid(::google::protobuf::uint32 value);

  // uint32 sceneType = 3;
  void clear_scenetype();
  static const int kSceneTypeFieldNumber = 3;
  ::google::protobuf::uint32 scenetype() const;
  void set_scenetype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetProto.GS2MTSCreateScene)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetProto::MsgHead* msghead_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 scenetype_;
  mutable int _cached_size_;
  friend struct protobuf_Protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MTS2GSGetRobotList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.MTS2GSGetRobotList) */ {
 public:
  MTS2GSGetRobotList();
  virtual ~MTS2GSGetRobotList();

  MTS2GSGetRobotList(const MTS2GSGetRobotList& from);

  inline MTS2GSGetRobotList& operator=(const MTS2GSGetRobotList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MTS2GSGetRobotList& default_instance();

  static inline const MTS2GSGetRobotList* internal_default_instance() {
    return reinterpret_cast<const MTS2GSGetRobotList*>(
               &_MTS2GSGetRobotList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(MTS2GSGetRobotList* other);

  // implements Message ----------------------------------------------

  inline MTS2GSGetRobotList* New() const PROTOBUF_FINAL { return New(NULL); }

  MTS2GSGetRobotList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MTS2GSGetRobotList& from);
  void MergeFrom(const MTS2GSGetRobotList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MTS2GSGetRobotList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NetProto.CreateRobotInfo robotList = 4;
  int robotlist_size() const;
  void clear_robotlist();
  static const int kRobotListFieldNumber = 4;
  const ::NetProto::CreateRobotInfo& robotlist(int index) const;
  ::NetProto::CreateRobotInfo* mutable_robotlist(int index);
  ::NetProto::CreateRobotInfo* add_robotlist();
  ::google::protobuf::RepeatedPtrField< ::NetProto::CreateRobotInfo >*
      mutable_robotlist();
  const ::google::protobuf::RepeatedPtrField< ::NetProto::CreateRobotInfo >&
      robotlist() const;

  // .NetProto.MsgHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::NetProto::MsgHead& msghead() const;
  ::NetProto::MsgHead* mutable_msghead();
  ::NetProto::MsgHead* release_msghead();
  void set_allocated_msghead(::NetProto::MsgHead* msghead);

  // uint32 accountID = 2;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 2;
  ::google::protobuf::uint32 accountid() const;
  void set_accountid(::google::protobuf::uint32 value);

  // uint32 robotFlag = 3;
  void clear_robotflag();
  static const int kRobotFlagFieldNumber = 3;
  ::google::protobuf::uint32 robotflag() const;
  void set_robotflag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetProto.MTS2GSGetRobotList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetProto::CreateRobotInfo > robotlist_;
  ::NetProto::MsgHead* msghead_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 robotflag_;
  mutable int _cached_size_;
  friend struct protobuf_Protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MTS2GSCreateRobot : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.MTS2GSCreateRobot) */ {
 public:
  MTS2GSCreateRobot();
  virtual ~MTS2GSCreateRobot();

  MTS2GSCreateRobot(const MTS2GSCreateRobot& from);

  inline MTS2GSCreateRobot& operator=(const MTS2GSCreateRobot& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MTS2GSCreateRobot& default_instance();

  static inline const MTS2GSCreateRobot* internal_default_instance() {
    return reinterpret_cast<const MTS2GSCreateRobot*>(
               &_MTS2GSCreateRobot_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(MTS2GSCreateRobot* other);

  // implements Message ----------------------------------------------

  inline MTS2GSCreateRobot* New() const PROTOBUF_FINAL { return New(NULL); }

  MTS2GSCreateRobot* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MTS2GSCreateRobot& from);
  void MergeFrom(const MTS2GSCreateRobot& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MTS2GSCreateRobot* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NetProto.CreateRobotInfo robotList = 3;
  int robotlist_size() const;
  void clear_robotlist();
  static const int kRobotListFieldNumber = 3;
  const ::NetProto::CreateRobotInfo& robotlist(int index) const;
  ::NetProto::CreateRobotInfo* mutable_robotlist(int index);
  ::NetProto::CreateRobotInfo* add_robotlist();
  ::google::protobuf::RepeatedPtrField< ::NetProto::CreateRobotInfo >*
      mutable_robotlist();
  const ::google::protobuf::RepeatedPtrField< ::NetProto::CreateRobotInfo >&
      robotlist() const;

  // .NetProto.MsgHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::NetProto::MsgHead& msghead() const;
  ::NetProto::MsgHead* mutable_msghead();
  ::NetProto::MsgHead* release_msghead();
  void set_allocated_msghead(::NetProto::MsgHead* msghead);

  // uint32 accountID = 2;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 2;
  ::google::protobuf::uint32 accountid() const;
  void set_accountid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetProto.MTS2GSCreateRobot)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetProto::CreateRobotInfo > robotlist_;
  ::NetProto::MsgHead* msghead_;
  ::google::protobuf::uint32 accountid_;
  mutable int _cached_size_;
  friend struct protobuf_Protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MTS2GSGetSceneItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.MTS2GSGetSceneItem) */ {
 public:
  MTS2GSGetSceneItem();
  virtual ~MTS2GSGetSceneItem();

  MTS2GSGetSceneItem(const MTS2GSGetSceneItem& from);

  inline MTS2GSGetSceneItem& operator=(const MTS2GSGetSceneItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MTS2GSGetSceneItem& default_instance();

  static inline const MTS2GSGetSceneItem* internal_default_instance() {
    return reinterpret_cast<const MTS2GSGetSceneItem*>(
               &_MTS2GSGetSceneItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(MTS2GSGetSceneItem* other);

  // implements Message ----------------------------------------------

  inline MTS2GSGetSceneItem* New() const PROTOBUF_FINAL { return New(NULL); }

  MTS2GSGetSceneItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MTS2GSGetSceneItem& from);
  void MergeFrom(const MTS2GSGetSceneItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MTS2GSGetSceneItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NetProto.CreateSceneItem itemList = 4;
  int itemlist_size() const;
  void clear_itemlist();
  static const int kItemListFieldNumber = 4;
  const ::NetProto::CreateSceneItem& itemlist(int index) const;
  ::NetProto::CreateSceneItem* mutable_itemlist(int index);
  ::NetProto::CreateSceneItem* add_itemlist();
  ::google::protobuf::RepeatedPtrField< ::NetProto::CreateSceneItem >*
      mutable_itemlist();
  const ::google::protobuf::RepeatedPtrField< ::NetProto::CreateSceneItem >&
      itemlist() const;

  // string sceneID = 3;
  void clear_sceneid();
  static const int kSceneIDFieldNumber = 3;
  const ::std::string& sceneid() const;
  void set_sceneid(const ::std::string& value);
  #if LANG_CXX11
  void set_sceneid(::std::string&& value);
  #endif
  void set_sceneid(const char* value);
  void set_sceneid(const char* value, size_t size);
  ::std::string* mutable_sceneid();
  ::std::string* release_sceneid();
  void set_allocated_sceneid(::std::string* sceneid);

  // .NetProto.MsgHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::NetProto::MsgHead& msghead() const;
  ::NetProto::MsgHead* mutable_msghead();
  ::NetProto::MsgHead* release_msghead();
  void set_allocated_msghead(::NetProto::MsgHead* msghead);

  // uint32 accountID = 2;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 2;
  ::google::protobuf::uint32 accountid() const;
  void set_accountid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetProto.MTS2GSGetSceneItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetProto::CreateSceneItem > itemlist_;
  ::google::protobuf::internal::ArenaStringPtr sceneid_;
  ::NetProto::MsgHead* msghead_;
  ::google::protobuf::uint32 accountid_;
  mutable int _cached_size_;
  friend struct protobuf_Protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MTS2GSCreateScene : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.MTS2GSCreateScene) */ {
 public:
  MTS2GSCreateScene();
  virtual ~MTS2GSCreateScene();

  MTS2GSCreateScene(const MTS2GSCreateScene& from);

  inline MTS2GSCreateScene& operator=(const MTS2GSCreateScene& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MTS2GSCreateScene& default_instance();

  static inline const MTS2GSCreateScene* internal_default_instance() {
    return reinterpret_cast<const MTS2GSCreateScene*>(
               &_MTS2GSCreateScene_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(MTS2GSCreateScene* other);

  // implements Message ----------------------------------------------

  inline MTS2GSCreateScene* New() const PROTOBUF_FINAL { return New(NULL); }

  MTS2GSCreateScene* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MTS2GSCreateScene& from);
  void MergeFrom(const MTS2GSCreateScene& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MTS2GSCreateScene* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NetProto.CreateSceneItem itemList = 4;
  int itemlist_size() const;
  void clear_itemlist();
  static const int kItemListFieldNumber = 4;
  const ::NetProto::CreateSceneItem& itemlist(int index) const;
  ::NetProto::CreateSceneItem* mutable_itemlist(int index);
  ::NetProto::CreateSceneItem* add_itemlist();
  ::google::protobuf::RepeatedPtrField< ::NetProto::CreateSceneItem >*
      mutable_itemlist();
  const ::google::protobuf::RepeatedPtrField< ::NetProto::CreateSceneItem >&
      itemlist() const;

  // string sceneID = 3;
  void clear_sceneid();
  static const int kSceneIDFieldNumber = 3;
  const ::std::string& sceneid() const;
  void set_sceneid(const ::std::string& value);
  #if LANG_CXX11
  void set_sceneid(::std::string&& value);
  #endif
  void set_sceneid(const char* value);
  void set_sceneid(const char* value, size_t size);
  ::std::string* mutable_sceneid();
  ::std::string* release_sceneid();
  void set_allocated_sceneid(::std::string* sceneid);

  // .NetProto.MsgHead msgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::NetProto::MsgHead& msghead() const;
  ::NetProto::MsgHead* mutable_msghead();
  ::NetProto::MsgHead* release_msghead();
  void set_allocated_msghead(::NetProto::MsgHead* msghead);

  // uint32 accountID = 2;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 2;
  ::google::protobuf::uint32 accountid() const;
  void set_accountid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetProto.MTS2GSCreateScene)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetProto::CreateSceneItem > itemlist_;
  ::google::protobuf::internal::ArenaStringPtr sceneid_;
  ::NetProto::MsgHead* msghead_;
  ::google::protobuf::uint32 accountid_;
  mutable int _cached_size_;
  friend struct protobuf_Protocol_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// UniversalProtocol

// uint32 communicateTest = 1;
inline void UniversalProtocol::clear_communicatetest() {
  communicatetest_ = 0u;
}
inline ::google::protobuf::uint32 UniversalProtocol::communicatetest() const {
  // @@protoc_insertion_point(field_get:NetProto.UniversalProtocol.communicateTest)
  return communicatetest_;
}
inline void UniversalProtocol::set_communicatetest(::google::protobuf::uint32 value) {
  
  communicatetest_ = value;
  // @@protoc_insertion_point(field_set:NetProto.UniversalProtocol.communicateTest)
}

// -------------------------------------------------------------------

// CreateSceneItem

// string objectUuid = 1;
inline void CreateSceneItem::clear_objectuuid() {
  objectuuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateSceneItem::objectuuid() const {
  // @@protoc_insertion_point(field_get:NetProto.CreateSceneItem.objectUuid)
  return objectuuid_.GetNoArena();
}
inline void CreateSceneItem::set_objectuuid(const ::std::string& value) {
  
  objectuuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.CreateSceneItem.objectUuid)
}
#if LANG_CXX11
inline void CreateSceneItem::set_objectuuid(::std::string&& value) {
  
  objectuuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.CreateSceneItem.objectUuid)
}
#endif
inline void CreateSceneItem::set_objectuuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  objectuuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.CreateSceneItem.objectUuid)
}
inline void CreateSceneItem::set_objectuuid(const char* value, size_t size) {
  
  objectuuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.CreateSceneItem.objectUuid)
}
inline ::std::string* CreateSceneItem::mutable_objectuuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.CreateSceneItem.objectUuid)
  return objectuuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateSceneItem::release_objectuuid() {
  // @@protoc_insertion_point(field_release:NetProto.CreateSceneItem.objectUuid)
  
  return objectuuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateSceneItem::set_allocated_objectuuid(::std::string* objectuuid) {
  if (objectuuid != NULL) {
    
  } else {
    
  }
  objectuuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), objectuuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.CreateSceneItem.objectUuid)
}

// uint32 itemID = 2;
inline void CreateSceneItem::clear_itemid() {
  itemid_ = 0u;
}
inline ::google::protobuf::uint32 CreateSceneItem::itemid() const {
  // @@protoc_insertion_point(field_get:NetProto.CreateSceneItem.itemID)
  return itemid_;
}
inline void CreateSceneItem::set_itemid(::google::protobuf::uint32 value) {
  
  itemid_ = value;
  // @@protoc_insertion_point(field_set:NetProto.CreateSceneItem.itemID)
}

// -------------------------------------------------------------------

// CreateRobotInfo

// string robotID = 1;
inline void CreateRobotInfo::clear_robotid() {
  robotid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateRobotInfo::robotid() const {
  // @@protoc_insertion_point(field_get:NetProto.CreateRobotInfo.robotID)
  return robotid_.GetNoArena();
}
inline void CreateRobotInfo::set_robotid(const ::std::string& value) {
  
  robotid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.CreateRobotInfo.robotID)
}
#if LANG_CXX11
inline void CreateRobotInfo::set_robotid(::std::string&& value) {
  
  robotid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.CreateRobotInfo.robotID)
}
#endif
inline void CreateRobotInfo::set_robotid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  robotid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.CreateRobotInfo.robotID)
}
inline void CreateRobotInfo::set_robotid(const char* value, size_t size) {
  
  robotid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.CreateRobotInfo.robotID)
}
inline ::std::string* CreateRobotInfo::mutable_robotid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.CreateRobotInfo.robotID)
  return robotid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateRobotInfo::release_robotid() {
  // @@protoc_insertion_point(field_release:NetProto.CreateRobotInfo.robotID)
  
  return robotid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateRobotInfo::set_allocated_robotid(::std::string* robotid) {
  if (robotid != NULL) {
    
  } else {
    
  }
  robotid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), robotid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.CreateRobotInfo.robotID)
}

// uint32 robotPrototypeID = 2;
inline void CreateRobotInfo::clear_robotprototypeid() {
  robotprototypeid_ = 0u;
}
inline ::google::protobuf::uint32 CreateRobotInfo::robotprototypeid() const {
  // @@protoc_insertion_point(field_get:NetProto.CreateRobotInfo.robotPrototypeID)
  return robotprototypeid_;
}
inline void CreateRobotInfo::set_robotprototypeid(::google::protobuf::uint32 value) {
  
  robotprototypeid_ = value;
  // @@protoc_insertion_point(field_set:NetProto.CreateRobotInfo.robotPrototypeID)
}

// -------------------------------------------------------------------

// SceneData_ObjInfo

// string uuid = 1;
inline void SceneData_ObjInfo::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SceneData_ObjInfo::uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneData.ObjInfo.uuid)
  return uuid_.GetNoArena();
}
inline void SceneData_ObjInfo::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.SceneData.ObjInfo.uuid)
}
#if LANG_CXX11
inline void SceneData_ObjInfo::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.SceneData.ObjInfo.uuid)
}
#endif
inline void SceneData_ObjInfo::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.SceneData.ObjInfo.uuid)
}
inline void SceneData_ObjInfo::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.SceneData.ObjInfo.uuid)
}
inline ::std::string* SceneData_ObjInfo::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.SceneData.ObjInfo.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SceneData_ObjInfo::release_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.SceneData.ObjInfo.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SceneData_ObjInfo::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.SceneData.ObjInfo.uuid)
}

// uint32 class_id = 2;
inline void SceneData_ObjInfo::clear_class_id() {
  class_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneData_ObjInfo::class_id() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneData.ObjInfo.class_id)
  return class_id_;
}
inline void SceneData_ObjInfo::set_class_id(::google::protobuf::uint32 value) {
  
  class_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SceneData.ObjInfo.class_id)
}

// uint32 item_id = 3;
inline void SceneData_ObjInfo::clear_item_id() {
  item_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneData_ObjInfo::item_id() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneData.ObjInfo.item_id)
  return item_id_;
}
inline void SceneData_ObjInfo::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SceneData.ObjInfo.item_id)
}

// .NetProto.PosRot pos_rot = 4;
inline bool SceneData_ObjInfo::has_pos_rot() const {
  return this != internal_default_instance() && pos_rot_ != NULL;
}
inline void SceneData_ObjInfo::clear_pos_rot() {
  if (GetArenaNoVirtual() == NULL && pos_rot_ != NULL) delete pos_rot_;
  pos_rot_ = NULL;
}
inline const ::NetProto::PosRot& SceneData_ObjInfo::pos_rot() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneData.ObjInfo.pos_rot)
  return pos_rot_ != NULL ? *pos_rot_
                         : *::NetProto::PosRot::internal_default_instance();
}
inline ::NetProto::PosRot* SceneData_ObjInfo::mutable_pos_rot() {
  
  if (pos_rot_ == NULL) {
    pos_rot_ = new ::NetProto::PosRot;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.SceneData.ObjInfo.pos_rot)
  return pos_rot_;
}
inline ::NetProto::PosRot* SceneData_ObjInfo::release_pos_rot() {
  // @@protoc_insertion_point(field_release:NetProto.SceneData.ObjInfo.pos_rot)
  
  ::NetProto::PosRot* temp = pos_rot_;
  pos_rot_ = NULL;
  return temp;
}
inline void SceneData_ObjInfo::set_allocated_pos_rot(::NetProto::PosRot* pos_rot) {
  delete pos_rot_;
  pos_rot_ = pos_rot;
  if (pos_rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.SceneData.ObjInfo.pos_rot)
}

// -------------------------------------------------------------------

// SceneData

// string robot_id = 1;
inline void SceneData::clear_robot_id() {
  robot_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SceneData::robot_id() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneData.robot_id)
  return robot_id_.GetNoArena();
}
inline void SceneData::set_robot_id(const ::std::string& value) {
  
  robot_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.SceneData.robot_id)
}
#if LANG_CXX11
inline void SceneData::set_robot_id(::std::string&& value) {
  
  robot_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.SceneData.robot_id)
}
#endif
inline void SceneData::set_robot_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  robot_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.SceneData.robot_id)
}
inline void SceneData::set_robot_id(const char* value, size_t size) {
  
  robot_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.SceneData.robot_id)
}
inline ::std::string* SceneData::mutable_robot_id() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.SceneData.robot_id)
  return robot_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SceneData::release_robot_id() {
  // @@protoc_insertion_point(field_release:NetProto.SceneData.robot_id)
  
  return robot_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SceneData::set_allocated_robot_id(::std::string* robot_id) {
  if (robot_id != NULL) {
    
  } else {
    
  }
  robot_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), robot_id);
  // @@protoc_insertion_point(field_set_allocated:NetProto.SceneData.robot_id)
}

// uint32 map_id = 2;
inline void SceneData::clear_map_id() {
  map_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneData::map_id() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneData.map_id)
  return map_id_;
}
inline void SceneData::set_map_id(::google::protobuf::uint32 value) {
  
  map_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SceneData.map_id)
}

// repeated .NetProto.SceneData.ObjInfo objInfo = 3;
inline int SceneData::objinfo_size() const {
  return objinfo_.size();
}
inline void SceneData::clear_objinfo() {
  objinfo_.Clear();
}
inline const ::NetProto::SceneData_ObjInfo& SceneData::objinfo(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.SceneData.objInfo)
  return objinfo_.Get(index);
}
inline ::NetProto::SceneData_ObjInfo* SceneData::mutable_objinfo(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.SceneData.objInfo)
  return objinfo_.Mutable(index);
}
inline ::NetProto::SceneData_ObjInfo* SceneData::add_objinfo() {
  // @@protoc_insertion_point(field_add:NetProto.SceneData.objInfo)
  return objinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetProto::SceneData_ObjInfo >*
SceneData::mutable_objinfo() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.SceneData.objInfo)
  return &objinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetProto::SceneData_ObjInfo >&
SceneData::objinfo() const {
  // @@protoc_insertion_point(field_list:NetProto.SceneData.objInfo)
  return objinfo_;
}

// repeated .NetProto.Action.Status.NaturalActionStatus statusVector = 4;
inline int SceneData::statusvector_size() const {
  return statusvector_.size();
}
inline void SceneData::clear_statusvector() {
  statusvector_.Clear();
}
inline const ::NetProto::Action::Status::NaturalActionStatus& SceneData::statusvector(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.SceneData.statusVector)
  return statusvector_.Get(index);
}
inline ::NetProto::Action::Status::NaturalActionStatus* SceneData::mutable_statusvector(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.SceneData.statusVector)
  return statusvector_.Mutable(index);
}
inline ::NetProto::Action::Status::NaturalActionStatus* SceneData::add_statusvector() {
  // @@protoc_insertion_point(field_add:NetProto.SceneData.statusVector)
  return statusvector_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetProto::Action::Status::NaturalActionStatus >*
SceneData::mutable_statusvector() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.SceneData.statusVector)
  return &statusvector_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetProto::Action::Status::NaturalActionStatus >&
SceneData::statusvector() const {
  // @@protoc_insertion_point(field_list:NetProto.SceneData.statusVector)
  return statusvector_;
}

// -------------------------------------------------------------------

// C2AAddUserReq

// .NetProto.MsgHead Header = 1;
inline bool C2AAddUserReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void C2AAddUserReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::NetProto::MsgHead& C2AAddUserReq::header() const {
  // @@protoc_insertion_point(field_get:NetProto.C2AAddUserReq.Header)
  return header_ != NULL ? *header_
                         : *::NetProto::MsgHead::internal_default_instance();
}
inline ::NetProto::MsgHead* C2AAddUserReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.C2AAddUserReq.Header)
  return header_;
}
inline ::NetProto::MsgHead* C2AAddUserReq::release_header() {
  // @@protoc_insertion_point(field_release:NetProto.C2AAddUserReq.Header)
  
  ::NetProto::MsgHead* temp = header_;
  header_ = NULL;
  return temp;
}
inline void C2AAddUserReq::set_allocated_header(::NetProto::MsgHead* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.C2AAddUserReq.Header)
}

// string Seq = 2;
inline void C2AAddUserReq::clear_seq() {
  seq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& C2AAddUserReq::seq() const {
  // @@protoc_insertion_point(field_get:NetProto.C2AAddUserReq.Seq)
  return seq_.GetNoArena();
}
inline void C2AAddUserReq::set_seq(const ::std::string& value) {
  
  seq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.C2AAddUserReq.Seq)
}
#if LANG_CXX11
inline void C2AAddUserReq::set_seq(::std::string&& value) {
  
  seq_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.C2AAddUserReq.Seq)
}
#endif
inline void C2AAddUserReq::set_seq(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  seq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.C2AAddUserReq.Seq)
}
inline void C2AAddUserReq::set_seq(const char* value, size_t size) {
  
  seq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.C2AAddUserReq.Seq)
}
inline ::std::string* C2AAddUserReq::mutable_seq() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.C2AAddUserReq.Seq)
  return seq_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C2AAddUserReq::release_seq() {
  // @@protoc_insertion_point(field_release:NetProto.C2AAddUserReq.Seq)
  
  return seq_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C2AAddUserReq::set_allocated_seq(::std::string* seq) {
  if (seq != NULL) {
    
  } else {
    
  }
  seq_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), seq);
  // @@protoc_insertion_point(field_set_allocated:NetProto.C2AAddUserReq.Seq)
}

// string Appid = 3;
inline void C2AAddUserReq::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& C2AAddUserReq::appid() const {
  // @@protoc_insertion_point(field_get:NetProto.C2AAddUserReq.Appid)
  return appid_.GetNoArena();
}
inline void C2AAddUserReq::set_appid(const ::std::string& value) {
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.C2AAddUserReq.Appid)
}
#if LANG_CXX11
inline void C2AAddUserReq::set_appid(::std::string&& value) {
  
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.C2AAddUserReq.Appid)
}
#endif
inline void C2AAddUserReq::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.C2AAddUserReq.Appid)
}
inline void C2AAddUserReq::set_appid(const char* value, size_t size) {
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.C2AAddUserReq.Appid)
}
inline ::std::string* C2AAddUserReq::mutable_appid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.C2AAddUserReq.Appid)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C2AAddUserReq::release_appid() {
  // @@protoc_insertion_point(field_release:NetProto.C2AAddUserReq.Appid)
  
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C2AAddUserReq::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    
  } else {
    
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.C2AAddUserReq.Appid)
}

// string Uname = 4;
inline void C2AAddUserReq::clear_uname() {
  uname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& C2AAddUserReq::uname() const {
  // @@protoc_insertion_point(field_get:NetProto.C2AAddUserReq.Uname)
  return uname_.GetNoArena();
}
inline void C2AAddUserReq::set_uname(const ::std::string& value) {
  
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.C2AAddUserReq.Uname)
}
#if LANG_CXX11
inline void C2AAddUserReq::set_uname(::std::string&& value) {
  
  uname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.C2AAddUserReq.Uname)
}
#endif
inline void C2AAddUserReq::set_uname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.C2AAddUserReq.Uname)
}
inline void C2AAddUserReq::set_uname(const char* value, size_t size) {
  
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.C2AAddUserReq.Uname)
}
inline ::std::string* C2AAddUserReq::mutable_uname() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.C2AAddUserReq.Uname)
  return uname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C2AAddUserReq::release_uname() {
  // @@protoc_insertion_point(field_release:NetProto.C2AAddUserReq.Uname)
  
  return uname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C2AAddUserReq::set_allocated_uname(::std::string* uname) {
  if (uname != NULL) {
    
  } else {
    
  }
  uname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uname);
  // @@protoc_insertion_point(field_set_allocated:NetProto.C2AAddUserReq.Uname)
}

// string Password = 5;
inline void C2AAddUserReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& C2AAddUserReq::password() const {
  // @@protoc_insertion_point(field_get:NetProto.C2AAddUserReq.Password)
  return password_.GetNoArena();
}
inline void C2AAddUserReq::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.C2AAddUserReq.Password)
}
#if LANG_CXX11
inline void C2AAddUserReq::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.C2AAddUserReq.Password)
}
#endif
inline void C2AAddUserReq::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.C2AAddUserReq.Password)
}
inline void C2AAddUserReq::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.C2AAddUserReq.Password)
}
inline ::std::string* C2AAddUserReq::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.C2AAddUserReq.Password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C2AAddUserReq::release_password() {
  // @@protoc_insertion_point(field_release:NetProto.C2AAddUserReq.Password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C2AAddUserReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:NetProto.C2AAddUserReq.Password)
}

// -------------------------------------------------------------------

// C2ACheckUserReq

// .NetProto.MsgHead Header = 1;
inline bool C2ACheckUserReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void C2ACheckUserReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::NetProto::MsgHead& C2ACheckUserReq::header() const {
  // @@protoc_insertion_point(field_get:NetProto.C2ACheckUserReq.Header)
  return header_ != NULL ? *header_
                         : *::NetProto::MsgHead::internal_default_instance();
}
inline ::NetProto::MsgHead* C2ACheckUserReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.C2ACheckUserReq.Header)
  return header_;
}
inline ::NetProto::MsgHead* C2ACheckUserReq::release_header() {
  // @@protoc_insertion_point(field_release:NetProto.C2ACheckUserReq.Header)
  
  ::NetProto::MsgHead* temp = header_;
  header_ = NULL;
  return temp;
}
inline void C2ACheckUserReq::set_allocated_header(::NetProto::MsgHead* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.C2ACheckUserReq.Header)
}

// string Seq = 2;
inline void C2ACheckUserReq::clear_seq() {
  seq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& C2ACheckUserReq::seq() const {
  // @@protoc_insertion_point(field_get:NetProto.C2ACheckUserReq.Seq)
  return seq_.GetNoArena();
}
inline void C2ACheckUserReq::set_seq(const ::std::string& value) {
  
  seq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.C2ACheckUserReq.Seq)
}
#if LANG_CXX11
inline void C2ACheckUserReq::set_seq(::std::string&& value) {
  
  seq_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.C2ACheckUserReq.Seq)
}
#endif
inline void C2ACheckUserReq::set_seq(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  seq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.C2ACheckUserReq.Seq)
}
inline void C2ACheckUserReq::set_seq(const char* value, size_t size) {
  
  seq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.C2ACheckUserReq.Seq)
}
inline ::std::string* C2ACheckUserReq::mutable_seq() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.C2ACheckUserReq.Seq)
  return seq_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C2ACheckUserReq::release_seq() {
  // @@protoc_insertion_point(field_release:NetProto.C2ACheckUserReq.Seq)
  
  return seq_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C2ACheckUserReq::set_allocated_seq(::std::string* seq) {
  if (seq != NULL) {
    
  } else {
    
  }
  seq_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), seq);
  // @@protoc_insertion_point(field_set_allocated:NetProto.C2ACheckUserReq.Seq)
}

// string Appid = 3;
inline void C2ACheckUserReq::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& C2ACheckUserReq::appid() const {
  // @@protoc_insertion_point(field_get:NetProto.C2ACheckUserReq.Appid)
  return appid_.GetNoArena();
}
inline void C2ACheckUserReq::set_appid(const ::std::string& value) {
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.C2ACheckUserReq.Appid)
}
#if LANG_CXX11
inline void C2ACheckUserReq::set_appid(::std::string&& value) {
  
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.C2ACheckUserReq.Appid)
}
#endif
inline void C2ACheckUserReq::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.C2ACheckUserReq.Appid)
}
inline void C2ACheckUserReq::set_appid(const char* value, size_t size) {
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.C2ACheckUserReq.Appid)
}
inline ::std::string* C2ACheckUserReq::mutable_appid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.C2ACheckUserReq.Appid)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C2ACheckUserReq::release_appid() {
  // @@protoc_insertion_point(field_release:NetProto.C2ACheckUserReq.Appid)
  
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C2ACheckUserReq::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    
  } else {
    
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.C2ACheckUserReq.Appid)
}

// string Uname = 4;
inline void C2ACheckUserReq::clear_uname() {
  uname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& C2ACheckUserReq::uname() const {
  // @@protoc_insertion_point(field_get:NetProto.C2ACheckUserReq.Uname)
  return uname_.GetNoArena();
}
inline void C2ACheckUserReq::set_uname(const ::std::string& value) {
  
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.C2ACheckUserReq.Uname)
}
#if LANG_CXX11
inline void C2ACheckUserReq::set_uname(::std::string&& value) {
  
  uname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.C2ACheckUserReq.Uname)
}
#endif
inline void C2ACheckUserReq::set_uname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.C2ACheckUserReq.Uname)
}
inline void C2ACheckUserReq::set_uname(const char* value, size_t size) {
  
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.C2ACheckUserReq.Uname)
}
inline ::std::string* C2ACheckUserReq::mutable_uname() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.C2ACheckUserReq.Uname)
  return uname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C2ACheckUserReq::release_uname() {
  // @@protoc_insertion_point(field_release:NetProto.C2ACheckUserReq.Uname)
  
  return uname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C2ACheckUserReq::set_allocated_uname(::std::string* uname) {
  if (uname != NULL) {
    
  } else {
    
  }
  uname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uname);
  // @@protoc_insertion_point(field_set_allocated:NetProto.C2ACheckUserReq.Uname)
}

// string Password = 5;
inline void C2ACheckUserReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& C2ACheckUserReq::password() const {
  // @@protoc_insertion_point(field_get:NetProto.C2ACheckUserReq.Password)
  return password_.GetNoArena();
}
inline void C2ACheckUserReq::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.C2ACheckUserReq.Password)
}
#if LANG_CXX11
inline void C2ACheckUserReq::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.C2ACheckUserReq.Password)
}
#endif
inline void C2ACheckUserReq::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.C2ACheckUserReq.Password)
}
inline void C2ACheckUserReq::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.C2ACheckUserReq.Password)
}
inline ::std::string* C2ACheckUserReq::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.C2ACheckUserReq.Password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C2ACheckUserReq::release_password() {
  // @@protoc_insertion_point(field_release:NetProto.C2ACheckUserReq.Password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C2ACheckUserReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:NetProto.C2ACheckUserReq.Password)
}

// -------------------------------------------------------------------

// A2CAddUserResp

// .NetProto.MsgHead Header = 1;
inline bool A2CAddUserResp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void A2CAddUserResp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::NetProto::MsgHead& A2CAddUserResp::header() const {
  // @@protoc_insertion_point(field_get:NetProto.A2CAddUserResp.Header)
  return header_ != NULL ? *header_
                         : *::NetProto::MsgHead::internal_default_instance();
}
inline ::NetProto::MsgHead* A2CAddUserResp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.A2CAddUserResp.Header)
  return header_;
}
inline ::NetProto::MsgHead* A2CAddUserResp::release_header() {
  // @@protoc_insertion_point(field_release:NetProto.A2CAddUserResp.Header)
  
  ::NetProto::MsgHead* temp = header_;
  header_ = NULL;
  return temp;
}
inline void A2CAddUserResp::set_allocated_header(::NetProto::MsgHead* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.A2CAddUserResp.Header)
}

// string Seq = 2;
inline void A2CAddUserResp::clear_seq() {
  seq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& A2CAddUserResp::seq() const {
  // @@protoc_insertion_point(field_get:NetProto.A2CAddUserResp.Seq)
  return seq_.GetNoArena();
}
inline void A2CAddUserResp::set_seq(const ::std::string& value) {
  
  seq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.A2CAddUserResp.Seq)
}
#if LANG_CXX11
inline void A2CAddUserResp::set_seq(::std::string&& value) {
  
  seq_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.A2CAddUserResp.Seq)
}
#endif
inline void A2CAddUserResp::set_seq(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  seq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.A2CAddUserResp.Seq)
}
inline void A2CAddUserResp::set_seq(const char* value, size_t size) {
  
  seq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.A2CAddUserResp.Seq)
}
inline ::std::string* A2CAddUserResp::mutable_seq() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.A2CAddUserResp.Seq)
  return seq_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* A2CAddUserResp::release_seq() {
  // @@protoc_insertion_point(field_release:NetProto.A2CAddUserResp.Seq)
  
  return seq_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void A2CAddUserResp::set_allocated_seq(::std::string* seq) {
  if (seq != NULL) {
    
  } else {
    
  }
  seq_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), seq);
  // @@protoc_insertion_point(field_set_allocated:NetProto.A2CAddUserResp.Seq)
}

// int64 Result = 3;
inline void A2CAddUserResp::clear_result() {
  result_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 A2CAddUserResp::result() const {
  // @@protoc_insertion_point(field_get:NetProto.A2CAddUserResp.Result)
  return result_;
}
inline void A2CAddUserResp::set_result(::google::protobuf::int64 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:NetProto.A2CAddUserResp.Result)
}

// string Msg = 4;
inline void A2CAddUserResp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& A2CAddUserResp::msg() const {
  // @@protoc_insertion_point(field_get:NetProto.A2CAddUserResp.Msg)
  return msg_.GetNoArena();
}
inline void A2CAddUserResp::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.A2CAddUserResp.Msg)
}
#if LANG_CXX11
inline void A2CAddUserResp::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.A2CAddUserResp.Msg)
}
#endif
inline void A2CAddUserResp::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.A2CAddUserResp.Msg)
}
inline void A2CAddUserResp::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.A2CAddUserResp.Msg)
}
inline ::std::string* A2CAddUserResp::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.A2CAddUserResp.Msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* A2CAddUserResp::release_msg() {
  // @@protoc_insertion_point(field_release:NetProto.A2CAddUserResp.Msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void A2CAddUserResp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:NetProto.A2CAddUserResp.Msg)
}

// int64 Uid = 5;
inline void A2CAddUserResp::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 A2CAddUserResp::uid() const {
  // @@protoc_insertion_point(field_get:NetProto.A2CAddUserResp.Uid)
  return uid_;
}
inline void A2CAddUserResp::set_uid(::google::protobuf::int64 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:NetProto.A2CAddUserResp.Uid)
}

// string Uname = 6;
inline void A2CAddUserResp::clear_uname() {
  uname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& A2CAddUserResp::uname() const {
  // @@protoc_insertion_point(field_get:NetProto.A2CAddUserResp.Uname)
  return uname_.GetNoArena();
}
inline void A2CAddUserResp::set_uname(const ::std::string& value) {
  
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.A2CAddUserResp.Uname)
}
#if LANG_CXX11
inline void A2CAddUserResp::set_uname(::std::string&& value) {
  
  uname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.A2CAddUserResp.Uname)
}
#endif
inline void A2CAddUserResp::set_uname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.A2CAddUserResp.Uname)
}
inline void A2CAddUserResp::set_uname(const char* value, size_t size) {
  
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.A2CAddUserResp.Uname)
}
inline ::std::string* A2CAddUserResp::mutable_uname() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.A2CAddUserResp.Uname)
  return uname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* A2CAddUserResp::release_uname() {
  // @@protoc_insertion_point(field_release:NetProto.A2CAddUserResp.Uname)
  
  return uname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void A2CAddUserResp::set_allocated_uname(::std::string* uname) {
  if (uname != NULL) {
    
  } else {
    
  }
  uname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uname);
  // @@protoc_insertion_point(field_set_allocated:NetProto.A2CAddUserResp.Uname)
}

// -------------------------------------------------------------------

// A2CCheckUserResp

// .NetProto.MsgHead Header = 1;
inline bool A2CCheckUserResp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void A2CCheckUserResp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::NetProto::MsgHead& A2CCheckUserResp::header() const {
  // @@protoc_insertion_point(field_get:NetProto.A2CCheckUserResp.Header)
  return header_ != NULL ? *header_
                         : *::NetProto::MsgHead::internal_default_instance();
}
inline ::NetProto::MsgHead* A2CCheckUserResp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.A2CCheckUserResp.Header)
  return header_;
}
inline ::NetProto::MsgHead* A2CCheckUserResp::release_header() {
  // @@protoc_insertion_point(field_release:NetProto.A2CCheckUserResp.Header)
  
  ::NetProto::MsgHead* temp = header_;
  header_ = NULL;
  return temp;
}
inline void A2CCheckUserResp::set_allocated_header(::NetProto::MsgHead* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.A2CCheckUserResp.Header)
}

// string Seq = 2;
inline void A2CCheckUserResp::clear_seq() {
  seq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& A2CCheckUserResp::seq() const {
  // @@protoc_insertion_point(field_get:NetProto.A2CCheckUserResp.Seq)
  return seq_.GetNoArena();
}
inline void A2CCheckUserResp::set_seq(const ::std::string& value) {
  
  seq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.A2CCheckUserResp.Seq)
}
#if LANG_CXX11
inline void A2CCheckUserResp::set_seq(::std::string&& value) {
  
  seq_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.A2CCheckUserResp.Seq)
}
#endif
inline void A2CCheckUserResp::set_seq(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  seq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.A2CCheckUserResp.Seq)
}
inline void A2CCheckUserResp::set_seq(const char* value, size_t size) {
  
  seq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.A2CCheckUserResp.Seq)
}
inline ::std::string* A2CCheckUserResp::mutable_seq() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.A2CCheckUserResp.Seq)
  return seq_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* A2CCheckUserResp::release_seq() {
  // @@protoc_insertion_point(field_release:NetProto.A2CCheckUserResp.Seq)
  
  return seq_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void A2CCheckUserResp::set_allocated_seq(::std::string* seq) {
  if (seq != NULL) {
    
  } else {
    
  }
  seq_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), seq);
  // @@protoc_insertion_point(field_set_allocated:NetProto.A2CCheckUserResp.Seq)
}

// int64 Result = 3;
inline void A2CCheckUserResp::clear_result() {
  result_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 A2CCheckUserResp::result() const {
  // @@protoc_insertion_point(field_get:NetProto.A2CCheckUserResp.Result)
  return result_;
}
inline void A2CCheckUserResp::set_result(::google::protobuf::int64 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:NetProto.A2CCheckUserResp.Result)
}

// string Msg = 4;
inline void A2CCheckUserResp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& A2CCheckUserResp::msg() const {
  // @@protoc_insertion_point(field_get:NetProto.A2CCheckUserResp.Msg)
  return msg_.GetNoArena();
}
inline void A2CCheckUserResp::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.A2CCheckUserResp.Msg)
}
#if LANG_CXX11
inline void A2CCheckUserResp::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.A2CCheckUserResp.Msg)
}
#endif
inline void A2CCheckUserResp::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.A2CCheckUserResp.Msg)
}
inline void A2CCheckUserResp::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.A2CCheckUserResp.Msg)
}
inline ::std::string* A2CCheckUserResp::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.A2CCheckUserResp.Msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* A2CCheckUserResp::release_msg() {
  // @@protoc_insertion_point(field_release:NetProto.A2CCheckUserResp.Msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void A2CCheckUserResp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:NetProto.A2CCheckUserResp.Msg)
}

// int64 Uid = 5;
inline void A2CCheckUserResp::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 A2CCheckUserResp::uid() const {
  // @@protoc_insertion_point(field_get:NetProto.A2CCheckUserResp.Uid)
  return uid_;
}
inline void A2CCheckUserResp::set_uid(::google::protobuf::int64 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:NetProto.A2CCheckUserResp.Uid)
}

// string Uname = 6;
inline void A2CCheckUserResp::clear_uname() {
  uname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& A2CCheckUserResp::uname() const {
  // @@protoc_insertion_point(field_get:NetProto.A2CCheckUserResp.Uname)
  return uname_.GetNoArena();
}
inline void A2CCheckUserResp::set_uname(const ::std::string& value) {
  
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.A2CCheckUserResp.Uname)
}
#if LANG_CXX11
inline void A2CCheckUserResp::set_uname(::std::string&& value) {
  
  uname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.A2CCheckUserResp.Uname)
}
#endif
inline void A2CCheckUserResp::set_uname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.A2CCheckUserResp.Uname)
}
inline void A2CCheckUserResp::set_uname(const char* value, size_t size) {
  
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.A2CCheckUserResp.Uname)
}
inline ::std::string* A2CCheckUserResp::mutable_uname() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.A2CCheckUserResp.Uname)
  return uname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* A2CCheckUserResp::release_uname() {
  // @@protoc_insertion_point(field_release:NetProto.A2CCheckUserResp.Uname)
  
  return uname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void A2CCheckUserResp::set_allocated_uname(::std::string* uname) {
  if (uname != NULL) {
    
  } else {
    
  }
  uname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uname);
  // @@protoc_insertion_point(field_set_allocated:NetProto.A2CCheckUserResp.Uname)
}

// string GameServerAddr = 7;
inline void A2CCheckUserResp::clear_gameserveraddr() {
  gameserveraddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& A2CCheckUserResp::gameserveraddr() const {
  // @@protoc_insertion_point(field_get:NetProto.A2CCheckUserResp.GameServerAddr)
  return gameserveraddr_.GetNoArena();
}
inline void A2CCheckUserResp::set_gameserveraddr(const ::std::string& value) {
  
  gameserveraddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.A2CCheckUserResp.GameServerAddr)
}
#if LANG_CXX11
inline void A2CCheckUserResp::set_gameserveraddr(::std::string&& value) {
  
  gameserveraddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.A2CCheckUserResp.GameServerAddr)
}
#endif
inline void A2CCheckUserResp::set_gameserveraddr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  gameserveraddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.A2CCheckUserResp.GameServerAddr)
}
inline void A2CCheckUserResp::set_gameserveraddr(const char* value, size_t size) {
  
  gameserveraddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.A2CCheckUserResp.GameServerAddr)
}
inline ::std::string* A2CCheckUserResp::mutable_gameserveraddr() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.A2CCheckUserResp.GameServerAddr)
  return gameserveraddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* A2CCheckUserResp::release_gameserveraddr() {
  // @@protoc_insertion_point(field_release:NetProto.A2CCheckUserResp.GameServerAddr)
  
  return gameserveraddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void A2CCheckUserResp::set_allocated_gameserveraddr(::std::string* gameserveraddr) {
  if (gameserveraddr != NULL) {
    
  } else {
    
  }
  gameserveraddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gameserveraddr);
  // @@protoc_insertion_point(field_set_allocated:NetProto.A2CCheckUserResp.GameServerAddr)
}

// -------------------------------------------------------------------

// C2GSHeartBeat

// uint32 clientID = 1;
inline void C2GSHeartBeat::clear_clientid() {
  clientid_ = 0u;
}
inline ::google::protobuf::uint32 C2GSHeartBeat::clientid() const {
  // @@protoc_insertion_point(field_get:NetProto.C2GSHeartBeat.clientID)
  return clientid_;
}
inline void C2GSHeartBeat::set_clientid(::google::protobuf::uint32 value) {
  
  clientid_ = value;
  // @@protoc_insertion_point(field_set:NetProto.C2GSHeartBeat.clientID)
}

// -------------------------------------------------------------------

// C2GSLogin

// uint32 accountID = 1;
inline void C2GSLogin::clear_accountid() {
  accountid_ = 0u;
}
inline ::google::protobuf::uint32 C2GSLogin::accountid() const {
  // @@protoc_insertion_point(field_get:NetProto.C2GSLogin.accountID)
  return accountid_;
}
inline void C2GSLogin::set_accountid(::google::protobuf::uint32 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:NetProto.C2GSLogin.accountID)
}

// -------------------------------------------------------------------

// C2GSCreateRobot

// uint32 accountID = 1;
inline void C2GSCreateRobot::clear_accountid() {
  accountid_ = 0u;
}
inline ::google::protobuf::uint32 C2GSCreateRobot::accountid() const {
  // @@protoc_insertion_point(field_get:NetProto.C2GSCreateRobot.accountID)
  return accountid_;
}
inline void C2GSCreateRobot::set_accountid(::google::protobuf::uint32 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:NetProto.C2GSCreateRobot.accountID)
}

// uint32 robotType = 2;
inline void C2GSCreateRobot::clear_robottype() {
  robottype_ = 0u;
}
inline ::google::protobuf::uint32 C2GSCreateRobot::robottype() const {
  // @@protoc_insertion_point(field_get:NetProto.C2GSCreateRobot.robotType)
  return robottype_;
}
inline void C2GSCreateRobot::set_robottype(::google::protobuf::uint32 value) {
  
  robottype_ = value;
  // @@protoc_insertion_point(field_set:NetProto.C2GSCreateRobot.robotType)
}

// -------------------------------------------------------------------

// C2GSEnterScene

// .NetProto.MsgHead msgHead = 1;
inline bool C2GSEnterScene::has_msghead() const {
  return this != internal_default_instance() && msghead_ != NULL;
}
inline void C2GSEnterScene::clear_msghead() {
  if (GetArenaNoVirtual() == NULL && msghead_ != NULL) delete msghead_;
  msghead_ = NULL;
}
inline const ::NetProto::MsgHead& C2GSEnterScene::msghead() const {
  // @@protoc_insertion_point(field_get:NetProto.C2GSEnterScene.msgHead)
  return msghead_ != NULL ? *msghead_
                         : *::NetProto::MsgHead::internal_default_instance();
}
inline ::NetProto::MsgHead* C2GSEnterScene::mutable_msghead() {
  
  if (msghead_ == NULL) {
    msghead_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.C2GSEnterScene.msgHead)
  return msghead_;
}
inline ::NetProto::MsgHead* C2GSEnterScene::release_msghead() {
  // @@protoc_insertion_point(field_release:NetProto.C2GSEnterScene.msgHead)
  
  ::NetProto::MsgHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void C2GSEnterScene::set_allocated_msghead(::NetProto::MsgHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.C2GSEnterScene.msgHead)
}

// uint32 accountID = 2;
inline void C2GSEnterScene::clear_accountid() {
  accountid_ = 0u;
}
inline ::google::protobuf::uint32 C2GSEnterScene::accountid() const {
  // @@protoc_insertion_point(field_get:NetProto.C2GSEnterScene.accountID)
  return accountid_;
}
inline void C2GSEnterScene::set_accountid(::google::protobuf::uint32 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:NetProto.C2GSEnterScene.accountID)
}

// uint32 sceneType = 3;
inline void C2GSEnterScene::clear_scenetype() {
  scenetype_ = 0u;
}
inline ::google::protobuf::uint32 C2GSEnterScene::scenetype() const {
  // @@protoc_insertion_point(field_get:NetProto.C2GSEnterScene.sceneType)
  return scenetype_;
}
inline void C2GSEnterScene::set_scenetype(::google::protobuf::uint32 value) {
  
  scenetype_ = value;
  // @@protoc_insertion_point(field_set:NetProto.C2GSEnterScene.sceneType)
}

// -------------------------------------------------------------------

// GS2CLogin

// bool isSuccess = 1;
inline void GS2CLogin::clear_issuccess() {
  issuccess_ = false;
}
inline bool GS2CLogin::issuccess() const {
  // @@protoc_insertion_point(field_get:NetProto.GS2CLogin.isSuccess)
  return issuccess_;
}
inline void GS2CLogin::set_issuccess(bool value) {
  
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:NetProto.GS2CLogin.isSuccess)
}

// string ret = 2;
inline void GS2CLogin::clear_ret() {
  ret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GS2CLogin::ret() const {
  // @@protoc_insertion_point(field_get:NetProto.GS2CLogin.ret)
  return ret_.GetNoArena();
}
inline void GS2CLogin::set_ret(const ::std::string& value) {
  
  ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.GS2CLogin.ret)
}
#if LANG_CXX11
inline void GS2CLogin::set_ret(::std::string&& value) {
  
  ret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.GS2CLogin.ret)
}
#endif
inline void GS2CLogin::set_ret(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.GS2CLogin.ret)
}
inline void GS2CLogin::set_ret(const char* value, size_t size) {
  
  ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.GS2CLogin.ret)
}
inline ::std::string* GS2CLogin::mutable_ret() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.GS2CLogin.ret)
  return ret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GS2CLogin::release_ret() {
  // @@protoc_insertion_point(field_release:NetProto.GS2CLogin.ret)
  
  return ret_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GS2CLogin::set_allocated_ret(::std::string* ret) {
  if (ret != NULL) {
    
  } else {
    
  }
  ret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ret);
  // @@protoc_insertion_point(field_set_allocated:NetProto.GS2CLogin.ret)
}

// uint32 robotFlag = 3;
inline void GS2CLogin::clear_robotflag() {
  robotflag_ = 0u;
}
inline ::google::protobuf::uint32 GS2CLogin::robotflag() const {
  // @@protoc_insertion_point(field_get:NetProto.GS2CLogin.robotFlag)
  return robotflag_;
}
inline void GS2CLogin::set_robotflag(::google::protobuf::uint32 value) {
  
  robotflag_ = value;
  // @@protoc_insertion_point(field_set:NetProto.GS2CLogin.robotFlag)
}

// repeated .NetProto.CreateRobotInfo robotList = 4;
inline int GS2CLogin::robotlist_size() const {
  return robotlist_.size();
}
inline void GS2CLogin::clear_robotlist() {
  robotlist_.Clear();
}
inline const ::NetProto::CreateRobotInfo& GS2CLogin::robotlist(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.GS2CLogin.robotList)
  return robotlist_.Get(index);
}
inline ::NetProto::CreateRobotInfo* GS2CLogin::mutable_robotlist(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.GS2CLogin.robotList)
  return robotlist_.Mutable(index);
}
inline ::NetProto::CreateRobotInfo* GS2CLogin::add_robotlist() {
  // @@protoc_insertion_point(field_add:NetProto.GS2CLogin.robotList)
  return robotlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetProto::CreateRobotInfo >*
GS2CLogin::mutable_robotlist() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.GS2CLogin.robotList)
  return &robotlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetProto::CreateRobotInfo >&
GS2CLogin::robotlist() const {
  // @@protoc_insertion_point(field_list:NetProto.GS2CLogin.robotList)
  return robotlist_;
}

// -------------------------------------------------------------------

// GS2CCreateRobot

// bool isSuccess = 1;
inline void GS2CCreateRobot::clear_issuccess() {
  issuccess_ = false;
}
inline bool GS2CCreateRobot::issuccess() const {
  // @@protoc_insertion_point(field_get:NetProto.GS2CCreateRobot.isSuccess)
  return issuccess_;
}
inline void GS2CCreateRobot::set_issuccess(bool value) {
  
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:NetProto.GS2CCreateRobot.isSuccess)
}

// string ret = 2;
inline void GS2CCreateRobot::clear_ret() {
  ret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GS2CCreateRobot::ret() const {
  // @@protoc_insertion_point(field_get:NetProto.GS2CCreateRobot.ret)
  return ret_.GetNoArena();
}
inline void GS2CCreateRobot::set_ret(const ::std::string& value) {
  
  ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.GS2CCreateRobot.ret)
}
#if LANG_CXX11
inline void GS2CCreateRobot::set_ret(::std::string&& value) {
  
  ret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.GS2CCreateRobot.ret)
}
#endif
inline void GS2CCreateRobot::set_ret(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.GS2CCreateRobot.ret)
}
inline void GS2CCreateRobot::set_ret(const char* value, size_t size) {
  
  ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.GS2CCreateRobot.ret)
}
inline ::std::string* GS2CCreateRobot::mutable_ret() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.GS2CCreateRobot.ret)
  return ret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GS2CCreateRobot::release_ret() {
  // @@protoc_insertion_point(field_release:NetProto.GS2CCreateRobot.ret)
  
  return ret_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GS2CCreateRobot::set_allocated_ret(::std::string* ret) {
  if (ret != NULL) {
    
  } else {
    
  }
  ret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ret);
  // @@protoc_insertion_point(field_set_allocated:NetProto.GS2CCreateRobot.ret)
}

// .NetProto.RobotInfo robotInfo = 3;
inline bool GS2CCreateRobot::has_robotinfo() const {
  return this != internal_default_instance() && robotinfo_ != NULL;
}
inline void GS2CCreateRobot::clear_robotinfo() {
  if (GetArenaNoVirtual() == NULL && robotinfo_ != NULL) delete robotinfo_;
  robotinfo_ = NULL;
}
inline const ::NetProto::RobotInfo& GS2CCreateRobot::robotinfo() const {
  // @@protoc_insertion_point(field_get:NetProto.GS2CCreateRobot.robotInfo)
  return robotinfo_ != NULL ? *robotinfo_
                         : *::NetProto::RobotInfo::internal_default_instance();
}
inline ::NetProto::RobotInfo* GS2CCreateRobot::mutable_robotinfo() {
  
  if (robotinfo_ == NULL) {
    robotinfo_ = new ::NetProto::RobotInfo;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.GS2CCreateRobot.robotInfo)
  return robotinfo_;
}
inline ::NetProto::RobotInfo* GS2CCreateRobot::release_robotinfo() {
  // @@protoc_insertion_point(field_release:NetProto.GS2CCreateRobot.robotInfo)
  
  ::NetProto::RobotInfo* temp = robotinfo_;
  robotinfo_ = NULL;
  return temp;
}
inline void GS2CCreateRobot::set_allocated_robotinfo(::NetProto::RobotInfo* robotinfo) {
  delete robotinfo_;
  robotinfo_ = robotinfo;
  if (robotinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.GS2CCreateRobot.robotInfo)
}

// -------------------------------------------------------------------

// GS2CEnterScene_ObjInfo

// string uuid = 1;
inline void GS2CEnterScene_ObjInfo::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GS2CEnterScene_ObjInfo::uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.GS2CEnterScene.ObjInfo.uuid)
  return uuid_.GetNoArena();
}
inline void GS2CEnterScene_ObjInfo::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.GS2CEnterScene.ObjInfo.uuid)
}
#if LANG_CXX11
inline void GS2CEnterScene_ObjInfo::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.GS2CEnterScene.ObjInfo.uuid)
}
#endif
inline void GS2CEnterScene_ObjInfo::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.GS2CEnterScene.ObjInfo.uuid)
}
inline void GS2CEnterScene_ObjInfo::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.GS2CEnterScene.ObjInfo.uuid)
}
inline ::std::string* GS2CEnterScene_ObjInfo::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.GS2CEnterScene.ObjInfo.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GS2CEnterScene_ObjInfo::release_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.GS2CEnterScene.ObjInfo.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GS2CEnterScene_ObjInfo::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.GS2CEnterScene.ObjInfo.uuid)
}

// uint32 class_id = 2;
inline void GS2CEnterScene_ObjInfo::clear_class_id() {
  class_id_ = 0u;
}
inline ::google::protobuf::uint32 GS2CEnterScene_ObjInfo::class_id() const {
  // @@protoc_insertion_point(field_get:NetProto.GS2CEnterScene.ObjInfo.class_id)
  return class_id_;
}
inline void GS2CEnterScene_ObjInfo::set_class_id(::google::protobuf::uint32 value) {
  
  class_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.GS2CEnterScene.ObjInfo.class_id)
}

// uint32 item_id = 3;
inline void GS2CEnterScene_ObjInfo::clear_item_id() {
  item_id_ = 0u;
}
inline ::google::protobuf::uint32 GS2CEnterScene_ObjInfo::item_id() const {
  // @@protoc_insertion_point(field_get:NetProto.GS2CEnterScene.ObjInfo.item_id)
  return item_id_;
}
inline void GS2CEnterScene_ObjInfo::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.GS2CEnterScene.ObjInfo.item_id)
}

// .NetProto.PosRot pos_rot = 4;
inline bool GS2CEnterScene_ObjInfo::has_pos_rot() const {
  return this != internal_default_instance() && pos_rot_ != NULL;
}
inline void GS2CEnterScene_ObjInfo::clear_pos_rot() {
  if (GetArenaNoVirtual() == NULL && pos_rot_ != NULL) delete pos_rot_;
  pos_rot_ = NULL;
}
inline const ::NetProto::PosRot& GS2CEnterScene_ObjInfo::pos_rot() const {
  // @@protoc_insertion_point(field_get:NetProto.GS2CEnterScene.ObjInfo.pos_rot)
  return pos_rot_ != NULL ? *pos_rot_
                         : *::NetProto::PosRot::internal_default_instance();
}
inline ::NetProto::PosRot* GS2CEnterScene_ObjInfo::mutable_pos_rot() {
  
  if (pos_rot_ == NULL) {
    pos_rot_ = new ::NetProto::PosRot;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.GS2CEnterScene.ObjInfo.pos_rot)
  return pos_rot_;
}
inline ::NetProto::PosRot* GS2CEnterScene_ObjInfo::release_pos_rot() {
  // @@protoc_insertion_point(field_release:NetProto.GS2CEnterScene.ObjInfo.pos_rot)
  
  ::NetProto::PosRot* temp = pos_rot_;
  pos_rot_ = NULL;
  return temp;
}
inline void GS2CEnterScene_ObjInfo::set_allocated_pos_rot(::NetProto::PosRot* pos_rot) {
  delete pos_rot_;
  pos_rot_ = pos_rot;
  if (pos_rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.GS2CEnterScene.ObjInfo.pos_rot)
}

// -------------------------------------------------------------------

// GS2CEnterScene

// string owner_uuid = 1000;
inline void GS2CEnterScene::clear_owner_uuid() {
  owner_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GS2CEnterScene::owner_uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.GS2CEnterScene.owner_uuid)
  return owner_uuid_.GetNoArena();
}
inline void GS2CEnterScene::set_owner_uuid(const ::std::string& value) {
  
  owner_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.GS2CEnterScene.owner_uuid)
}
#if LANG_CXX11
inline void GS2CEnterScene::set_owner_uuid(::std::string&& value) {
  
  owner_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.GS2CEnterScene.owner_uuid)
}
#endif
inline void GS2CEnterScene::set_owner_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  owner_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.GS2CEnterScene.owner_uuid)
}
inline void GS2CEnterScene::set_owner_uuid(const char* value, size_t size) {
  
  owner_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.GS2CEnterScene.owner_uuid)
}
inline ::std::string* GS2CEnterScene::mutable_owner_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.GS2CEnterScene.owner_uuid)
  return owner_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GS2CEnterScene::release_owner_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.GS2CEnterScene.owner_uuid)
  
  return owner_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GS2CEnterScene::set_allocated_owner_uuid(::std::string* owner_uuid) {
  if (owner_uuid != NULL) {
    
  } else {
    
  }
  owner_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner_uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.GS2CEnterScene.owner_uuid)
}

// uint32 map_id = 1001;
inline void GS2CEnterScene::clear_map_id() {
  map_id_ = 0u;
}
inline ::google::protobuf::uint32 GS2CEnterScene::map_id() const {
  // @@protoc_insertion_point(field_get:NetProto.GS2CEnterScene.map_id)
  return map_id_;
}
inline void GS2CEnterScene::set_map_id(::google::protobuf::uint32 value) {
  
  map_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.GS2CEnterScene.map_id)
}

// string scene_id = 1002;
inline void GS2CEnterScene::clear_scene_id() {
  scene_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GS2CEnterScene::scene_id() const {
  // @@protoc_insertion_point(field_get:NetProto.GS2CEnterScene.scene_id)
  return scene_id_.GetNoArena();
}
inline void GS2CEnterScene::set_scene_id(const ::std::string& value) {
  
  scene_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.GS2CEnterScene.scene_id)
}
#if LANG_CXX11
inline void GS2CEnterScene::set_scene_id(::std::string&& value) {
  
  scene_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.GS2CEnterScene.scene_id)
}
#endif
inline void GS2CEnterScene::set_scene_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  scene_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.GS2CEnterScene.scene_id)
}
inline void GS2CEnterScene::set_scene_id(const char* value, size_t size) {
  
  scene_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.GS2CEnterScene.scene_id)
}
inline ::std::string* GS2CEnterScene::mutable_scene_id() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.GS2CEnterScene.scene_id)
  return scene_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GS2CEnterScene::release_scene_id() {
  // @@protoc_insertion_point(field_release:NetProto.GS2CEnterScene.scene_id)
  
  return scene_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GS2CEnterScene::set_allocated_scene_id(::std::string* scene_id) {
  if (scene_id != NULL) {
    
  } else {
    
  }
  scene_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scene_id);
  // @@protoc_insertion_point(field_set_allocated:NetProto.GS2CEnterScene.scene_id)
}

// repeated .NetProto.GS2CEnterScene.ObjInfo obj_info = 1003;
inline int GS2CEnterScene::obj_info_size() const {
  return obj_info_.size();
}
inline void GS2CEnterScene::clear_obj_info() {
  obj_info_.Clear();
}
inline const ::NetProto::GS2CEnterScene_ObjInfo& GS2CEnterScene::obj_info(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.GS2CEnterScene.obj_info)
  return obj_info_.Get(index);
}
inline ::NetProto::GS2CEnterScene_ObjInfo* GS2CEnterScene::mutable_obj_info(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.GS2CEnterScene.obj_info)
  return obj_info_.Mutable(index);
}
inline ::NetProto::GS2CEnterScene_ObjInfo* GS2CEnterScene::add_obj_info() {
  // @@protoc_insertion_point(field_add:NetProto.GS2CEnterScene.obj_info)
  return obj_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetProto::GS2CEnterScene_ObjInfo >*
GS2CEnterScene::mutable_obj_info() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.GS2CEnterScene.obj_info)
  return &obj_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetProto::GS2CEnterScene_ObjInfo >&
GS2CEnterScene::obj_info() const {
  // @@protoc_insertion_point(field_list:NetProto.GS2CEnterScene.obj_info)
  return obj_info_;
}

// repeated .NetProto.Action.Status.NaturalActionStatus status_vector = 1005;
inline int GS2CEnterScene::status_vector_size() const {
  return status_vector_.size();
}
inline void GS2CEnterScene::clear_status_vector() {
  status_vector_.Clear();
}
inline const ::NetProto::Action::Status::NaturalActionStatus& GS2CEnterScene::status_vector(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.GS2CEnterScene.status_vector)
  return status_vector_.Get(index);
}
inline ::NetProto::Action::Status::NaturalActionStatus* GS2CEnterScene::mutable_status_vector(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.GS2CEnterScene.status_vector)
  return status_vector_.Mutable(index);
}
inline ::NetProto::Action::Status::NaturalActionStatus* GS2CEnterScene::add_status_vector() {
  // @@protoc_insertion_point(field_add:NetProto.GS2CEnterScene.status_vector)
  return status_vector_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetProto::Action::Status::NaturalActionStatus >*
GS2CEnterScene::mutable_status_vector() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.GS2CEnterScene.status_vector)
  return &status_vector_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetProto::Action::Status::NaturalActionStatus >&
GS2CEnterScene::status_vector() const {
  // @@protoc_insertion_point(field_list:NetProto.GS2CEnterScene.status_vector)
  return status_vector_;
}

// -------------------------------------------------------------------

// GS2MTSHeart

// uint32 gameServerID = 1;
inline void GS2MTSHeart::clear_gameserverid() {
  gameserverid_ = 0u;
}
inline ::google::protobuf::uint32 GS2MTSHeart::gameserverid() const {
  // @@protoc_insertion_point(field_get:NetProto.GS2MTSHeart.gameServerID)
  return gameserverid_;
}
inline void GS2MTSHeart::set_gameserverid(::google::protobuf::uint32 value) {
  
  gameserverid_ = value;
  // @@protoc_insertion_point(field_set:NetProto.GS2MTSHeart.gameServerID)
}

// -------------------------------------------------------------------

// GS2MTSGetRobotList

// .NetProto.MsgHead msgHead = 1;
inline bool GS2MTSGetRobotList::has_msghead() const {
  return this != internal_default_instance() && msghead_ != NULL;
}
inline void GS2MTSGetRobotList::clear_msghead() {
  if (GetArenaNoVirtual() == NULL && msghead_ != NULL) delete msghead_;
  msghead_ = NULL;
}
inline const ::NetProto::MsgHead& GS2MTSGetRobotList::msghead() const {
  // @@protoc_insertion_point(field_get:NetProto.GS2MTSGetRobotList.msgHead)
  return msghead_ != NULL ? *msghead_
                         : *::NetProto::MsgHead::internal_default_instance();
}
inline ::NetProto::MsgHead* GS2MTSGetRobotList::mutable_msghead() {
  
  if (msghead_ == NULL) {
    msghead_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.GS2MTSGetRobotList.msgHead)
  return msghead_;
}
inline ::NetProto::MsgHead* GS2MTSGetRobotList::release_msghead() {
  // @@protoc_insertion_point(field_release:NetProto.GS2MTSGetRobotList.msgHead)
  
  ::NetProto::MsgHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void GS2MTSGetRobotList::set_allocated_msghead(::NetProto::MsgHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.GS2MTSGetRobotList.msgHead)
}

// uint32 accountID = 2;
inline void GS2MTSGetRobotList::clear_accountid() {
  accountid_ = 0u;
}
inline ::google::protobuf::uint32 GS2MTSGetRobotList::accountid() const {
  // @@protoc_insertion_point(field_get:NetProto.GS2MTSGetRobotList.accountID)
  return accountid_;
}
inline void GS2MTSGetRobotList::set_accountid(::google::protobuf::uint32 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:NetProto.GS2MTSGetRobotList.accountID)
}

// -------------------------------------------------------------------

// GS2MTSCreateRobot

// .NetProto.MsgHead msgHead = 1;
inline bool GS2MTSCreateRobot::has_msghead() const {
  return this != internal_default_instance() && msghead_ != NULL;
}
inline void GS2MTSCreateRobot::clear_msghead() {
  if (GetArenaNoVirtual() == NULL && msghead_ != NULL) delete msghead_;
  msghead_ = NULL;
}
inline const ::NetProto::MsgHead& GS2MTSCreateRobot::msghead() const {
  // @@protoc_insertion_point(field_get:NetProto.GS2MTSCreateRobot.msgHead)
  return msghead_ != NULL ? *msghead_
                         : *::NetProto::MsgHead::internal_default_instance();
}
inline ::NetProto::MsgHead* GS2MTSCreateRobot::mutable_msghead() {
  
  if (msghead_ == NULL) {
    msghead_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.GS2MTSCreateRobot.msgHead)
  return msghead_;
}
inline ::NetProto::MsgHead* GS2MTSCreateRobot::release_msghead() {
  // @@protoc_insertion_point(field_release:NetProto.GS2MTSCreateRobot.msgHead)
  
  ::NetProto::MsgHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void GS2MTSCreateRobot::set_allocated_msghead(::NetProto::MsgHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.GS2MTSCreateRobot.msgHead)
}

// uint32 accountID = 2;
inline void GS2MTSCreateRobot::clear_accountid() {
  accountid_ = 0u;
}
inline ::google::protobuf::uint32 GS2MTSCreateRobot::accountid() const {
  // @@protoc_insertion_point(field_get:NetProto.GS2MTSCreateRobot.accountID)
  return accountid_;
}
inline void GS2MTSCreateRobot::set_accountid(::google::protobuf::uint32 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:NetProto.GS2MTSCreateRobot.accountID)
}

// uint32 robotPrototypeID = 3;
inline void GS2MTSCreateRobot::clear_robotprototypeid() {
  robotprototypeid_ = 0u;
}
inline ::google::protobuf::uint32 GS2MTSCreateRobot::robotprototypeid() const {
  // @@protoc_insertion_point(field_get:NetProto.GS2MTSCreateRobot.robotPrototypeID)
  return robotprototypeid_;
}
inline void GS2MTSCreateRobot::set_robotprototypeid(::google::protobuf::uint32 value) {
  
  robotprototypeid_ = value;
  // @@protoc_insertion_point(field_set:NetProto.GS2MTSCreateRobot.robotPrototypeID)
}

// -------------------------------------------------------------------

// GS2MTSGetSceneItem

// .NetProto.MsgHead msgHead = 1;
inline bool GS2MTSGetSceneItem::has_msghead() const {
  return this != internal_default_instance() && msghead_ != NULL;
}
inline void GS2MTSGetSceneItem::clear_msghead() {
  if (GetArenaNoVirtual() == NULL && msghead_ != NULL) delete msghead_;
  msghead_ = NULL;
}
inline const ::NetProto::MsgHead& GS2MTSGetSceneItem::msghead() const {
  // @@protoc_insertion_point(field_get:NetProto.GS2MTSGetSceneItem.msgHead)
  return msghead_ != NULL ? *msghead_
                         : *::NetProto::MsgHead::internal_default_instance();
}
inline ::NetProto::MsgHead* GS2MTSGetSceneItem::mutable_msghead() {
  
  if (msghead_ == NULL) {
    msghead_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.GS2MTSGetSceneItem.msgHead)
  return msghead_;
}
inline ::NetProto::MsgHead* GS2MTSGetSceneItem::release_msghead() {
  // @@protoc_insertion_point(field_release:NetProto.GS2MTSGetSceneItem.msgHead)
  
  ::NetProto::MsgHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void GS2MTSGetSceneItem::set_allocated_msghead(::NetProto::MsgHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.GS2MTSGetSceneItem.msgHead)
}

// uint32 accountID = 2;
inline void GS2MTSGetSceneItem::clear_accountid() {
  accountid_ = 0u;
}
inline ::google::protobuf::uint32 GS2MTSGetSceneItem::accountid() const {
  // @@protoc_insertion_point(field_get:NetProto.GS2MTSGetSceneItem.accountID)
  return accountid_;
}
inline void GS2MTSGetSceneItem::set_accountid(::google::protobuf::uint32 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:NetProto.GS2MTSGetSceneItem.accountID)
}

// uint32 sceneType = 3;
inline void GS2MTSGetSceneItem::clear_scenetype() {
  scenetype_ = 0u;
}
inline ::google::protobuf::uint32 GS2MTSGetSceneItem::scenetype() const {
  // @@protoc_insertion_point(field_get:NetProto.GS2MTSGetSceneItem.sceneType)
  return scenetype_;
}
inline void GS2MTSGetSceneItem::set_scenetype(::google::protobuf::uint32 value) {
  
  scenetype_ = value;
  // @@protoc_insertion_point(field_set:NetProto.GS2MTSGetSceneItem.sceneType)
}

// string sceneID = 4;
inline void GS2MTSGetSceneItem::clear_sceneid() {
  sceneid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GS2MTSGetSceneItem::sceneid() const {
  // @@protoc_insertion_point(field_get:NetProto.GS2MTSGetSceneItem.sceneID)
  return sceneid_.GetNoArena();
}
inline void GS2MTSGetSceneItem::set_sceneid(const ::std::string& value) {
  
  sceneid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.GS2MTSGetSceneItem.sceneID)
}
#if LANG_CXX11
inline void GS2MTSGetSceneItem::set_sceneid(::std::string&& value) {
  
  sceneid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.GS2MTSGetSceneItem.sceneID)
}
#endif
inline void GS2MTSGetSceneItem::set_sceneid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sceneid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.GS2MTSGetSceneItem.sceneID)
}
inline void GS2MTSGetSceneItem::set_sceneid(const char* value, size_t size) {
  
  sceneid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.GS2MTSGetSceneItem.sceneID)
}
inline ::std::string* GS2MTSGetSceneItem::mutable_sceneid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.GS2MTSGetSceneItem.sceneID)
  return sceneid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GS2MTSGetSceneItem::release_sceneid() {
  // @@protoc_insertion_point(field_release:NetProto.GS2MTSGetSceneItem.sceneID)
  
  return sceneid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GS2MTSGetSceneItem::set_allocated_sceneid(::std::string* sceneid) {
  if (sceneid != NULL) {
    
  } else {
    
  }
  sceneid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sceneid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.GS2MTSGetSceneItem.sceneID)
}

// -------------------------------------------------------------------

// GS2MTSCreateScene

// .NetProto.MsgHead msgHead = 1;
inline bool GS2MTSCreateScene::has_msghead() const {
  return this != internal_default_instance() && msghead_ != NULL;
}
inline void GS2MTSCreateScene::clear_msghead() {
  if (GetArenaNoVirtual() == NULL && msghead_ != NULL) delete msghead_;
  msghead_ = NULL;
}
inline const ::NetProto::MsgHead& GS2MTSCreateScene::msghead() const {
  // @@protoc_insertion_point(field_get:NetProto.GS2MTSCreateScene.msgHead)
  return msghead_ != NULL ? *msghead_
                         : *::NetProto::MsgHead::internal_default_instance();
}
inline ::NetProto::MsgHead* GS2MTSCreateScene::mutable_msghead() {
  
  if (msghead_ == NULL) {
    msghead_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.GS2MTSCreateScene.msgHead)
  return msghead_;
}
inline ::NetProto::MsgHead* GS2MTSCreateScene::release_msghead() {
  // @@protoc_insertion_point(field_release:NetProto.GS2MTSCreateScene.msgHead)
  
  ::NetProto::MsgHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void GS2MTSCreateScene::set_allocated_msghead(::NetProto::MsgHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.GS2MTSCreateScene.msgHead)
}

// uint32 accountID = 2;
inline void GS2MTSCreateScene::clear_accountid() {
  accountid_ = 0u;
}
inline ::google::protobuf::uint32 GS2MTSCreateScene::accountid() const {
  // @@protoc_insertion_point(field_get:NetProto.GS2MTSCreateScene.accountID)
  return accountid_;
}
inline void GS2MTSCreateScene::set_accountid(::google::protobuf::uint32 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:NetProto.GS2MTSCreateScene.accountID)
}

// uint32 sceneType = 3;
inline void GS2MTSCreateScene::clear_scenetype() {
  scenetype_ = 0u;
}
inline ::google::protobuf::uint32 GS2MTSCreateScene::scenetype() const {
  // @@protoc_insertion_point(field_get:NetProto.GS2MTSCreateScene.sceneType)
  return scenetype_;
}
inline void GS2MTSCreateScene::set_scenetype(::google::protobuf::uint32 value) {
  
  scenetype_ = value;
  // @@protoc_insertion_point(field_set:NetProto.GS2MTSCreateScene.sceneType)
}

// -------------------------------------------------------------------

// MTS2GSGetRobotList

// .NetProto.MsgHead msgHead = 1;
inline bool MTS2GSGetRobotList::has_msghead() const {
  return this != internal_default_instance() && msghead_ != NULL;
}
inline void MTS2GSGetRobotList::clear_msghead() {
  if (GetArenaNoVirtual() == NULL && msghead_ != NULL) delete msghead_;
  msghead_ = NULL;
}
inline const ::NetProto::MsgHead& MTS2GSGetRobotList::msghead() const {
  // @@protoc_insertion_point(field_get:NetProto.MTS2GSGetRobotList.msgHead)
  return msghead_ != NULL ? *msghead_
                         : *::NetProto::MsgHead::internal_default_instance();
}
inline ::NetProto::MsgHead* MTS2GSGetRobotList::mutable_msghead() {
  
  if (msghead_ == NULL) {
    msghead_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.MTS2GSGetRobotList.msgHead)
  return msghead_;
}
inline ::NetProto::MsgHead* MTS2GSGetRobotList::release_msghead() {
  // @@protoc_insertion_point(field_release:NetProto.MTS2GSGetRobotList.msgHead)
  
  ::NetProto::MsgHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void MTS2GSGetRobotList::set_allocated_msghead(::NetProto::MsgHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.MTS2GSGetRobotList.msgHead)
}

// uint32 accountID = 2;
inline void MTS2GSGetRobotList::clear_accountid() {
  accountid_ = 0u;
}
inline ::google::protobuf::uint32 MTS2GSGetRobotList::accountid() const {
  // @@protoc_insertion_point(field_get:NetProto.MTS2GSGetRobotList.accountID)
  return accountid_;
}
inline void MTS2GSGetRobotList::set_accountid(::google::protobuf::uint32 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:NetProto.MTS2GSGetRobotList.accountID)
}

// uint32 robotFlag = 3;
inline void MTS2GSGetRobotList::clear_robotflag() {
  robotflag_ = 0u;
}
inline ::google::protobuf::uint32 MTS2GSGetRobotList::robotflag() const {
  // @@protoc_insertion_point(field_get:NetProto.MTS2GSGetRobotList.robotFlag)
  return robotflag_;
}
inline void MTS2GSGetRobotList::set_robotflag(::google::protobuf::uint32 value) {
  
  robotflag_ = value;
  // @@protoc_insertion_point(field_set:NetProto.MTS2GSGetRobotList.robotFlag)
}

// repeated .NetProto.CreateRobotInfo robotList = 4;
inline int MTS2GSGetRobotList::robotlist_size() const {
  return robotlist_.size();
}
inline void MTS2GSGetRobotList::clear_robotlist() {
  robotlist_.Clear();
}
inline const ::NetProto::CreateRobotInfo& MTS2GSGetRobotList::robotlist(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.MTS2GSGetRobotList.robotList)
  return robotlist_.Get(index);
}
inline ::NetProto::CreateRobotInfo* MTS2GSGetRobotList::mutable_robotlist(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.MTS2GSGetRobotList.robotList)
  return robotlist_.Mutable(index);
}
inline ::NetProto::CreateRobotInfo* MTS2GSGetRobotList::add_robotlist() {
  // @@protoc_insertion_point(field_add:NetProto.MTS2GSGetRobotList.robotList)
  return robotlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetProto::CreateRobotInfo >*
MTS2GSGetRobotList::mutable_robotlist() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.MTS2GSGetRobotList.robotList)
  return &robotlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetProto::CreateRobotInfo >&
MTS2GSGetRobotList::robotlist() const {
  // @@protoc_insertion_point(field_list:NetProto.MTS2GSGetRobotList.robotList)
  return robotlist_;
}

// -------------------------------------------------------------------

// MTS2GSCreateRobot

// .NetProto.MsgHead msgHead = 1;
inline bool MTS2GSCreateRobot::has_msghead() const {
  return this != internal_default_instance() && msghead_ != NULL;
}
inline void MTS2GSCreateRobot::clear_msghead() {
  if (GetArenaNoVirtual() == NULL && msghead_ != NULL) delete msghead_;
  msghead_ = NULL;
}
inline const ::NetProto::MsgHead& MTS2GSCreateRobot::msghead() const {
  // @@protoc_insertion_point(field_get:NetProto.MTS2GSCreateRobot.msgHead)
  return msghead_ != NULL ? *msghead_
                         : *::NetProto::MsgHead::internal_default_instance();
}
inline ::NetProto::MsgHead* MTS2GSCreateRobot::mutable_msghead() {
  
  if (msghead_ == NULL) {
    msghead_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.MTS2GSCreateRobot.msgHead)
  return msghead_;
}
inline ::NetProto::MsgHead* MTS2GSCreateRobot::release_msghead() {
  // @@protoc_insertion_point(field_release:NetProto.MTS2GSCreateRobot.msgHead)
  
  ::NetProto::MsgHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void MTS2GSCreateRobot::set_allocated_msghead(::NetProto::MsgHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.MTS2GSCreateRobot.msgHead)
}

// uint32 accountID = 2;
inline void MTS2GSCreateRobot::clear_accountid() {
  accountid_ = 0u;
}
inline ::google::protobuf::uint32 MTS2GSCreateRobot::accountid() const {
  // @@protoc_insertion_point(field_get:NetProto.MTS2GSCreateRobot.accountID)
  return accountid_;
}
inline void MTS2GSCreateRobot::set_accountid(::google::protobuf::uint32 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:NetProto.MTS2GSCreateRobot.accountID)
}

// repeated .NetProto.CreateRobotInfo robotList = 3;
inline int MTS2GSCreateRobot::robotlist_size() const {
  return robotlist_.size();
}
inline void MTS2GSCreateRobot::clear_robotlist() {
  robotlist_.Clear();
}
inline const ::NetProto::CreateRobotInfo& MTS2GSCreateRobot::robotlist(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.MTS2GSCreateRobot.robotList)
  return robotlist_.Get(index);
}
inline ::NetProto::CreateRobotInfo* MTS2GSCreateRobot::mutable_robotlist(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.MTS2GSCreateRobot.robotList)
  return robotlist_.Mutable(index);
}
inline ::NetProto::CreateRobotInfo* MTS2GSCreateRobot::add_robotlist() {
  // @@protoc_insertion_point(field_add:NetProto.MTS2GSCreateRobot.robotList)
  return robotlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetProto::CreateRobotInfo >*
MTS2GSCreateRobot::mutable_robotlist() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.MTS2GSCreateRobot.robotList)
  return &robotlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetProto::CreateRobotInfo >&
MTS2GSCreateRobot::robotlist() const {
  // @@protoc_insertion_point(field_list:NetProto.MTS2GSCreateRobot.robotList)
  return robotlist_;
}

// -------------------------------------------------------------------

// MTS2GSGetSceneItem

// .NetProto.MsgHead msgHead = 1;
inline bool MTS2GSGetSceneItem::has_msghead() const {
  return this != internal_default_instance() && msghead_ != NULL;
}
inline void MTS2GSGetSceneItem::clear_msghead() {
  if (GetArenaNoVirtual() == NULL && msghead_ != NULL) delete msghead_;
  msghead_ = NULL;
}
inline const ::NetProto::MsgHead& MTS2GSGetSceneItem::msghead() const {
  // @@protoc_insertion_point(field_get:NetProto.MTS2GSGetSceneItem.msgHead)
  return msghead_ != NULL ? *msghead_
                         : *::NetProto::MsgHead::internal_default_instance();
}
inline ::NetProto::MsgHead* MTS2GSGetSceneItem::mutable_msghead() {
  
  if (msghead_ == NULL) {
    msghead_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.MTS2GSGetSceneItem.msgHead)
  return msghead_;
}
inline ::NetProto::MsgHead* MTS2GSGetSceneItem::release_msghead() {
  // @@protoc_insertion_point(field_release:NetProto.MTS2GSGetSceneItem.msgHead)
  
  ::NetProto::MsgHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void MTS2GSGetSceneItem::set_allocated_msghead(::NetProto::MsgHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.MTS2GSGetSceneItem.msgHead)
}

// uint32 accountID = 2;
inline void MTS2GSGetSceneItem::clear_accountid() {
  accountid_ = 0u;
}
inline ::google::protobuf::uint32 MTS2GSGetSceneItem::accountid() const {
  // @@protoc_insertion_point(field_get:NetProto.MTS2GSGetSceneItem.accountID)
  return accountid_;
}
inline void MTS2GSGetSceneItem::set_accountid(::google::protobuf::uint32 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:NetProto.MTS2GSGetSceneItem.accountID)
}

// string sceneID = 3;
inline void MTS2GSGetSceneItem::clear_sceneid() {
  sceneid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MTS2GSGetSceneItem::sceneid() const {
  // @@protoc_insertion_point(field_get:NetProto.MTS2GSGetSceneItem.sceneID)
  return sceneid_.GetNoArena();
}
inline void MTS2GSGetSceneItem::set_sceneid(const ::std::string& value) {
  
  sceneid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.MTS2GSGetSceneItem.sceneID)
}
#if LANG_CXX11
inline void MTS2GSGetSceneItem::set_sceneid(::std::string&& value) {
  
  sceneid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.MTS2GSGetSceneItem.sceneID)
}
#endif
inline void MTS2GSGetSceneItem::set_sceneid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sceneid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.MTS2GSGetSceneItem.sceneID)
}
inline void MTS2GSGetSceneItem::set_sceneid(const char* value, size_t size) {
  
  sceneid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.MTS2GSGetSceneItem.sceneID)
}
inline ::std::string* MTS2GSGetSceneItem::mutable_sceneid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.MTS2GSGetSceneItem.sceneID)
  return sceneid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MTS2GSGetSceneItem::release_sceneid() {
  // @@protoc_insertion_point(field_release:NetProto.MTS2GSGetSceneItem.sceneID)
  
  return sceneid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MTS2GSGetSceneItem::set_allocated_sceneid(::std::string* sceneid) {
  if (sceneid != NULL) {
    
  } else {
    
  }
  sceneid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sceneid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.MTS2GSGetSceneItem.sceneID)
}

// repeated .NetProto.CreateSceneItem itemList = 4;
inline int MTS2GSGetSceneItem::itemlist_size() const {
  return itemlist_.size();
}
inline void MTS2GSGetSceneItem::clear_itemlist() {
  itemlist_.Clear();
}
inline const ::NetProto::CreateSceneItem& MTS2GSGetSceneItem::itemlist(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.MTS2GSGetSceneItem.itemList)
  return itemlist_.Get(index);
}
inline ::NetProto::CreateSceneItem* MTS2GSGetSceneItem::mutable_itemlist(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.MTS2GSGetSceneItem.itemList)
  return itemlist_.Mutable(index);
}
inline ::NetProto::CreateSceneItem* MTS2GSGetSceneItem::add_itemlist() {
  // @@protoc_insertion_point(field_add:NetProto.MTS2GSGetSceneItem.itemList)
  return itemlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetProto::CreateSceneItem >*
MTS2GSGetSceneItem::mutable_itemlist() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.MTS2GSGetSceneItem.itemList)
  return &itemlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetProto::CreateSceneItem >&
MTS2GSGetSceneItem::itemlist() const {
  // @@protoc_insertion_point(field_list:NetProto.MTS2GSGetSceneItem.itemList)
  return itemlist_;
}

// -------------------------------------------------------------------

// MTS2GSCreateScene

// .NetProto.MsgHead msgHead = 1;
inline bool MTS2GSCreateScene::has_msghead() const {
  return this != internal_default_instance() && msghead_ != NULL;
}
inline void MTS2GSCreateScene::clear_msghead() {
  if (GetArenaNoVirtual() == NULL && msghead_ != NULL) delete msghead_;
  msghead_ = NULL;
}
inline const ::NetProto::MsgHead& MTS2GSCreateScene::msghead() const {
  // @@protoc_insertion_point(field_get:NetProto.MTS2GSCreateScene.msgHead)
  return msghead_ != NULL ? *msghead_
                         : *::NetProto::MsgHead::internal_default_instance();
}
inline ::NetProto::MsgHead* MTS2GSCreateScene::mutable_msghead() {
  
  if (msghead_ == NULL) {
    msghead_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.MTS2GSCreateScene.msgHead)
  return msghead_;
}
inline ::NetProto::MsgHead* MTS2GSCreateScene::release_msghead() {
  // @@protoc_insertion_point(field_release:NetProto.MTS2GSCreateScene.msgHead)
  
  ::NetProto::MsgHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void MTS2GSCreateScene::set_allocated_msghead(::NetProto::MsgHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.MTS2GSCreateScene.msgHead)
}

// uint32 accountID = 2;
inline void MTS2GSCreateScene::clear_accountid() {
  accountid_ = 0u;
}
inline ::google::protobuf::uint32 MTS2GSCreateScene::accountid() const {
  // @@protoc_insertion_point(field_get:NetProto.MTS2GSCreateScene.accountID)
  return accountid_;
}
inline void MTS2GSCreateScene::set_accountid(::google::protobuf::uint32 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:NetProto.MTS2GSCreateScene.accountID)
}

// string sceneID = 3;
inline void MTS2GSCreateScene::clear_sceneid() {
  sceneid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MTS2GSCreateScene::sceneid() const {
  // @@protoc_insertion_point(field_get:NetProto.MTS2GSCreateScene.sceneID)
  return sceneid_.GetNoArena();
}
inline void MTS2GSCreateScene::set_sceneid(const ::std::string& value) {
  
  sceneid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.MTS2GSCreateScene.sceneID)
}
#if LANG_CXX11
inline void MTS2GSCreateScene::set_sceneid(::std::string&& value) {
  
  sceneid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.MTS2GSCreateScene.sceneID)
}
#endif
inline void MTS2GSCreateScene::set_sceneid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sceneid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.MTS2GSCreateScene.sceneID)
}
inline void MTS2GSCreateScene::set_sceneid(const char* value, size_t size) {
  
  sceneid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.MTS2GSCreateScene.sceneID)
}
inline ::std::string* MTS2GSCreateScene::mutable_sceneid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.MTS2GSCreateScene.sceneID)
  return sceneid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MTS2GSCreateScene::release_sceneid() {
  // @@protoc_insertion_point(field_release:NetProto.MTS2GSCreateScene.sceneID)
  
  return sceneid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MTS2GSCreateScene::set_allocated_sceneid(::std::string* sceneid) {
  if (sceneid != NULL) {
    
  } else {
    
  }
  sceneid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sceneid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.MTS2GSCreateScene.sceneID)
}

// repeated .NetProto.CreateSceneItem itemList = 4;
inline int MTS2GSCreateScene::itemlist_size() const {
  return itemlist_.size();
}
inline void MTS2GSCreateScene::clear_itemlist() {
  itemlist_.Clear();
}
inline const ::NetProto::CreateSceneItem& MTS2GSCreateScene::itemlist(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.MTS2GSCreateScene.itemList)
  return itemlist_.Get(index);
}
inline ::NetProto::CreateSceneItem* MTS2GSCreateScene::mutable_itemlist(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.MTS2GSCreateScene.itemList)
  return itemlist_.Mutable(index);
}
inline ::NetProto::CreateSceneItem* MTS2GSCreateScene::add_itemlist() {
  // @@protoc_insertion_point(field_add:NetProto.MTS2GSCreateScene.itemList)
  return itemlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetProto::CreateSceneItem >*
MTS2GSCreateScene::mutable_itemlist() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.MTS2GSCreateScene.itemList)
  return &itemlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetProto::CreateSceneItem >&
MTS2GSCreateScene::itemlist() const {
  // @@protoc_insertion_point(field_list:NetProto.MTS2GSCreateScene.itemList)
  return itemlist_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace NetProto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::NetProto::MsgCommand> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetProto::MsgCommand>() {
  return ::NetProto::MsgCommand_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Protocol_2eproto__INCLUDED
