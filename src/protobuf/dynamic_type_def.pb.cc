// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dynamic_type_def.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dynamic_type_def.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace NetProto {
class StringDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StringData> {
} _StringData_default_instance_;
class UInt32DataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UInt32Data> {
} _UInt32Data_default_instance_;
class Int32DataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Int32Data> {
} _Int32Data_default_instance_;
class FloatDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FloatData> {
} _FloatData_default_instance_;

namespace protobuf_dynamic_5ftype_5fdef_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringData, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UInt32Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UInt32Data, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Int32Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Int32Data, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FloatData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FloatData, data_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(StringData)},
  { 6, -1, sizeof(UInt32Data)},
  { 12, -1, sizeof(Int32Data)},
  { 18, -1, sizeof(FloatData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_StringData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UInt32Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Int32Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FloatData_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "dynamic_type_def.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace

void TableStruct::Shutdown() {
  _StringData_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _UInt32Data_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _Int32Data_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _FloatData_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _StringData_default_instance_.DefaultConstruct();
  _UInt32Data_default_instance_.DefaultConstruct();
  _Int32Data_default_instance_.DefaultConstruct();
  _FloatData_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\026dynamic_type_def.proto\022\010NetProto\"\032\n\nSt"
      "ringData\022\014\n\004data\030\001 \001(\t\"\032\n\nUInt32Data\022\014\n\004"
      "data\030\001 \001(\r\"\031\n\tInt32Data\022\014\n\004data\030\001 \001(\005\"\031\n"
      "\tFloatData\022\014\n\004data\030\001 \001(\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 152);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dynamic_type_def.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_dynamic_5ftype_5fdef_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringData::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringData::StringData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dynamic_5ftype_5fdef_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.StringData)
}
StringData::StringData(const StringData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:NetProto.StringData)
}

void StringData::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

StringData::~StringData() {
  // @@protoc_insertion_point(destructor:NetProto.StringData)
  SharedDtor();
}

void StringData::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StringData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StringData::descriptor() {
  protobuf_dynamic_5ftype_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dynamic_5ftype_5fdef_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StringData& StringData::default_instance() {
  protobuf_dynamic_5ftype_5fdef_2eproto::InitDefaults();
  return *internal_default_instance();
}

StringData* StringData::New(::google::protobuf::Arena* arena) const {
  StringData* n = new StringData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StringData::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.StringData)
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool StringData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.StringData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.StringData.data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.StringData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.StringData)
  return false;
#undef DO_
}

void StringData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.StringData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.StringData.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.StringData)
}

::google::protobuf::uint8* StringData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.StringData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.StringData.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.StringData)
  return target;
}

size_t StringData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.StringData)
  size_t total_size = 0;

  // string data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StringData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.StringData)
  GOOGLE_DCHECK_NE(&from, this);
  const StringData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StringData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.StringData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.StringData)
    MergeFrom(*source);
  }
}

void StringData::MergeFrom(const StringData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.StringData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void StringData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.StringData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringData::CopyFrom(const StringData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.StringData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringData::IsInitialized() const {
  return true;
}

void StringData::Swap(StringData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringData::InternalSwap(StringData* other) {
  data_.Swap(&other->data_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StringData::GetMetadata() const {
  protobuf_dynamic_5ftype_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dynamic_5ftype_5fdef_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StringData

// string data = 1;
void StringData::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StringData::data() const {
  // @@protoc_insertion_point(field_get:NetProto.StringData.data)
  return data_.GetNoArena();
}
void StringData::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.StringData.data)
}
#if LANG_CXX11
void StringData::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.StringData.data)
}
#endif
void StringData::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.StringData.data)
}
void StringData::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.StringData.data)
}
::std::string* StringData::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.StringData.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StringData::release_data() {
  // @@protoc_insertion_point(field_release:NetProto.StringData.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StringData::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:NetProto.StringData.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UInt32Data::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UInt32Data::UInt32Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dynamic_5ftype_5fdef_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.UInt32Data)
}
UInt32Data::UInt32Data(const UInt32Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_ = from.data_;
  // @@protoc_insertion_point(copy_constructor:NetProto.UInt32Data)
}

void UInt32Data::SharedCtor() {
  data_ = 0u;
  _cached_size_ = 0;
}

UInt32Data::~UInt32Data() {
  // @@protoc_insertion_point(destructor:NetProto.UInt32Data)
  SharedDtor();
}

void UInt32Data::SharedDtor() {
}

void UInt32Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UInt32Data::descriptor() {
  protobuf_dynamic_5ftype_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dynamic_5ftype_5fdef_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UInt32Data& UInt32Data::default_instance() {
  protobuf_dynamic_5ftype_5fdef_2eproto::InitDefaults();
  return *internal_default_instance();
}

UInt32Data* UInt32Data::New(::google::protobuf::Arena* arena) const {
  UInt32Data* n = new UInt32Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UInt32Data::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.UInt32Data)
  data_ = 0u;
}

bool UInt32Data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.UInt32Data)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.UInt32Data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.UInt32Data)
  return false;
#undef DO_
}

void UInt32Data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.UInt32Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 data = 1;
  if (this->data() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.UInt32Data)
}

::google::protobuf::uint8* UInt32Data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.UInt32Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 data = 1;
  if (this->data() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.UInt32Data)
  return target;
}

size_t UInt32Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.UInt32Data)
  size_t total_size = 0;

  // uint32 data = 1;
  if (this->data() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UInt32Data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.UInt32Data)
  GOOGLE_DCHECK_NE(&from, this);
  const UInt32Data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UInt32Data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.UInt32Data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.UInt32Data)
    MergeFrom(*source);
  }
}

void UInt32Data::MergeFrom(const UInt32Data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.UInt32Data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data() != 0) {
    set_data(from.data());
  }
}

void UInt32Data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.UInt32Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UInt32Data::CopyFrom(const UInt32Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.UInt32Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UInt32Data::IsInitialized() const {
  return true;
}

void UInt32Data::Swap(UInt32Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UInt32Data::InternalSwap(UInt32Data* other) {
  std::swap(data_, other->data_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UInt32Data::GetMetadata() const {
  protobuf_dynamic_5ftype_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dynamic_5ftype_5fdef_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UInt32Data

// uint32 data = 1;
void UInt32Data::clear_data() {
  data_ = 0u;
}
::google::protobuf::uint32 UInt32Data::data() const {
  // @@protoc_insertion_point(field_get:NetProto.UInt32Data.data)
  return data_;
}
void UInt32Data::set_data(::google::protobuf::uint32 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:NetProto.UInt32Data.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Int32Data::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Int32Data::Int32Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dynamic_5ftype_5fdef_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.Int32Data)
}
Int32Data::Int32Data(const Int32Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_ = from.data_;
  // @@protoc_insertion_point(copy_constructor:NetProto.Int32Data)
}

void Int32Data::SharedCtor() {
  data_ = 0;
  _cached_size_ = 0;
}

Int32Data::~Int32Data() {
  // @@protoc_insertion_point(destructor:NetProto.Int32Data)
  SharedDtor();
}

void Int32Data::SharedDtor() {
}

void Int32Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Int32Data::descriptor() {
  protobuf_dynamic_5ftype_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dynamic_5ftype_5fdef_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Int32Data& Int32Data::default_instance() {
  protobuf_dynamic_5ftype_5fdef_2eproto::InitDefaults();
  return *internal_default_instance();
}

Int32Data* Int32Data::New(::google::protobuf::Arena* arena) const {
  Int32Data* n = new Int32Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Int32Data::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.Int32Data)
  data_ = 0;
}

bool Int32Data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.Int32Data)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.Int32Data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.Int32Data)
  return false;
#undef DO_
}

void Int32Data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.Int32Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 data = 1;
  if (this->data() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.Int32Data)
}

::google::protobuf::uint8* Int32Data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.Int32Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 data = 1;
  if (this->data() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.Int32Data)
  return target;
}

size_t Int32Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.Int32Data)
  size_t total_size = 0;

  // int32 data = 1;
  if (this->data() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Int32Data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.Int32Data)
  GOOGLE_DCHECK_NE(&from, this);
  const Int32Data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Int32Data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.Int32Data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.Int32Data)
    MergeFrom(*source);
  }
}

void Int32Data::MergeFrom(const Int32Data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.Int32Data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data() != 0) {
    set_data(from.data());
  }
}

void Int32Data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.Int32Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Int32Data::CopyFrom(const Int32Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.Int32Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Int32Data::IsInitialized() const {
  return true;
}

void Int32Data::Swap(Int32Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Int32Data::InternalSwap(Int32Data* other) {
  std::swap(data_, other->data_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Int32Data::GetMetadata() const {
  protobuf_dynamic_5ftype_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dynamic_5ftype_5fdef_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Int32Data

// int32 data = 1;
void Int32Data::clear_data() {
  data_ = 0;
}
::google::protobuf::int32 Int32Data::data() const {
  // @@protoc_insertion_point(field_get:NetProto.Int32Data.data)
  return data_;
}
void Int32Data::set_data(::google::protobuf::int32 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:NetProto.Int32Data.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FloatData::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FloatData::FloatData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dynamic_5ftype_5fdef_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.FloatData)
}
FloatData::FloatData(const FloatData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_ = from.data_;
  // @@protoc_insertion_point(copy_constructor:NetProto.FloatData)
}

void FloatData::SharedCtor() {
  data_ = 0;
  _cached_size_ = 0;
}

FloatData::~FloatData() {
  // @@protoc_insertion_point(destructor:NetProto.FloatData)
  SharedDtor();
}

void FloatData::SharedDtor() {
}

void FloatData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FloatData::descriptor() {
  protobuf_dynamic_5ftype_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dynamic_5ftype_5fdef_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FloatData& FloatData::default_instance() {
  protobuf_dynamic_5ftype_5fdef_2eproto::InitDefaults();
  return *internal_default_instance();
}

FloatData* FloatData::New(::google::protobuf::Arena* arena) const {
  FloatData* n = new FloatData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FloatData::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.FloatData)
  data_ = 0;
}

bool FloatData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.FloatData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.FloatData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.FloatData)
  return false;
#undef DO_
}

void FloatData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.FloatData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float data = 1;
  if (this->data() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.FloatData)
}

::google::protobuf::uint8* FloatData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.FloatData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float data = 1;
  if (this->data() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.FloatData)
  return target;
}

size_t FloatData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.FloatData)
  size_t total_size = 0;

  // float data = 1;
  if (this->data() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FloatData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.FloatData)
  GOOGLE_DCHECK_NE(&from, this);
  const FloatData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FloatData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.FloatData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.FloatData)
    MergeFrom(*source);
  }
}

void FloatData::MergeFrom(const FloatData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.FloatData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data() != 0) {
    set_data(from.data());
  }
}

void FloatData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.FloatData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FloatData::CopyFrom(const FloatData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.FloatData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FloatData::IsInitialized() const {
  return true;
}

void FloatData::Swap(FloatData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FloatData::InternalSwap(FloatData* other) {
  std::swap(data_, other->data_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FloatData::GetMetadata() const {
  protobuf_dynamic_5ftype_5fdef_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dynamic_5ftype_5fdef_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FloatData

// float data = 1;
void FloatData::clear_data() {
  data_ = 0;
}
float FloatData::data() const {
  // @@protoc_insertion_point(field_get:NetProto.FloatData.data)
  return data_;
}
void FloatData::set_data(float value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:NetProto.FloatData.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace NetProto

// @@protoc_insertion_point(global_scope)
