// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: world_event.proto

#ifndef PROTOBUF_world_5fevent_2eproto__INCLUDED
#define PROTOBUF_world_5fevent_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "msg_head.pb.h"
#include "dynamic_type_def.pb.h"
#include <google/protobuf/any.pb.h>
// @@protoc_insertion_point(includes)
namespace NetProto {
class C2SWorldEventResponse;
class C2SWorldEventResponseDefaultTypeInternal;
extern C2SWorldEventResponseDefaultTypeInternal _C2SWorldEventResponse_default_instance_;
class DoorBellRing;
class DoorBellRingDefaultTypeInternal;
extern DoorBellRingDefaultTypeInternal _DoorBellRing_default_instance_;
class EmsArrive;
class EmsArriveDefaultTypeInternal;
extern EmsArriveDefaultTypeInternal _EmsArrive_default_instance_;
class FloatData;
class FloatDataDefaultTypeInternal;
extern FloatDataDefaultTypeInternal _FloatData_default_instance_;
class Int32Data;
class Int32DataDefaultTypeInternal;
extern Int32DataDefaultTypeInternal _Int32Data_default_instance_;
class MsgHead;
class MsgHeadDefaultTypeInternal;
extern MsgHeadDefaultTypeInternal _MsgHead_default_instance_;
class ObjTransfer;
class ObjTransferDefaultTypeInternal;
extern ObjTransferDefaultTypeInternal _ObjTransfer_default_instance_;
class S2CWorldEvent;
class S2CWorldEventDefaultTypeInternal;
extern S2CWorldEventDefaultTypeInternal _S2CWorldEvent_default_instance_;
class StringData;
class StringDataDefaultTypeInternal;
extern StringDataDefaultTypeInternal _StringData_default_instance_;
class UInt32Data;
class UInt32DataDefaultTypeInternal;
extern UInt32DataDefaultTypeInternal _UInt32Data_default_instance_;
}  // namespace NetProto
namespace google {
namespace protobuf {
class Any;
class AnyDefaultTypeInternal;
extern AnyDefaultTypeInternal _Any_default_instance_;
}  // namespace protobuf
}  // namespace google

namespace NetProto {

namespace protobuf_world_5fevent_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_world_5fevent_2eproto

enum ObjTransfer_RelationType {
  ObjTransfer_RelationType_None = 0,
  ObjTransfer_RelationType_On = 1000,
  ObjTransfer_RelationType_Down = 2000,
  ObjTransfer_RelationType_Aside = 3000,
  ObjTransfer_RelationType_Inside = 4000,
  ObjTransfer_RelationType_ObjTransfer_RelationType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ObjTransfer_RelationType_ObjTransfer_RelationType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ObjTransfer_RelationType_IsValid(int value);
const ObjTransfer_RelationType ObjTransfer_RelationType_RelationType_MIN = ObjTransfer_RelationType_None;
const ObjTransfer_RelationType ObjTransfer_RelationType_RelationType_MAX = ObjTransfer_RelationType_Inside;
const int ObjTransfer_RelationType_RelationType_ARRAYSIZE = ObjTransfer_RelationType_RelationType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ObjTransfer_RelationType_descriptor();
inline const ::std::string& ObjTransfer_RelationType_Name(ObjTransfer_RelationType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ObjTransfer_RelationType_descriptor(), value);
}
inline bool ObjTransfer_RelationType_Parse(
    const ::std::string& name, ObjTransfer_RelationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ObjTransfer_RelationType>(
    ObjTransfer_RelationType_descriptor(), name, value);
}
enum WorldEventType {
  DOOR_BELL_RING = 0,
  EMS_ARRIVE = 1,
  OBJ_TRANSFER = 2,
  WorldEventType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  WorldEventType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool WorldEventType_IsValid(int value);
const WorldEventType WorldEventType_MIN = DOOR_BELL_RING;
const WorldEventType WorldEventType_MAX = OBJ_TRANSFER;
const int WorldEventType_ARRAYSIZE = WorldEventType_MAX + 1;

const ::google::protobuf::EnumDescriptor* WorldEventType_descriptor();
inline const ::std::string& WorldEventType_Name(WorldEventType value) {
  return ::google::protobuf::internal::NameOfEnum(
    WorldEventType_descriptor(), value);
}
inline bool WorldEventType_Parse(
    const ::std::string& name, WorldEventType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WorldEventType>(
    WorldEventType_descriptor(), name, value);
}
// ===================================================================

class ObjTransfer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.ObjTransfer) */ {
 public:
  ObjTransfer();
  virtual ~ObjTransfer();

  ObjTransfer(const ObjTransfer& from);

  inline ObjTransfer& operator=(const ObjTransfer& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjTransfer& default_instance();

  static inline const ObjTransfer* internal_default_instance() {
    return reinterpret_cast<const ObjTransfer*>(
               &_ObjTransfer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ObjTransfer* other);

  // implements Message ----------------------------------------------

  inline ObjTransfer* New() const PROTOBUF_FINAL { return New(NULL); }

  ObjTransfer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ObjTransfer& from);
  void MergeFrom(const ObjTransfer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ObjTransfer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ObjTransfer_RelationType RelationType;
  static const RelationType None =
    ObjTransfer_RelationType_None;
  static const RelationType On =
    ObjTransfer_RelationType_On;
  static const RelationType Down =
    ObjTransfer_RelationType_Down;
  static const RelationType Aside =
    ObjTransfer_RelationType_Aside;
  static const RelationType Inside =
    ObjTransfer_RelationType_Inside;
  static inline bool RelationType_IsValid(int value) {
    return ObjTransfer_RelationType_IsValid(value);
  }
  static const RelationType RelationType_MIN =
    ObjTransfer_RelationType_RelationType_MIN;
  static const RelationType RelationType_MAX =
    ObjTransfer_RelationType_RelationType_MAX;
  static const int RelationType_ARRAYSIZE =
    ObjTransfer_RelationType_RelationType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RelationType_descriptor() {
    return ObjTransfer_RelationType_descriptor();
  }
  static inline const ::std::string& RelationType_Name(RelationType value) {
    return ObjTransfer_RelationType_Name(value);
  }
  static inline bool RelationType_Parse(const ::std::string& name,
      RelationType* value) {
    return ObjTransfer_RelationType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string obj_uuid = 1;
  void clear_obj_uuid();
  static const int kObjUuidFieldNumber = 1;
  const ::std::string& obj_uuid() const;
  void set_obj_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_obj_uuid(::std::string&& value);
  #endif
  void set_obj_uuid(const char* value);
  void set_obj_uuid(const char* value, size_t size);
  ::std::string* mutable_obj_uuid();
  ::std::string* release_obj_uuid();
  void set_allocated_obj_uuid(::std::string* obj_uuid);

  // string obj_ref_uuid = 2;
  void clear_obj_ref_uuid();
  static const int kObjRefUuidFieldNumber = 2;
  const ::std::string& obj_ref_uuid() const;
  void set_obj_ref_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_obj_ref_uuid(::std::string&& value);
  #endif
  void set_obj_ref_uuid(const char* value);
  void set_obj_ref_uuid(const char* value, size_t size);
  ::std::string* mutable_obj_ref_uuid();
  ::std::string* release_obj_ref_uuid();
  void set_allocated_obj_ref_uuid(::std::string* obj_ref_uuid);

  // .NetProto.ObjTransfer.RelationType type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::NetProto::ObjTransfer_RelationType type() const;
  void set_type(::NetProto::ObjTransfer_RelationType value);

  // @@protoc_insertion_point(class_scope:NetProto.ObjTransfer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr obj_uuid_;
  ::google::protobuf::internal::ArenaStringPtr obj_ref_uuid_;
  int type_;
  mutable int _cached_size_;
  friend struct protobuf_world_5fevent_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EmsArrive : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.EmsArrive) */ {
 public:
  EmsArrive();
  virtual ~EmsArrive();

  EmsArrive(const EmsArrive& from);

  inline EmsArrive& operator=(const EmsArrive& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EmsArrive& default_instance();

  static inline const EmsArrive* internal_default_instance() {
    return reinterpret_cast<const EmsArrive*>(
               &_EmsArrive_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(EmsArrive* other);

  // implements Message ----------------------------------------------

  inline EmsArrive* New() const PROTOBUF_FINAL { return New(NULL); }

  EmsArrive* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EmsArrive& from);
  void MergeFrom(const EmsArrive& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EmsArrive* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .NetProto.StringData express = 1;
  bool has_express() const;
  void clear_express();
  static const int kExpressFieldNumber = 1;
  const ::NetProto::StringData& express() const;
  ::NetProto::StringData* mutable_express();
  ::NetProto::StringData* release_express();
  void set_allocated_express(::NetProto::StringData* express);

  // @@protoc_insertion_point(class_scope:NetProto.EmsArrive)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetProto::StringData* express_;
  mutable int _cached_size_;
  friend struct protobuf_world_5fevent_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DoorBellRing : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.DoorBellRing) */ {
 public:
  DoorBellRing();
  virtual ~DoorBellRing();

  DoorBellRing(const DoorBellRing& from);

  inline DoorBellRing& operator=(const DoorBellRing& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DoorBellRing& default_instance();

  static inline const DoorBellRing* internal_default_instance() {
    return reinterpret_cast<const DoorBellRing*>(
               &_DoorBellRing_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(DoorBellRing* other);

  // implements Message ----------------------------------------------

  inline DoorBellRing* New() const PROTOBUF_FINAL { return New(NULL); }

  DoorBellRing* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DoorBellRing& from);
  void MergeFrom(const DoorBellRing& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DoorBellRing* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .NetProto.StringData door = 1;
  bool has_door() const;
  void clear_door();
  static const int kDoorFieldNumber = 1;
  const ::NetProto::StringData& door() const;
  ::NetProto::StringData* mutable_door();
  ::NetProto::StringData* release_door();
  void set_allocated_door(::NetProto::StringData* door);

  // @@protoc_insertion_point(class_scope:NetProto.DoorBellRing)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetProto::StringData* door_;
  mutable int _cached_size_;
  friend struct protobuf_world_5fevent_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2CWorldEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.S2CWorldEvent) */ {
 public:
  S2CWorldEvent();
  virtual ~S2CWorldEvent();

  S2CWorldEvent(const S2CWorldEvent& from);

  inline S2CWorldEvent& operator=(const S2CWorldEvent& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2CWorldEvent& default_instance();

  static inline const S2CWorldEvent* internal_default_instance() {
    return reinterpret_cast<const S2CWorldEvent*>(
               &_S2CWorldEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(S2CWorldEvent* other);

  // implements Message ----------------------------------------------

  inline S2CWorldEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  S2CWorldEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2CWorldEvent& from);
  void MergeFrom(const S2CWorldEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2CWorldEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.protobuf.Any params = 4;
  int params_size() const;
  void clear_params();
  static const int kParamsFieldNumber = 4;
  const ::google::protobuf::Any& params(int index) const;
  ::google::protobuf::Any* mutable_params(int index);
  ::google::protobuf::Any* add_params();
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
      mutable_params();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
      params() const;

  // .NetProto.MsgHead msg_head = 1;
  bool has_msg_head() const;
  void clear_msg_head();
  static const int kMsgHeadFieldNumber = 1;
  const ::NetProto::MsgHead& msg_head() const;
  ::NetProto::MsgHead* mutable_msg_head();
  ::NetProto::MsgHead* release_msg_head();
  void set_allocated_msg_head(::NetProto::MsgHead* msg_head);

  // uint32 event_id = 2;
  void clear_event_id();
  static const int kEventIdFieldNumber = 2;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // .NetProto.WorldEventType type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::NetProto::WorldEventType type() const;
  void set_type(::NetProto::WorldEventType value);

  // @@protoc_insertion_point(class_scope:NetProto.S2CWorldEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > params_;
  ::NetProto::MsgHead* msg_head_;
  ::google::protobuf::uint32 event_id_;
  int type_;
  mutable int _cached_size_;
  friend struct protobuf_world_5fevent_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class C2SWorldEventResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.C2SWorldEventResponse) */ {
 public:
  C2SWorldEventResponse();
  virtual ~C2SWorldEventResponse();

  C2SWorldEventResponse(const C2SWorldEventResponse& from);

  inline C2SWorldEventResponse& operator=(const C2SWorldEventResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2SWorldEventResponse& default_instance();

  static inline const C2SWorldEventResponse* internal_default_instance() {
    return reinterpret_cast<const C2SWorldEventResponse*>(
               &_C2SWorldEventResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(C2SWorldEventResponse* other);

  // implements Message ----------------------------------------------

  inline C2SWorldEventResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  C2SWorldEventResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C2SWorldEventResponse& from);
  void MergeFrom(const C2SWorldEventResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C2SWorldEventResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.protobuf.Any params = 4;
  int params_size() const;
  void clear_params();
  static const int kParamsFieldNumber = 4;
  const ::google::protobuf::Any& params(int index) const;
  ::google::protobuf::Any* mutable_params(int index);
  ::google::protobuf::Any* add_params();
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
      mutable_params();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
      params() const;

  // .NetProto.MsgHead msg_head = 1;
  bool has_msg_head() const;
  void clear_msg_head();
  static const int kMsgHeadFieldNumber = 1;
  const ::NetProto::MsgHead& msg_head() const;
  ::NetProto::MsgHead* mutable_msg_head();
  ::NetProto::MsgHead* release_msg_head();
  void set_allocated_msg_head(::NetProto::MsgHead* msg_head);

  // uint32 event_id = 2;
  void clear_event_id();
  static const int kEventIdFieldNumber = 2;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // .NetProto.WorldEventType type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::NetProto::WorldEventType type() const;
  void set_type(::NetProto::WorldEventType value);

  // @@protoc_insertion_point(class_scope:NetProto.C2SWorldEventResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > params_;
  ::NetProto::MsgHead* msg_head_;
  ::google::protobuf::uint32 event_id_;
  int type_;
  mutable int _cached_size_;
  friend struct protobuf_world_5fevent_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ObjTransfer

// string obj_uuid = 1;
inline void ObjTransfer::clear_obj_uuid() {
  obj_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ObjTransfer::obj_uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.ObjTransfer.obj_uuid)
  return obj_uuid_.GetNoArena();
}
inline void ObjTransfer::set_obj_uuid(const ::std::string& value) {
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.ObjTransfer.obj_uuid)
}
#if LANG_CXX11
inline void ObjTransfer::set_obj_uuid(::std::string&& value) {
  
  obj_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.ObjTransfer.obj_uuid)
}
#endif
inline void ObjTransfer::set_obj_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.ObjTransfer.obj_uuid)
}
inline void ObjTransfer::set_obj_uuid(const char* value, size_t size) {
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.ObjTransfer.obj_uuid)
}
inline ::std::string* ObjTransfer::mutable_obj_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.ObjTransfer.obj_uuid)
  return obj_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ObjTransfer::release_obj_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.ObjTransfer.obj_uuid)
  
  return obj_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ObjTransfer::set_allocated_obj_uuid(::std::string* obj_uuid) {
  if (obj_uuid != NULL) {
    
  } else {
    
  }
  obj_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj_uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.ObjTransfer.obj_uuid)
}

// string obj_ref_uuid = 2;
inline void ObjTransfer::clear_obj_ref_uuid() {
  obj_ref_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ObjTransfer::obj_ref_uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.ObjTransfer.obj_ref_uuid)
  return obj_ref_uuid_.GetNoArena();
}
inline void ObjTransfer::set_obj_ref_uuid(const ::std::string& value) {
  
  obj_ref_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.ObjTransfer.obj_ref_uuid)
}
#if LANG_CXX11
inline void ObjTransfer::set_obj_ref_uuid(::std::string&& value) {
  
  obj_ref_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.ObjTransfer.obj_ref_uuid)
}
#endif
inline void ObjTransfer::set_obj_ref_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  obj_ref_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.ObjTransfer.obj_ref_uuid)
}
inline void ObjTransfer::set_obj_ref_uuid(const char* value, size_t size) {
  
  obj_ref_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.ObjTransfer.obj_ref_uuid)
}
inline ::std::string* ObjTransfer::mutable_obj_ref_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.ObjTransfer.obj_ref_uuid)
  return obj_ref_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ObjTransfer::release_obj_ref_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.ObjTransfer.obj_ref_uuid)
  
  return obj_ref_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ObjTransfer::set_allocated_obj_ref_uuid(::std::string* obj_ref_uuid) {
  if (obj_ref_uuid != NULL) {
    
  } else {
    
  }
  obj_ref_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj_ref_uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.ObjTransfer.obj_ref_uuid)
}

// .NetProto.ObjTransfer.RelationType type = 3;
inline void ObjTransfer::clear_type() {
  type_ = 0;
}
inline ::NetProto::ObjTransfer_RelationType ObjTransfer::type() const {
  // @@protoc_insertion_point(field_get:NetProto.ObjTransfer.type)
  return static_cast< ::NetProto::ObjTransfer_RelationType >(type_);
}
inline void ObjTransfer::set_type(::NetProto::ObjTransfer_RelationType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetProto.ObjTransfer.type)
}

// -------------------------------------------------------------------

// EmsArrive

// .NetProto.StringData express = 1;
inline bool EmsArrive::has_express() const {
  return this != internal_default_instance() && express_ != NULL;
}
inline void EmsArrive::clear_express() {
  if (GetArenaNoVirtual() == NULL && express_ != NULL) delete express_;
  express_ = NULL;
}
inline const ::NetProto::StringData& EmsArrive::express() const {
  // @@protoc_insertion_point(field_get:NetProto.EmsArrive.express)
  return express_ != NULL ? *express_
                         : *::NetProto::StringData::internal_default_instance();
}
inline ::NetProto::StringData* EmsArrive::mutable_express() {
  
  if (express_ == NULL) {
    express_ = new ::NetProto::StringData;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.EmsArrive.express)
  return express_;
}
inline ::NetProto::StringData* EmsArrive::release_express() {
  // @@protoc_insertion_point(field_release:NetProto.EmsArrive.express)
  
  ::NetProto::StringData* temp = express_;
  express_ = NULL;
  return temp;
}
inline void EmsArrive::set_allocated_express(::NetProto::StringData* express) {
  delete express_;
  express_ = express;
  if (express) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.EmsArrive.express)
}

// -------------------------------------------------------------------

// DoorBellRing

// .NetProto.StringData door = 1;
inline bool DoorBellRing::has_door() const {
  return this != internal_default_instance() && door_ != NULL;
}
inline void DoorBellRing::clear_door() {
  if (GetArenaNoVirtual() == NULL && door_ != NULL) delete door_;
  door_ = NULL;
}
inline const ::NetProto::StringData& DoorBellRing::door() const {
  // @@protoc_insertion_point(field_get:NetProto.DoorBellRing.door)
  return door_ != NULL ? *door_
                         : *::NetProto::StringData::internal_default_instance();
}
inline ::NetProto::StringData* DoorBellRing::mutable_door() {
  
  if (door_ == NULL) {
    door_ = new ::NetProto::StringData;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.DoorBellRing.door)
  return door_;
}
inline ::NetProto::StringData* DoorBellRing::release_door() {
  // @@protoc_insertion_point(field_release:NetProto.DoorBellRing.door)
  
  ::NetProto::StringData* temp = door_;
  door_ = NULL;
  return temp;
}
inline void DoorBellRing::set_allocated_door(::NetProto::StringData* door) {
  delete door_;
  door_ = door;
  if (door) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.DoorBellRing.door)
}

// -------------------------------------------------------------------

// S2CWorldEvent

// .NetProto.MsgHead msg_head = 1;
inline bool S2CWorldEvent::has_msg_head() const {
  return this != internal_default_instance() && msg_head_ != NULL;
}
inline void S2CWorldEvent::clear_msg_head() {
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) delete msg_head_;
  msg_head_ = NULL;
}
inline const ::NetProto::MsgHead& S2CWorldEvent::msg_head() const {
  // @@protoc_insertion_point(field_get:NetProto.S2CWorldEvent.msg_head)
  return msg_head_ != NULL ? *msg_head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
inline ::NetProto::MsgHead* S2CWorldEvent::mutable_msg_head() {
  
  if (msg_head_ == NULL) {
    msg_head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.S2CWorldEvent.msg_head)
  return msg_head_;
}
inline ::NetProto::MsgHead* S2CWorldEvent::release_msg_head() {
  // @@protoc_insertion_point(field_release:NetProto.S2CWorldEvent.msg_head)
  
  ::NetProto::MsgHead* temp = msg_head_;
  msg_head_ = NULL;
  return temp;
}
inline void S2CWorldEvent::set_allocated_msg_head(::NetProto::MsgHead* msg_head) {
  delete msg_head_;
  msg_head_ = msg_head;
  if (msg_head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.S2CWorldEvent.msg_head)
}

// uint32 event_id = 2;
inline void S2CWorldEvent::clear_event_id() {
  event_id_ = 0u;
}
inline ::google::protobuf::uint32 S2CWorldEvent::event_id() const {
  // @@protoc_insertion_point(field_get:NetProto.S2CWorldEvent.event_id)
  return event_id_;
}
inline void S2CWorldEvent::set_event_id(::google::protobuf::uint32 value) {
  
  event_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.S2CWorldEvent.event_id)
}

// .NetProto.WorldEventType type = 3;
inline void S2CWorldEvent::clear_type() {
  type_ = 0;
}
inline ::NetProto::WorldEventType S2CWorldEvent::type() const {
  // @@protoc_insertion_point(field_get:NetProto.S2CWorldEvent.type)
  return static_cast< ::NetProto::WorldEventType >(type_);
}
inline void S2CWorldEvent::set_type(::NetProto::WorldEventType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetProto.S2CWorldEvent.type)
}

// repeated .google.protobuf.Any params = 4;
inline int S2CWorldEvent::params_size() const {
  return params_.size();
}
inline void S2CWorldEvent::clear_params() {
  params_.Clear();
}
inline const ::google::protobuf::Any& S2CWorldEvent::params(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.S2CWorldEvent.params)
  return params_.Get(index);
}
inline ::google::protobuf::Any* S2CWorldEvent::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.S2CWorldEvent.params)
  return params_.Mutable(index);
}
inline ::google::protobuf::Any* S2CWorldEvent::add_params() {
  // @@protoc_insertion_point(field_add:NetProto.S2CWorldEvent.params)
  return params_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
S2CWorldEvent::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.S2CWorldEvent.params)
  return &params_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
S2CWorldEvent::params() const {
  // @@protoc_insertion_point(field_list:NetProto.S2CWorldEvent.params)
  return params_;
}

// -------------------------------------------------------------------

// C2SWorldEventResponse

// .NetProto.MsgHead msg_head = 1;
inline bool C2SWorldEventResponse::has_msg_head() const {
  return this != internal_default_instance() && msg_head_ != NULL;
}
inline void C2SWorldEventResponse::clear_msg_head() {
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) delete msg_head_;
  msg_head_ = NULL;
}
inline const ::NetProto::MsgHead& C2SWorldEventResponse::msg_head() const {
  // @@protoc_insertion_point(field_get:NetProto.C2SWorldEventResponse.msg_head)
  return msg_head_ != NULL ? *msg_head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
inline ::NetProto::MsgHead* C2SWorldEventResponse::mutable_msg_head() {
  
  if (msg_head_ == NULL) {
    msg_head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.C2SWorldEventResponse.msg_head)
  return msg_head_;
}
inline ::NetProto::MsgHead* C2SWorldEventResponse::release_msg_head() {
  // @@protoc_insertion_point(field_release:NetProto.C2SWorldEventResponse.msg_head)
  
  ::NetProto::MsgHead* temp = msg_head_;
  msg_head_ = NULL;
  return temp;
}
inline void C2SWorldEventResponse::set_allocated_msg_head(::NetProto::MsgHead* msg_head) {
  delete msg_head_;
  msg_head_ = msg_head;
  if (msg_head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.C2SWorldEventResponse.msg_head)
}

// uint32 event_id = 2;
inline void C2SWorldEventResponse::clear_event_id() {
  event_id_ = 0u;
}
inline ::google::protobuf::uint32 C2SWorldEventResponse::event_id() const {
  // @@protoc_insertion_point(field_get:NetProto.C2SWorldEventResponse.event_id)
  return event_id_;
}
inline void C2SWorldEventResponse::set_event_id(::google::protobuf::uint32 value) {
  
  event_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.C2SWorldEventResponse.event_id)
}

// .NetProto.WorldEventType type = 3;
inline void C2SWorldEventResponse::clear_type() {
  type_ = 0;
}
inline ::NetProto::WorldEventType C2SWorldEventResponse::type() const {
  // @@protoc_insertion_point(field_get:NetProto.C2SWorldEventResponse.type)
  return static_cast< ::NetProto::WorldEventType >(type_);
}
inline void C2SWorldEventResponse::set_type(::NetProto::WorldEventType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetProto.C2SWorldEventResponse.type)
}

// repeated .google.protobuf.Any params = 4;
inline int C2SWorldEventResponse::params_size() const {
  return params_.size();
}
inline void C2SWorldEventResponse::clear_params() {
  params_.Clear();
}
inline const ::google::protobuf::Any& C2SWorldEventResponse::params(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.C2SWorldEventResponse.params)
  return params_.Get(index);
}
inline ::google::protobuf::Any* C2SWorldEventResponse::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.C2SWorldEventResponse.params)
  return params_.Mutable(index);
}
inline ::google::protobuf::Any* C2SWorldEventResponse::add_params() {
  // @@protoc_insertion_point(field_add:NetProto.C2SWorldEventResponse.params)
  return params_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
C2SWorldEventResponse::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.C2SWorldEventResponse.params)
  return &params_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
C2SWorldEventResponse::params() const {
  // @@protoc_insertion_point(field_list:NetProto.C2SWorldEventResponse.params)
  return params_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace NetProto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::NetProto::ObjTransfer_RelationType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetProto::ObjTransfer_RelationType>() {
  return ::NetProto::ObjTransfer_RelationType_descriptor();
}
template <> struct is_proto_enum< ::NetProto::WorldEventType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetProto::WorldEventType>() {
  return ::NetProto::WorldEventType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_world_5fevent_2eproto__INCLUDED
