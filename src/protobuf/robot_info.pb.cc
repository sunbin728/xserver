// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: robot_info.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "robot_info.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace NetProto {
class RobotInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RobotInfo> {
} _RobotInfo_default_instance_;
class RobotOfflineDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RobotOffline> {
} _RobotOffline_default_instance_;

namespace protobuf_robot_5finfo_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotInfo, uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotInfo, class_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotInfo, name_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotInfo, age_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotInfo, gender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotInfo, intellectual_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotInfo, beautiful_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotInfo, lovely_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotInfo, skin_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotInfo, long_phy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotInfo, short_phy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotInfo, energy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotInfo, thirsty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotInfo, hunger_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotInfo, clean_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotInfo, suface_temperature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotInfo, money_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotInfo, birthday_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotInfo, pw_birthday_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotInfo, offline_pw_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotInfo, locality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotInfo, sleep_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotOffline, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotOffline, uuid_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(RobotInfo)},
  { 27, -1, sizeof(RobotOffline)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_RobotInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RobotOffline_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "robot_info.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _RobotInfo_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _RobotOffline_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _RobotInfo_default_instance_.DefaultConstruct();
  _RobotOffline_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\020robot_info.proto\022\010NetProto\"\227\003\n\tRobotIn"
      "fo\022\014\n\004uuid\030\001 \001(\t\022\020\n\010class_id\030\002 \001(\r\022\017\n\007na"
      "me_id\030\003 \001(\r\022\013\n\003age\030\004 \001(\r\022\016\n\006gender\030\005 \001(\r"
      "\022\024\n\014intellectual\030\006 \001(\r\022\021\n\tbeautiful\030\007 \001("
      "\r\022\016\n\006lovely\030\010 \001(\r\022\022\n\nskin_state\030\t \001(\r\022\020\n"
      "\010long_phy\030\n \001(\r\022\021\n\tshort_phy\030\013 \001(\r\022\016\n\006en"
      "ergy\030\014 \001(\r\022\017\n\007thirsty\030\r \001(\r\022\016\n\006hunger\030\016 "
      "\001(\r\022\r\n\005clean\030\017 \001(\r\022\032\n\022suface_temperature"
      "\030\020 \001(\r\022\r\n\005money\030\021 \001(\r\022\020\n\010birthday\030\022 \001(\r\022"
      "\023\n\013pw_birthday\030\023 \001(\004\022\027\n\017offline_pw_time\030"
      "\024 \001(\004\022\020\n\010locality\030\025 \001(\r\022\r\n\005sleep\030\026 \001(\r\"\034"
      "\n\014RobotOffline\022\014\n\004uuid\030\001 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 476);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "robot_info.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_robot_5finfo_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotInfo::kUuidFieldNumber;
const int RobotInfo::kClassIdFieldNumber;
const int RobotInfo::kNameIdFieldNumber;
const int RobotInfo::kAgeFieldNumber;
const int RobotInfo::kGenderFieldNumber;
const int RobotInfo::kIntellectualFieldNumber;
const int RobotInfo::kBeautifulFieldNumber;
const int RobotInfo::kLovelyFieldNumber;
const int RobotInfo::kSkinStateFieldNumber;
const int RobotInfo::kLongPhyFieldNumber;
const int RobotInfo::kShortPhyFieldNumber;
const int RobotInfo::kEnergyFieldNumber;
const int RobotInfo::kThirstyFieldNumber;
const int RobotInfo::kHungerFieldNumber;
const int RobotInfo::kCleanFieldNumber;
const int RobotInfo::kSufaceTemperatureFieldNumber;
const int RobotInfo::kMoneyFieldNumber;
const int RobotInfo::kBirthdayFieldNumber;
const int RobotInfo::kPwBirthdayFieldNumber;
const int RobotInfo::kOfflinePwTimeFieldNumber;
const int RobotInfo::kLocalityFieldNumber;
const int RobotInfo::kSleepFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotInfo::RobotInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_robot_5finfo_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.RobotInfo)
}
RobotInfo::RobotInfo(const RobotInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  ::memcpy(&class_id_, &from.class_id_,
    reinterpret_cast<char*>(&sleep_) -
    reinterpret_cast<char*>(&class_id_) + sizeof(sleep_));
  // @@protoc_insertion_point(copy_constructor:NetProto.RobotInfo)
}

void RobotInfo::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&class_id_, 0, reinterpret_cast<char*>(&sleep_) -
    reinterpret_cast<char*>(&class_id_) + sizeof(sleep_));
  _cached_size_ = 0;
}

RobotInfo::~RobotInfo() {
  // @@protoc_insertion_point(destructor:NetProto.RobotInfo)
  SharedDtor();
}

void RobotInfo::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RobotInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RobotInfo::descriptor() {
  protobuf_robot_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_robot_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RobotInfo& RobotInfo::default_instance() {
  protobuf_robot_5finfo_2eproto::InitDefaults();
  return *internal_default_instance();
}

RobotInfo* RobotInfo::New(::google::protobuf::Arena* arena) const {
  RobotInfo* n = new RobotInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RobotInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.RobotInfo)
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&class_id_, 0, reinterpret_cast<char*>(&sleep_) -
    reinterpret_cast<char*>(&class_id_) + sizeof(sleep_));
}

bool RobotInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.RobotInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), this->uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.RobotInfo.uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 class_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &class_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 name_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &name_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 age = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &age_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gender = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gender_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 intellectual = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &intellectual_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 beautiful = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beautiful_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 lovely = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lovely_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 skin_state = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skin_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 long_phy = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &long_phy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 short_phy = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &short_phy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 energy = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &energy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 thirsty = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &thirsty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 hunger = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hunger_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 clean = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &clean_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 suface_temperature = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &suface_temperature_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 money = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 birthday = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &birthday_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 pw_birthday = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pw_birthday_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 offline_pw_time = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offline_pw_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 locality = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &locality_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 sleep = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sleep_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.RobotInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.RobotInfo)
  return false;
#undef DO_
}

void RobotInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.RobotInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), this->uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.RobotInfo.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uuid(), output);
  }

  // uint32 class_id = 2;
  if (this->class_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->class_id(), output);
  }

  // uint32 name_id = 3;
  if (this->name_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->name_id(), output);
  }

  // uint32 age = 4;
  if (this->age() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->age(), output);
  }

  // uint32 gender = 5;
  if (this->gender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->gender(), output);
  }

  // uint32 intellectual = 6;
  if (this->intellectual() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->intellectual(), output);
  }

  // uint32 beautiful = 7;
  if (this->beautiful() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->beautiful(), output);
  }

  // uint32 lovely = 8;
  if (this->lovely() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->lovely(), output);
  }

  // uint32 skin_state = 9;
  if (this->skin_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->skin_state(), output);
  }

  // uint32 long_phy = 10;
  if (this->long_phy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->long_phy(), output);
  }

  // uint32 short_phy = 11;
  if (this->short_phy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->short_phy(), output);
  }

  // uint32 energy = 12;
  if (this->energy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->energy(), output);
  }

  // uint32 thirsty = 13;
  if (this->thirsty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->thirsty(), output);
  }

  // uint32 hunger = 14;
  if (this->hunger() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->hunger(), output);
  }

  // uint32 clean = 15;
  if (this->clean() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->clean(), output);
  }

  // uint32 suface_temperature = 16;
  if (this->suface_temperature() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->suface_temperature(), output);
  }

  // uint32 money = 17;
  if (this->money() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->money(), output);
  }

  // uint32 birthday = 18;
  if (this->birthday() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->birthday(), output);
  }

  // uint64 pw_birthday = 19;
  if (this->pw_birthday() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(19, this->pw_birthday(), output);
  }

  // uint64 offline_pw_time = 20;
  if (this->offline_pw_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(20, this->offline_pw_time(), output);
  }

  // uint32 locality = 21;
  if (this->locality() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->locality(), output);
  }

  // uint32 sleep = 22;
  if (this->sleep() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(22, this->sleep(), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.RobotInfo)
}

::google::protobuf::uint8* RobotInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.RobotInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), this->uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.RobotInfo.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uuid(), target);
  }

  // uint32 class_id = 2;
  if (this->class_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->class_id(), target);
  }

  // uint32 name_id = 3;
  if (this->name_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->name_id(), target);
  }

  // uint32 age = 4;
  if (this->age() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->age(), target);
  }

  // uint32 gender = 5;
  if (this->gender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->gender(), target);
  }

  // uint32 intellectual = 6;
  if (this->intellectual() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->intellectual(), target);
  }

  // uint32 beautiful = 7;
  if (this->beautiful() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->beautiful(), target);
  }

  // uint32 lovely = 8;
  if (this->lovely() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->lovely(), target);
  }

  // uint32 skin_state = 9;
  if (this->skin_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->skin_state(), target);
  }

  // uint32 long_phy = 10;
  if (this->long_phy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->long_phy(), target);
  }

  // uint32 short_phy = 11;
  if (this->short_phy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->short_phy(), target);
  }

  // uint32 energy = 12;
  if (this->energy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->energy(), target);
  }

  // uint32 thirsty = 13;
  if (this->thirsty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->thirsty(), target);
  }

  // uint32 hunger = 14;
  if (this->hunger() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->hunger(), target);
  }

  // uint32 clean = 15;
  if (this->clean() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->clean(), target);
  }

  // uint32 suface_temperature = 16;
  if (this->suface_temperature() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->suface_temperature(), target);
  }

  // uint32 money = 17;
  if (this->money() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->money(), target);
  }

  // uint32 birthday = 18;
  if (this->birthday() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->birthday(), target);
  }

  // uint64 pw_birthday = 19;
  if (this->pw_birthday() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(19, this->pw_birthday(), target);
  }

  // uint64 offline_pw_time = 20;
  if (this->offline_pw_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(20, this->offline_pw_time(), target);
  }

  // uint32 locality = 21;
  if (this->locality() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(21, this->locality(), target);
  }

  // uint32 sleep = 22;
  if (this->sleep() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(22, this->sleep(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.RobotInfo)
  return target;
}

size_t RobotInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.RobotInfo)
  size_t total_size = 0;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  // uint32 class_id = 2;
  if (this->class_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->class_id());
  }

  // uint32 name_id = 3;
  if (this->name_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->name_id());
  }

  // uint32 age = 4;
  if (this->age() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->age());
  }

  // uint32 gender = 5;
  if (this->gender() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gender());
  }

  // uint32 intellectual = 6;
  if (this->intellectual() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->intellectual());
  }

  // uint32 beautiful = 7;
  if (this->beautiful() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->beautiful());
  }

  // uint32 lovely = 8;
  if (this->lovely() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lovely());
  }

  // uint32 skin_state = 9;
  if (this->skin_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->skin_state());
  }

  // uint32 long_phy = 10;
  if (this->long_phy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->long_phy());
  }

  // uint32 short_phy = 11;
  if (this->short_phy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->short_phy());
  }

  // uint32 energy = 12;
  if (this->energy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->energy());
  }

  // uint32 thirsty = 13;
  if (this->thirsty() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->thirsty());
  }

  // uint32 hunger = 14;
  if (this->hunger() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hunger());
  }

  // uint32 clean = 15;
  if (this->clean() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->clean());
  }

  // uint32 suface_temperature = 16;
  if (this->suface_temperature() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->suface_temperature());
  }

  // uint32 money = 17;
  if (this->money() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->money());
  }

  // uint64 pw_birthday = 19;
  if (this->pw_birthday() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->pw_birthday());
  }

  // uint32 birthday = 18;
  if (this->birthday() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->birthday());
  }

  // uint32 locality = 21;
  if (this->locality() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->locality());
  }

  // uint64 offline_pw_time = 20;
  if (this->offline_pw_time() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offline_pw_time());
  }

  // uint32 sleep = 22;
  if (this->sleep() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sleep());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RobotInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.RobotInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RobotInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.RobotInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.RobotInfo)
    MergeFrom(*source);
  }
}

void RobotInfo::MergeFrom(const RobotInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.RobotInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.class_id() != 0) {
    set_class_id(from.class_id());
  }
  if (from.name_id() != 0) {
    set_name_id(from.name_id());
  }
  if (from.age() != 0) {
    set_age(from.age());
  }
  if (from.gender() != 0) {
    set_gender(from.gender());
  }
  if (from.intellectual() != 0) {
    set_intellectual(from.intellectual());
  }
  if (from.beautiful() != 0) {
    set_beautiful(from.beautiful());
  }
  if (from.lovely() != 0) {
    set_lovely(from.lovely());
  }
  if (from.skin_state() != 0) {
    set_skin_state(from.skin_state());
  }
  if (from.long_phy() != 0) {
    set_long_phy(from.long_phy());
  }
  if (from.short_phy() != 0) {
    set_short_phy(from.short_phy());
  }
  if (from.energy() != 0) {
    set_energy(from.energy());
  }
  if (from.thirsty() != 0) {
    set_thirsty(from.thirsty());
  }
  if (from.hunger() != 0) {
    set_hunger(from.hunger());
  }
  if (from.clean() != 0) {
    set_clean(from.clean());
  }
  if (from.suface_temperature() != 0) {
    set_suface_temperature(from.suface_temperature());
  }
  if (from.money() != 0) {
    set_money(from.money());
  }
  if (from.pw_birthday() != 0) {
    set_pw_birthday(from.pw_birthday());
  }
  if (from.birthday() != 0) {
    set_birthday(from.birthday());
  }
  if (from.locality() != 0) {
    set_locality(from.locality());
  }
  if (from.offline_pw_time() != 0) {
    set_offline_pw_time(from.offline_pw_time());
  }
  if (from.sleep() != 0) {
    set_sleep(from.sleep());
  }
}

void RobotInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.RobotInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotInfo::CopyFrom(const RobotInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.RobotInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotInfo::IsInitialized() const {
  return true;
}

void RobotInfo::Swap(RobotInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotInfo::InternalSwap(RobotInfo* other) {
  uuid_.Swap(&other->uuid_);
  std::swap(class_id_, other->class_id_);
  std::swap(name_id_, other->name_id_);
  std::swap(age_, other->age_);
  std::swap(gender_, other->gender_);
  std::swap(intellectual_, other->intellectual_);
  std::swap(beautiful_, other->beautiful_);
  std::swap(lovely_, other->lovely_);
  std::swap(skin_state_, other->skin_state_);
  std::swap(long_phy_, other->long_phy_);
  std::swap(short_phy_, other->short_phy_);
  std::swap(energy_, other->energy_);
  std::swap(thirsty_, other->thirsty_);
  std::swap(hunger_, other->hunger_);
  std::swap(clean_, other->clean_);
  std::swap(suface_temperature_, other->suface_temperature_);
  std::swap(money_, other->money_);
  std::swap(pw_birthday_, other->pw_birthday_);
  std::swap(birthday_, other->birthday_);
  std::swap(locality_, other->locality_);
  std::swap(offline_pw_time_, other->offline_pw_time_);
  std::swap(sleep_, other->sleep_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RobotInfo::GetMetadata() const {
  protobuf_robot_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_robot_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RobotInfo

// string uuid = 1;
void RobotInfo::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RobotInfo::uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotInfo.uuid)
  return uuid_.GetNoArena();
}
void RobotInfo::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.RobotInfo.uuid)
}
#if LANG_CXX11
void RobotInfo::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.RobotInfo.uuid)
}
#endif
void RobotInfo::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.RobotInfo.uuid)
}
void RobotInfo::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.RobotInfo.uuid)
}
::std::string* RobotInfo::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.RobotInfo.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RobotInfo::release_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.RobotInfo.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RobotInfo::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.RobotInfo.uuid)
}

// uint32 class_id = 2;
void RobotInfo::clear_class_id() {
  class_id_ = 0u;
}
::google::protobuf::uint32 RobotInfo::class_id() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotInfo.class_id)
  return class_id_;
}
void RobotInfo::set_class_id(::google::protobuf::uint32 value) {
  
  class_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.RobotInfo.class_id)
}

// uint32 name_id = 3;
void RobotInfo::clear_name_id() {
  name_id_ = 0u;
}
::google::protobuf::uint32 RobotInfo::name_id() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotInfo.name_id)
  return name_id_;
}
void RobotInfo::set_name_id(::google::protobuf::uint32 value) {
  
  name_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.RobotInfo.name_id)
}

// uint32 age = 4;
void RobotInfo::clear_age() {
  age_ = 0u;
}
::google::protobuf::uint32 RobotInfo::age() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotInfo.age)
  return age_;
}
void RobotInfo::set_age(::google::protobuf::uint32 value) {
  
  age_ = value;
  // @@protoc_insertion_point(field_set:NetProto.RobotInfo.age)
}

// uint32 gender = 5;
void RobotInfo::clear_gender() {
  gender_ = 0u;
}
::google::protobuf::uint32 RobotInfo::gender() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotInfo.gender)
  return gender_;
}
void RobotInfo::set_gender(::google::protobuf::uint32 value) {
  
  gender_ = value;
  // @@protoc_insertion_point(field_set:NetProto.RobotInfo.gender)
}

// uint32 intellectual = 6;
void RobotInfo::clear_intellectual() {
  intellectual_ = 0u;
}
::google::protobuf::uint32 RobotInfo::intellectual() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotInfo.intellectual)
  return intellectual_;
}
void RobotInfo::set_intellectual(::google::protobuf::uint32 value) {
  
  intellectual_ = value;
  // @@protoc_insertion_point(field_set:NetProto.RobotInfo.intellectual)
}

// uint32 beautiful = 7;
void RobotInfo::clear_beautiful() {
  beautiful_ = 0u;
}
::google::protobuf::uint32 RobotInfo::beautiful() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotInfo.beautiful)
  return beautiful_;
}
void RobotInfo::set_beautiful(::google::protobuf::uint32 value) {
  
  beautiful_ = value;
  // @@protoc_insertion_point(field_set:NetProto.RobotInfo.beautiful)
}

// uint32 lovely = 8;
void RobotInfo::clear_lovely() {
  lovely_ = 0u;
}
::google::protobuf::uint32 RobotInfo::lovely() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotInfo.lovely)
  return lovely_;
}
void RobotInfo::set_lovely(::google::protobuf::uint32 value) {
  
  lovely_ = value;
  // @@protoc_insertion_point(field_set:NetProto.RobotInfo.lovely)
}

// uint32 skin_state = 9;
void RobotInfo::clear_skin_state() {
  skin_state_ = 0u;
}
::google::protobuf::uint32 RobotInfo::skin_state() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotInfo.skin_state)
  return skin_state_;
}
void RobotInfo::set_skin_state(::google::protobuf::uint32 value) {
  
  skin_state_ = value;
  // @@protoc_insertion_point(field_set:NetProto.RobotInfo.skin_state)
}

// uint32 long_phy = 10;
void RobotInfo::clear_long_phy() {
  long_phy_ = 0u;
}
::google::protobuf::uint32 RobotInfo::long_phy() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotInfo.long_phy)
  return long_phy_;
}
void RobotInfo::set_long_phy(::google::protobuf::uint32 value) {
  
  long_phy_ = value;
  // @@protoc_insertion_point(field_set:NetProto.RobotInfo.long_phy)
}

// uint32 short_phy = 11;
void RobotInfo::clear_short_phy() {
  short_phy_ = 0u;
}
::google::protobuf::uint32 RobotInfo::short_phy() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotInfo.short_phy)
  return short_phy_;
}
void RobotInfo::set_short_phy(::google::protobuf::uint32 value) {
  
  short_phy_ = value;
  // @@protoc_insertion_point(field_set:NetProto.RobotInfo.short_phy)
}

// uint32 energy = 12;
void RobotInfo::clear_energy() {
  energy_ = 0u;
}
::google::protobuf::uint32 RobotInfo::energy() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotInfo.energy)
  return energy_;
}
void RobotInfo::set_energy(::google::protobuf::uint32 value) {
  
  energy_ = value;
  // @@protoc_insertion_point(field_set:NetProto.RobotInfo.energy)
}

// uint32 thirsty = 13;
void RobotInfo::clear_thirsty() {
  thirsty_ = 0u;
}
::google::protobuf::uint32 RobotInfo::thirsty() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotInfo.thirsty)
  return thirsty_;
}
void RobotInfo::set_thirsty(::google::protobuf::uint32 value) {
  
  thirsty_ = value;
  // @@protoc_insertion_point(field_set:NetProto.RobotInfo.thirsty)
}

// uint32 hunger = 14;
void RobotInfo::clear_hunger() {
  hunger_ = 0u;
}
::google::protobuf::uint32 RobotInfo::hunger() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotInfo.hunger)
  return hunger_;
}
void RobotInfo::set_hunger(::google::protobuf::uint32 value) {
  
  hunger_ = value;
  // @@protoc_insertion_point(field_set:NetProto.RobotInfo.hunger)
}

// uint32 clean = 15;
void RobotInfo::clear_clean() {
  clean_ = 0u;
}
::google::protobuf::uint32 RobotInfo::clean() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotInfo.clean)
  return clean_;
}
void RobotInfo::set_clean(::google::protobuf::uint32 value) {
  
  clean_ = value;
  // @@protoc_insertion_point(field_set:NetProto.RobotInfo.clean)
}

// uint32 suface_temperature = 16;
void RobotInfo::clear_suface_temperature() {
  suface_temperature_ = 0u;
}
::google::protobuf::uint32 RobotInfo::suface_temperature() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotInfo.suface_temperature)
  return suface_temperature_;
}
void RobotInfo::set_suface_temperature(::google::protobuf::uint32 value) {
  
  suface_temperature_ = value;
  // @@protoc_insertion_point(field_set:NetProto.RobotInfo.suface_temperature)
}

// uint32 money = 17;
void RobotInfo::clear_money() {
  money_ = 0u;
}
::google::protobuf::uint32 RobotInfo::money() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotInfo.money)
  return money_;
}
void RobotInfo::set_money(::google::protobuf::uint32 value) {
  
  money_ = value;
  // @@protoc_insertion_point(field_set:NetProto.RobotInfo.money)
}

// uint32 birthday = 18;
void RobotInfo::clear_birthday() {
  birthday_ = 0u;
}
::google::protobuf::uint32 RobotInfo::birthday() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotInfo.birthday)
  return birthday_;
}
void RobotInfo::set_birthday(::google::protobuf::uint32 value) {
  
  birthday_ = value;
  // @@protoc_insertion_point(field_set:NetProto.RobotInfo.birthday)
}

// uint64 pw_birthday = 19;
void RobotInfo::clear_pw_birthday() {
  pw_birthday_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 RobotInfo::pw_birthday() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotInfo.pw_birthday)
  return pw_birthday_;
}
void RobotInfo::set_pw_birthday(::google::protobuf::uint64 value) {
  
  pw_birthday_ = value;
  // @@protoc_insertion_point(field_set:NetProto.RobotInfo.pw_birthday)
}

// uint64 offline_pw_time = 20;
void RobotInfo::clear_offline_pw_time() {
  offline_pw_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 RobotInfo::offline_pw_time() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotInfo.offline_pw_time)
  return offline_pw_time_;
}
void RobotInfo::set_offline_pw_time(::google::protobuf::uint64 value) {
  
  offline_pw_time_ = value;
  // @@protoc_insertion_point(field_set:NetProto.RobotInfo.offline_pw_time)
}

// uint32 locality = 21;
void RobotInfo::clear_locality() {
  locality_ = 0u;
}
::google::protobuf::uint32 RobotInfo::locality() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotInfo.locality)
  return locality_;
}
void RobotInfo::set_locality(::google::protobuf::uint32 value) {
  
  locality_ = value;
  // @@protoc_insertion_point(field_set:NetProto.RobotInfo.locality)
}

// uint32 sleep = 22;
void RobotInfo::clear_sleep() {
  sleep_ = 0u;
}
::google::protobuf::uint32 RobotInfo::sleep() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotInfo.sleep)
  return sleep_;
}
void RobotInfo::set_sleep(::google::protobuf::uint32 value) {
  
  sleep_ = value;
  // @@protoc_insertion_point(field_set:NetProto.RobotInfo.sleep)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotOffline::kUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotOffline::RobotOffline()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_robot_5finfo_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.RobotOffline)
}
RobotOffline::RobotOffline(const RobotOffline& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  // @@protoc_insertion_point(copy_constructor:NetProto.RobotOffline)
}

void RobotOffline::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RobotOffline::~RobotOffline() {
  // @@protoc_insertion_point(destructor:NetProto.RobotOffline)
  SharedDtor();
}

void RobotOffline::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RobotOffline::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RobotOffline::descriptor() {
  protobuf_robot_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_robot_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RobotOffline& RobotOffline::default_instance() {
  protobuf_robot_5finfo_2eproto::InitDefaults();
  return *internal_default_instance();
}

RobotOffline* RobotOffline::New(::google::protobuf::Arena* arena) const {
  RobotOffline* n = new RobotOffline;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RobotOffline::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.RobotOffline)
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RobotOffline::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.RobotOffline)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), this->uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.RobotOffline.uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.RobotOffline)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.RobotOffline)
  return false;
#undef DO_
}

void RobotOffline::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.RobotOffline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), this->uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.RobotOffline.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uuid(), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.RobotOffline)
}

::google::protobuf::uint8* RobotOffline::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.RobotOffline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), this->uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.RobotOffline.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uuid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.RobotOffline)
  return target;
}

size_t RobotOffline::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.RobotOffline)
  size_t total_size = 0;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RobotOffline::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.RobotOffline)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotOffline* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RobotOffline>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.RobotOffline)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.RobotOffline)
    MergeFrom(*source);
  }
}

void RobotOffline::MergeFrom(const RobotOffline& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.RobotOffline)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
}

void RobotOffline::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.RobotOffline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotOffline::CopyFrom(const RobotOffline& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.RobotOffline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotOffline::IsInitialized() const {
  return true;
}

void RobotOffline::Swap(RobotOffline* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotOffline::InternalSwap(RobotOffline* other) {
  uuid_.Swap(&other->uuid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RobotOffline::GetMetadata() const {
  protobuf_robot_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_robot_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RobotOffline

// string uuid = 1;
void RobotOffline::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RobotOffline::uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotOffline.uuid)
  return uuid_.GetNoArena();
}
void RobotOffline::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.RobotOffline.uuid)
}
#if LANG_CXX11
void RobotOffline::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.RobotOffline.uuid)
}
#endif
void RobotOffline::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.RobotOffline.uuid)
}
void RobotOffline::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.RobotOffline.uuid)
}
::std::string* RobotOffline::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.RobotOffline.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RobotOffline::release_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.RobotOffline.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RobotOffline::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.RobotOffline.uuid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace NetProto

// @@protoc_insertion_point(global_scope)
