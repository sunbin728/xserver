// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: weather_param.proto

#ifndef PROTOBUF_weather_5fparam_2eproto__INCLUDED
#define PROTOBUF_weather_5fparam_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace NetProto {
class WeatherParam;
class WeatherParamDefaultTypeInternal;
extern WeatherParamDefaultTypeInternal _WeatherParam_default_instance_;
class WeatherParamItem;
class WeatherParamItemDefaultTypeInternal;
extern WeatherParamItemDefaultTypeInternal _WeatherParamItem_default_instance_;
}  // namespace NetProto

namespace NetProto {

namespace protobuf_weather_5fparam_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_weather_5fparam_2eproto

enum WeatherParamItem_ParamType {
  WeatherParamItem_ParamType_CLOUD = 0,
  WeatherParamItem_ParamType_TEMP = 1,
  WeatherParamItem_ParamType_WIND = 2,
  WeatherParamItem_ParamType_WeatherParamItem_ParamType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  WeatherParamItem_ParamType_WeatherParamItem_ParamType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool WeatherParamItem_ParamType_IsValid(int value);
const WeatherParamItem_ParamType WeatherParamItem_ParamType_ParamType_MIN = WeatherParamItem_ParamType_CLOUD;
const WeatherParamItem_ParamType WeatherParamItem_ParamType_ParamType_MAX = WeatherParamItem_ParamType_WIND;
const int WeatherParamItem_ParamType_ParamType_ARRAYSIZE = WeatherParamItem_ParamType_ParamType_MAX + 1;

const ::google::protobuf::EnumDescriptor* WeatherParamItem_ParamType_descriptor();
inline const ::std::string& WeatherParamItem_ParamType_Name(WeatherParamItem_ParamType value) {
  return ::google::protobuf::internal::NameOfEnum(
    WeatherParamItem_ParamType_descriptor(), value);
}
inline bool WeatherParamItem_ParamType_Parse(
    const ::std::string& name, WeatherParamItem_ParamType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WeatherParamItem_ParamType>(
    WeatherParamItem_ParamType_descriptor(), name, value);
}
// ===================================================================

class WeatherParamItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.WeatherParamItem) */ {
 public:
  WeatherParamItem();
  virtual ~WeatherParamItem();

  WeatherParamItem(const WeatherParamItem& from);

  inline WeatherParamItem& operator=(const WeatherParamItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WeatherParamItem& default_instance();

  static inline const WeatherParamItem* internal_default_instance() {
    return reinterpret_cast<const WeatherParamItem*>(
               &_WeatherParamItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(WeatherParamItem* other);

  // implements Message ----------------------------------------------

  inline WeatherParamItem* New() const PROTOBUF_FINAL { return New(NULL); }

  WeatherParamItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WeatherParamItem& from);
  void MergeFrom(const WeatherParamItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WeatherParamItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef WeatherParamItem_ParamType ParamType;
  static const ParamType CLOUD =
    WeatherParamItem_ParamType_CLOUD;
  static const ParamType TEMP =
    WeatherParamItem_ParamType_TEMP;
  static const ParamType WIND =
    WeatherParamItem_ParamType_WIND;
  static inline bool ParamType_IsValid(int value) {
    return WeatherParamItem_ParamType_IsValid(value);
  }
  static const ParamType ParamType_MIN =
    WeatherParamItem_ParamType_ParamType_MIN;
  static const ParamType ParamType_MAX =
    WeatherParamItem_ParamType_ParamType_MAX;
  static const int ParamType_ARRAYSIZE =
    WeatherParamItem_ParamType_ParamType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ParamType_descriptor() {
    return WeatherParamItem_ParamType_descriptor();
  }
  static inline const ::std::string& ParamType_Name(ParamType value) {
    return WeatherParamItem_ParamType_Name(value);
  }
  static inline bool ParamType_Parse(const ::std::string& name,
      ParamType* value) {
    return WeatherParamItem_ParamType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .NetProto.WeatherParamItem.ParamType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::NetProto::WeatherParamItem_ParamType type() const;
  void set_type(::NetProto::WeatherParamItem_ParamType value);

  // float value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  float value() const;
  void set_value(float value);

  // @@protoc_insertion_point(class_scope:NetProto.WeatherParamItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  float value_;
  mutable int _cached_size_;
  friend struct protobuf_weather_5fparam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WeatherParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.WeatherParam) */ {
 public:
  WeatherParam();
  virtual ~WeatherParam();

  WeatherParam(const WeatherParam& from);

  inline WeatherParam& operator=(const WeatherParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WeatherParam& default_instance();

  static inline const WeatherParam* internal_default_instance() {
    return reinterpret_cast<const WeatherParam*>(
               &_WeatherParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(WeatherParam* other);

  // implements Message ----------------------------------------------

  inline WeatherParam* New() const PROTOBUF_FINAL { return New(NULL); }

  WeatherParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WeatherParam& from);
  void MergeFrom(const WeatherParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WeatherParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NetProto.WeatherParamItem item = 1;
  int item_size() const;
  void clear_item();
  static const int kItemFieldNumber = 1;
  const ::NetProto::WeatherParamItem& item(int index) const;
  ::NetProto::WeatherParamItem* mutable_item(int index);
  ::NetProto::WeatherParamItem* add_item();
  ::google::protobuf::RepeatedPtrField< ::NetProto::WeatherParamItem >*
      mutable_item();
  const ::google::protobuf::RepeatedPtrField< ::NetProto::WeatherParamItem >&
      item() const;

  // @@protoc_insertion_point(class_scope:NetProto.WeatherParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetProto::WeatherParamItem > item_;
  mutable int _cached_size_;
  friend struct protobuf_weather_5fparam_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// WeatherParamItem

// .NetProto.WeatherParamItem.ParamType type = 1;
inline void WeatherParamItem::clear_type() {
  type_ = 0;
}
inline ::NetProto::WeatherParamItem_ParamType WeatherParamItem::type() const {
  // @@protoc_insertion_point(field_get:NetProto.WeatherParamItem.type)
  return static_cast< ::NetProto::WeatherParamItem_ParamType >(type_);
}
inline void WeatherParamItem::set_type(::NetProto::WeatherParamItem_ParamType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetProto.WeatherParamItem.type)
}

// float value = 2;
inline void WeatherParamItem::clear_value() {
  value_ = 0;
}
inline float WeatherParamItem::value() const {
  // @@protoc_insertion_point(field_get:NetProto.WeatherParamItem.value)
  return value_;
}
inline void WeatherParamItem::set_value(float value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:NetProto.WeatherParamItem.value)
}

// -------------------------------------------------------------------

// WeatherParam

// repeated .NetProto.WeatherParamItem item = 1;
inline int WeatherParam::item_size() const {
  return item_.size();
}
inline void WeatherParam::clear_item() {
  item_.Clear();
}
inline const ::NetProto::WeatherParamItem& WeatherParam::item(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.WeatherParam.item)
  return item_.Get(index);
}
inline ::NetProto::WeatherParamItem* WeatherParam::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.WeatherParam.item)
  return item_.Mutable(index);
}
inline ::NetProto::WeatherParamItem* WeatherParam::add_item() {
  // @@protoc_insertion_point(field_add:NetProto.WeatherParam.item)
  return item_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetProto::WeatherParamItem >*
WeatherParam::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.WeatherParam.item)
  return &item_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetProto::WeatherParamItem >&
WeatherParam::item() const {
  // @@protoc_insertion_point(field_list:NetProto.WeatherParam.item)
  return item_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace NetProto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::NetProto::WeatherParamItem_ParamType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetProto::WeatherParamItem_ParamType>() {
  return ::NetProto::WeatherParamItem_ParamType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_weather_5fparam_2eproto__INCLUDED
