// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: robot_control.proto

#ifndef PROTOBUF_robot_5fcontrol_2eproto__INCLUDED
#define PROTOBUF_robot_5fcontrol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace NetProto {
class RobotControl;
class RobotControlDefaultTypeInternal;
extern RobotControlDefaultTypeInternal _RobotControl_default_instance_;
class RobotControlItem;
class RobotControlItemDefaultTypeInternal;
extern RobotControlItemDefaultTypeInternal _RobotControlItem_default_instance_;
}  // namespace NetProto

namespace NetProto {

namespace protobuf_robot_5fcontrol_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_robot_5fcontrol_2eproto

enum RobotControlItem_ControlType {
  RobotControlItem_ControlType_ENERGY = 0,
  RobotControlItem_ControlType_THIRSTY = 1,
  RobotControlItem_ControlType_HUNGER = 2,
  RobotControlItem_ControlType_HOT = 3,
  RobotControlItem_ControlType_COLD = 4,
  RobotControlItem_ControlType_RobotControlItem_ControlType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RobotControlItem_ControlType_RobotControlItem_ControlType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RobotControlItem_ControlType_IsValid(int value);
const RobotControlItem_ControlType RobotControlItem_ControlType_ControlType_MIN = RobotControlItem_ControlType_ENERGY;
const RobotControlItem_ControlType RobotControlItem_ControlType_ControlType_MAX = RobotControlItem_ControlType_COLD;
const int RobotControlItem_ControlType_ControlType_ARRAYSIZE = RobotControlItem_ControlType_ControlType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RobotControlItem_ControlType_descriptor();
inline const ::std::string& RobotControlItem_ControlType_Name(RobotControlItem_ControlType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RobotControlItem_ControlType_descriptor(), value);
}
inline bool RobotControlItem_ControlType_Parse(
    const ::std::string& name, RobotControlItem_ControlType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RobotControlItem_ControlType>(
    RobotControlItem_ControlType_descriptor(), name, value);
}
enum RobotControlItem_ControlLevel {
  RobotControlItem_ControlLevel_LEVEL_VERY = 0,
  RobotControlItem_ControlLevel_LEVEL_GENERAL = 1,
  RobotControlItem_ControlLevel_LEVEL_NOT = 2,
  RobotControlItem_ControlLevel_RobotControlItem_ControlLevel_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RobotControlItem_ControlLevel_RobotControlItem_ControlLevel_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RobotControlItem_ControlLevel_IsValid(int value);
const RobotControlItem_ControlLevel RobotControlItem_ControlLevel_ControlLevel_MIN = RobotControlItem_ControlLevel_LEVEL_VERY;
const RobotControlItem_ControlLevel RobotControlItem_ControlLevel_ControlLevel_MAX = RobotControlItem_ControlLevel_LEVEL_NOT;
const int RobotControlItem_ControlLevel_ControlLevel_ARRAYSIZE = RobotControlItem_ControlLevel_ControlLevel_MAX + 1;

const ::google::protobuf::EnumDescriptor* RobotControlItem_ControlLevel_descriptor();
inline const ::std::string& RobotControlItem_ControlLevel_Name(RobotControlItem_ControlLevel value) {
  return ::google::protobuf::internal::NameOfEnum(
    RobotControlItem_ControlLevel_descriptor(), value);
}
inline bool RobotControlItem_ControlLevel_Parse(
    const ::std::string& name, RobotControlItem_ControlLevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RobotControlItem_ControlLevel>(
    RobotControlItem_ControlLevel_descriptor(), name, value);
}
// ===================================================================

class RobotControlItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.RobotControlItem) */ {
 public:
  RobotControlItem();
  virtual ~RobotControlItem();

  RobotControlItem(const RobotControlItem& from);

  inline RobotControlItem& operator=(const RobotControlItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotControlItem& default_instance();

  static inline const RobotControlItem* internal_default_instance() {
    return reinterpret_cast<const RobotControlItem*>(
               &_RobotControlItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RobotControlItem* other);

  // implements Message ----------------------------------------------

  inline RobotControlItem* New() const PROTOBUF_FINAL { return New(NULL); }

  RobotControlItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RobotControlItem& from);
  void MergeFrom(const RobotControlItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RobotControlItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef RobotControlItem_ControlType ControlType;
  static const ControlType ENERGY =
    RobotControlItem_ControlType_ENERGY;
  static const ControlType THIRSTY =
    RobotControlItem_ControlType_THIRSTY;
  static const ControlType HUNGER =
    RobotControlItem_ControlType_HUNGER;
  static const ControlType HOT =
    RobotControlItem_ControlType_HOT;
  static const ControlType COLD =
    RobotControlItem_ControlType_COLD;
  static inline bool ControlType_IsValid(int value) {
    return RobotControlItem_ControlType_IsValid(value);
  }
  static const ControlType ControlType_MIN =
    RobotControlItem_ControlType_ControlType_MIN;
  static const ControlType ControlType_MAX =
    RobotControlItem_ControlType_ControlType_MAX;
  static const int ControlType_ARRAYSIZE =
    RobotControlItem_ControlType_ControlType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ControlType_descriptor() {
    return RobotControlItem_ControlType_descriptor();
  }
  static inline const ::std::string& ControlType_Name(ControlType value) {
    return RobotControlItem_ControlType_Name(value);
  }
  static inline bool ControlType_Parse(const ::std::string& name,
      ControlType* value) {
    return RobotControlItem_ControlType_Parse(name, value);
  }

  typedef RobotControlItem_ControlLevel ControlLevel;
  static const ControlLevel LEVEL_VERY =
    RobotControlItem_ControlLevel_LEVEL_VERY;
  static const ControlLevel LEVEL_GENERAL =
    RobotControlItem_ControlLevel_LEVEL_GENERAL;
  static const ControlLevel LEVEL_NOT =
    RobotControlItem_ControlLevel_LEVEL_NOT;
  static inline bool ControlLevel_IsValid(int value) {
    return RobotControlItem_ControlLevel_IsValid(value);
  }
  static const ControlLevel ControlLevel_MIN =
    RobotControlItem_ControlLevel_ControlLevel_MIN;
  static const ControlLevel ControlLevel_MAX =
    RobotControlItem_ControlLevel_ControlLevel_MAX;
  static const int ControlLevel_ARRAYSIZE =
    RobotControlItem_ControlLevel_ControlLevel_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ControlLevel_descriptor() {
    return RobotControlItem_ControlLevel_descriptor();
  }
  static inline const ::std::string& ControlLevel_Name(ControlLevel value) {
    return RobotControlItem_ControlLevel_Name(value);
  }
  static inline bool ControlLevel_Parse(const ::std::string& name,
      ControlLevel* value) {
    return RobotControlItem_ControlLevel_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .NetProto.RobotControlItem.ControlType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::NetProto::RobotControlItem_ControlType type() const;
  void set_type(::NetProto::RobotControlItem_ControlType value);

  // .NetProto.RobotControlItem.ControlLevel level = 2;
  void clear_level();
  static const int kLevelFieldNumber = 2;
  ::NetProto::RobotControlItem_ControlLevel level() const;
  void set_level(::NetProto::RobotControlItem_ControlLevel value);

  // @@protoc_insertion_point(class_scope:NetProto.RobotControlItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  int level_;
  mutable int _cached_size_;
  friend struct protobuf_robot_5fcontrol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RobotControl : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.RobotControl) */ {
 public:
  RobotControl();
  virtual ~RobotControl();

  RobotControl(const RobotControl& from);

  inline RobotControl& operator=(const RobotControl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotControl& default_instance();

  static inline const RobotControl* internal_default_instance() {
    return reinterpret_cast<const RobotControl*>(
               &_RobotControl_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(RobotControl* other);

  // implements Message ----------------------------------------------

  inline RobotControl* New() const PROTOBUF_FINAL { return New(NULL); }

  RobotControl* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RobotControl& from);
  void MergeFrom(const RobotControl& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RobotControl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NetProto.RobotControlItem item = 2;
  int item_size() const;
  void clear_item();
  static const int kItemFieldNumber = 2;
  const ::NetProto::RobotControlItem& item(int index) const;
  ::NetProto::RobotControlItem* mutable_item(int index);
  ::NetProto::RobotControlItem* add_item();
  ::google::protobuf::RepeatedPtrField< ::NetProto::RobotControlItem >*
      mutable_item();
  const ::google::protobuf::RepeatedPtrField< ::NetProto::RobotControlItem >&
      item() const;

  // string uuid = 1;
  void clear_uuid();
  static const int kUuidFieldNumber = 1;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // @@protoc_insertion_point(class_scope:NetProto.RobotControl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetProto::RobotControlItem > item_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  mutable int _cached_size_;
  friend struct protobuf_robot_5fcontrol_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RobotControlItem

// .NetProto.RobotControlItem.ControlType type = 1;
inline void RobotControlItem::clear_type() {
  type_ = 0;
}
inline ::NetProto::RobotControlItem_ControlType RobotControlItem::type() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotControlItem.type)
  return static_cast< ::NetProto::RobotControlItem_ControlType >(type_);
}
inline void RobotControlItem::set_type(::NetProto::RobotControlItem_ControlType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetProto.RobotControlItem.type)
}

// .NetProto.RobotControlItem.ControlLevel level = 2;
inline void RobotControlItem::clear_level() {
  level_ = 0;
}
inline ::NetProto::RobotControlItem_ControlLevel RobotControlItem::level() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotControlItem.level)
  return static_cast< ::NetProto::RobotControlItem_ControlLevel >(level_);
}
inline void RobotControlItem::set_level(::NetProto::RobotControlItem_ControlLevel value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:NetProto.RobotControlItem.level)
}

// -------------------------------------------------------------------

// RobotControl

// string uuid = 1;
inline void RobotControl::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RobotControl::uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotControl.uuid)
  return uuid_.GetNoArena();
}
inline void RobotControl::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.RobotControl.uuid)
}
#if LANG_CXX11
inline void RobotControl::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.RobotControl.uuid)
}
#endif
inline void RobotControl::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.RobotControl.uuid)
}
inline void RobotControl::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.RobotControl.uuid)
}
inline ::std::string* RobotControl::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.RobotControl.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RobotControl::release_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.RobotControl.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RobotControl::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.RobotControl.uuid)
}

// repeated .NetProto.RobotControlItem item = 2;
inline int RobotControl::item_size() const {
  return item_.size();
}
inline void RobotControl::clear_item() {
  item_.Clear();
}
inline const ::NetProto::RobotControlItem& RobotControl::item(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.RobotControl.item)
  return item_.Get(index);
}
inline ::NetProto::RobotControlItem* RobotControl::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.RobotControl.item)
  return item_.Mutable(index);
}
inline ::NetProto::RobotControlItem* RobotControl::add_item() {
  // @@protoc_insertion_point(field_add:NetProto.RobotControl.item)
  return item_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetProto::RobotControlItem >*
RobotControl::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.RobotControl.item)
  return &item_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetProto::RobotControlItem >&
RobotControl::item() const {
  // @@protoc_insertion_point(field_list:NetProto.RobotControl.item)
  return item_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace NetProto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::NetProto::RobotControlItem_ControlType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetProto::RobotControlItem_ControlType>() {
  return ::NetProto::RobotControlItem_ControlType_descriptor();
}
template <> struct is_proto_enum< ::NetProto::RobotControlItem_ControlLevel> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetProto::RobotControlItem_ControlLevel>() {
  return ::NetProto::RobotControlItem_ControlLevel_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_robot_5fcontrol_2eproto__INCLUDED
