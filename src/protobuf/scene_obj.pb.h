// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scene_obj.proto

#ifndef PROTOBUF_scene_5fobj_2eproto__INCLUDED
#define PROTOBUF_scene_5fobj_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace NetProto {
class SceneObj;
class SceneObjDefaultTypeInternal;
extern SceneObjDefaultTypeInternal _SceneObj_default_instance_;
}  // namespace NetProto

namespace NetProto {

namespace protobuf_scene_5fobj_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_scene_5fobj_2eproto

enum SceneObjType {
  GOODS = 0,
  ROLE = 1,
  SceneObjType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneObjType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneObjType_IsValid(int value);
const SceneObjType SceneObjType_MIN = GOODS;
const SceneObjType SceneObjType_MAX = ROLE;
const int SceneObjType_ARRAYSIZE = SceneObjType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneObjType_descriptor();
inline const ::std::string& SceneObjType_Name(SceneObjType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneObjType_descriptor(), value);
}
inline bool SceneObjType_Parse(
    const ::std::string& name, SceneObjType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneObjType>(
    SceneObjType_descriptor(), name, value);
}
// ===================================================================

class SceneObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.SceneObj) */ {
 public:
  SceneObj();
  virtual ~SceneObj();

  SceneObj(const SceneObj& from);

  inline SceneObj& operator=(const SceneObj& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneObj& default_instance();

  static inline const SceneObj* internal_default_instance() {
    return reinterpret_cast<const SceneObj*>(
               &_SceneObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SceneObj* other);

  // implements Message ----------------------------------------------

  inline SceneObj* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneObj& from);
  void MergeFrom(const SceneObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // .NetProto.SceneObjType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::NetProto::SceneObjType type() const;
  void set_type(::NetProto::SceneObjType value);

  // @@protoc_insertion_point(class_scope:NetProto.SceneObj)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  int type_;
  mutable int _cached_size_;
  friend struct protobuf_scene_5fobj_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneObj

// .NetProto.SceneObjType type = 1;
inline void SceneObj::clear_type() {
  type_ = 0;
}
inline ::NetProto::SceneObjType SceneObj::type() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneObj.type)
  return static_cast< ::NetProto::SceneObjType >(type_);
}
inline void SceneObj::set_type(::NetProto::SceneObjType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetProto.SceneObj.type)
}

// string uuid = 2;
inline void SceneObj::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SceneObj::uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.SceneObj.uuid)
  return uuid_.GetNoArena();
}
inline void SceneObj::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.SceneObj.uuid)
}
#if LANG_CXX11
inline void SceneObj::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.SceneObj.uuid)
}
#endif
inline void SceneObj::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.SceneObj.uuid)
}
inline void SceneObj::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.SceneObj.uuid)
}
inline ::std::string* SceneObj::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.SceneObj.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SceneObj::release_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.SceneObj.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SceneObj::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.SceneObj.uuid)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace NetProto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::NetProto::SceneObjType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetProto::SceneObjType>() {
  return ::NetProto::SceneObjType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_scene_5fobj_2eproto__INCLUDED
