// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: getexpress.proto

#ifndef PROTOBUF_getexpress_2eproto__INCLUDED
#define PROTOBUF_getexpress_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace NetProto {
class ExpressResp;
class ExpressRespDefaultTypeInternal;
extern ExpressRespDefaultTypeInternal _ExpressResp_default_instance_;
class GetExpressReq;
class GetExpressReqDefaultTypeInternal;
extern GetExpressReqDefaultTypeInternal _GetExpressReq_default_instance_;
}  // namespace NetProto

namespace NetProto {

namespace protobuf_getexpress_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_getexpress_2eproto

// ===================================================================

class GetExpressReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.GetExpressReq) */ {
 public:
  GetExpressReq();
  virtual ~GetExpressReq();

  GetExpressReq(const GetExpressReq& from);

  inline GetExpressReq& operator=(const GetExpressReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetExpressReq& default_instance();

  static inline const GetExpressReq* internal_default_instance() {
    return reinterpret_cast<const GetExpressReq*>(
               &_GetExpressReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(GetExpressReq* other);

  // implements Message ----------------------------------------------

  inline GetExpressReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetExpressReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetExpressReq& from);
  void MergeFrom(const GetExpressReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetExpressReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string express = 1;
  void clear_express();
  static const int kExpressFieldNumber = 1;
  const ::std::string& express() const;
  void set_express(const ::std::string& value);
  #if LANG_CXX11
  void set_express(::std::string&& value);
  #endif
  void set_express(const char* value);
  void set_express(const char* value, size_t size);
  ::std::string* mutable_express();
  ::std::string* release_express();
  void set_allocated_express(::std::string* express);

  // @@protoc_insertion_point(class_scope:NetProto.GetExpressReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr express_;
  mutable int _cached_size_;
  friend struct protobuf_getexpress_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExpressResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.ExpressResp) */ {
 public:
  ExpressResp();
  virtual ~ExpressResp();

  ExpressResp(const ExpressResp& from);

  inline ExpressResp& operator=(const ExpressResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExpressResp& default_instance();

  static inline const ExpressResp* internal_default_instance() {
    return reinterpret_cast<const ExpressResp*>(
               &_ExpressResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ExpressResp* other);

  // implements Message ----------------------------------------------

  inline ExpressResp* New() const PROTOBUF_FINAL { return New(NULL); }

  ExpressResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExpressResp& from);
  void MergeFrom(const ExpressResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExpressResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string obj_uuid = 1;
  void clear_obj_uuid();
  static const int kObjUuidFieldNumber = 1;
  const ::std::string& obj_uuid() const;
  void set_obj_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_obj_uuid(::std::string&& value);
  #endif
  void set_obj_uuid(const char* value);
  void set_obj_uuid(const char* value, size_t size);
  ::std::string* mutable_obj_uuid();
  ::std::string* release_obj_uuid();
  void set_allocated_obj_uuid(::std::string* obj_uuid);

  // string item_id = 2;
  void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  const ::std::string& item_id() const;
  void set_item_id(const ::std::string& value);
  #if LANG_CXX11
  void set_item_id(::std::string&& value);
  #endif
  void set_item_id(const char* value);
  void set_item_id(const char* value, size_t size);
  ::std::string* mutable_item_id();
  ::std::string* release_item_id();
  void set_allocated_item_id(::std::string* item_id);

  // @@protoc_insertion_point(class_scope:NetProto.ExpressResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr obj_uuid_;
  ::google::protobuf::internal::ArenaStringPtr item_id_;
  mutable int _cached_size_;
  friend struct protobuf_getexpress_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// GetExpressReq

// string express = 1;
inline void GetExpressReq::clear_express() {
  express_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetExpressReq::express() const {
  // @@protoc_insertion_point(field_get:NetProto.GetExpressReq.express)
  return express_.GetNoArena();
}
inline void GetExpressReq::set_express(const ::std::string& value) {
  
  express_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.GetExpressReq.express)
}
#if LANG_CXX11
inline void GetExpressReq::set_express(::std::string&& value) {
  
  express_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.GetExpressReq.express)
}
#endif
inline void GetExpressReq::set_express(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  express_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.GetExpressReq.express)
}
inline void GetExpressReq::set_express(const char* value, size_t size) {
  
  express_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.GetExpressReq.express)
}
inline ::std::string* GetExpressReq::mutable_express() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.GetExpressReq.express)
  return express_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetExpressReq::release_express() {
  // @@protoc_insertion_point(field_release:NetProto.GetExpressReq.express)
  
  return express_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetExpressReq::set_allocated_express(::std::string* express) {
  if (express != NULL) {
    
  } else {
    
  }
  express_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), express);
  // @@protoc_insertion_point(field_set_allocated:NetProto.GetExpressReq.express)
}

// -------------------------------------------------------------------

// ExpressResp

// string obj_uuid = 1;
inline void ExpressResp::clear_obj_uuid() {
  obj_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExpressResp::obj_uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.ExpressResp.obj_uuid)
  return obj_uuid_.GetNoArena();
}
inline void ExpressResp::set_obj_uuid(const ::std::string& value) {
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.ExpressResp.obj_uuid)
}
#if LANG_CXX11
inline void ExpressResp::set_obj_uuid(::std::string&& value) {
  
  obj_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.ExpressResp.obj_uuid)
}
#endif
inline void ExpressResp::set_obj_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.ExpressResp.obj_uuid)
}
inline void ExpressResp::set_obj_uuid(const char* value, size_t size) {
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.ExpressResp.obj_uuid)
}
inline ::std::string* ExpressResp::mutable_obj_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.ExpressResp.obj_uuid)
  return obj_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExpressResp::release_obj_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.ExpressResp.obj_uuid)
  
  return obj_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExpressResp::set_allocated_obj_uuid(::std::string* obj_uuid) {
  if (obj_uuid != NULL) {
    
  } else {
    
  }
  obj_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj_uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.ExpressResp.obj_uuid)
}

// string item_id = 2;
inline void ExpressResp::clear_item_id() {
  item_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExpressResp::item_id() const {
  // @@protoc_insertion_point(field_get:NetProto.ExpressResp.item_id)
  return item_id_.GetNoArena();
}
inline void ExpressResp::set_item_id(const ::std::string& value) {
  
  item_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.ExpressResp.item_id)
}
#if LANG_CXX11
inline void ExpressResp::set_item_id(::std::string&& value) {
  
  item_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.ExpressResp.item_id)
}
#endif
inline void ExpressResp::set_item_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  item_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.ExpressResp.item_id)
}
inline void ExpressResp::set_item_id(const char* value, size_t size) {
  
  item_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.ExpressResp.item_id)
}
inline ::std::string* ExpressResp::mutable_item_id() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.ExpressResp.item_id)
  return item_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExpressResp::release_item_id() {
  // @@protoc_insertion_point(field_release:NetProto.ExpressResp.item_id)
  
  return item_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExpressResp::set_allocated_item_id(::std::string* item_id) {
  if (item_id != NULL) {
    
  } else {
    
  }
  item_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_id);
  // @@protoc_insertion_point(field_set_allocated:NetProto.ExpressResp.item_id)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace NetProto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_getexpress_2eproto__INCLUDED
