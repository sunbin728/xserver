// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_head.proto

#ifndef PROTOBUF_msg_5fhead_2eproto__INCLUDED
#define PROTOBUF_msg_5fhead_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace NetProto {
class MsgHead;
class MsgHeadDefaultTypeInternal;
extern MsgHeadDefaultTypeInternal _MsgHead_default_instance_;
}  // namespace NetProto

namespace NetProto {

namespace protobuf_msg_5fhead_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_msg_5fhead_2eproto

enum MsgSrc {
  CLIENT = 0,
  MTS = 1,
  PW = 2,
  CENTER = 3,
  ACC = 4,
  MsgSrc_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MsgSrc_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MsgSrc_IsValid(int value);
const MsgSrc MsgSrc_MIN = CLIENT;
const MsgSrc MsgSrc_MAX = ACC;
const int MsgSrc_ARRAYSIZE = MsgSrc_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgSrc_descriptor();
inline const ::std::string& MsgSrc_Name(MsgSrc value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgSrc_descriptor(), value);
}
inline bool MsgSrc_Parse(
    const ::std::string& name, MsgSrc* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgSrc>(
    MsgSrc_descriptor(), name, value);
}
// ===================================================================

class MsgHead : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.MsgHead) */ {
 public:
  MsgHead();
  virtual ~MsgHead();

  MsgHead(const MsgHead& from);

  inline MsgHead& operator=(const MsgHead& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgHead& default_instance();

  static inline const MsgHead* internal_default_instance() {
    return reinterpret_cast<const MsgHead*>(
               &_MsgHead_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(MsgHead* other);

  // implements Message ----------------------------------------------

  inline MsgHead* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgHead* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgHead& from);
  void MergeFrom(const MsgHead& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgHead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string robot_id = 2;
  void clear_robot_id();
  static const int kRobotIdFieldNumber = 2;
  const ::std::string& robot_id() const;
  void set_robot_id(const ::std::string& value);
  #if LANG_CXX11
  void set_robot_id(::std::string&& value);
  #endif
  void set_robot_id(const char* value);
  void set_robot_id(const char* value, size_t size);
  ::std::string* mutable_robot_id();
  ::std::string* release_robot_id();
  void set_allocated_robot_id(::std::string* robot_id);

  // .NetProto.MsgSrc msg_src = 1;
  void clear_msg_src();
  static const int kMsgSrcFieldNumber = 1;
  ::NetProto::MsgSrc msg_src() const;
  void set_msg_src(::NetProto::MsgSrc value);

  // @@protoc_insertion_point(class_scope:NetProto.MsgHead)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr robot_id_;
  int msg_src_;
  mutable int _cached_size_;
  friend struct protobuf_msg_5fhead_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgHead

// .NetProto.MsgSrc msg_src = 1;
inline void MsgHead::clear_msg_src() {
  msg_src_ = 0;
}
inline ::NetProto::MsgSrc MsgHead::msg_src() const {
  // @@protoc_insertion_point(field_get:NetProto.MsgHead.msg_src)
  return static_cast< ::NetProto::MsgSrc >(msg_src_);
}
inline void MsgHead::set_msg_src(::NetProto::MsgSrc value) {
  
  msg_src_ = value;
  // @@protoc_insertion_point(field_set:NetProto.MsgHead.msg_src)
}

// string robot_id = 2;
inline void MsgHead::clear_robot_id() {
  robot_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgHead::robot_id() const {
  // @@protoc_insertion_point(field_get:NetProto.MsgHead.robot_id)
  return robot_id_.GetNoArena();
}
inline void MsgHead::set_robot_id(const ::std::string& value) {
  
  robot_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.MsgHead.robot_id)
}
#if LANG_CXX11
inline void MsgHead::set_robot_id(::std::string&& value) {
  
  robot_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.MsgHead.robot_id)
}
#endif
inline void MsgHead::set_robot_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  robot_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.MsgHead.robot_id)
}
inline void MsgHead::set_robot_id(const char* value, size_t size) {
  
  robot_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.MsgHead.robot_id)
}
inline ::std::string* MsgHead::mutable_robot_id() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.MsgHead.robot_id)
  return robot_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgHead::release_robot_id() {
  // @@protoc_insertion_point(field_release:NetProto.MsgHead.robot_id)
  
  return robot_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgHead::set_allocated_robot_id(::std::string* robot_id) {
  if (robot_id != NULL) {
    
  } else {
    
  }
  robot_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), robot_id);
  // @@protoc_insertion_point(field_set_allocated:NetProto.MsgHead.robot_id)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace NetProto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::NetProto::MsgSrc> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetProto::MsgSrc>() {
  return ::NetProto::MsgSrc_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msg_5fhead_2eproto__INCLUDED
