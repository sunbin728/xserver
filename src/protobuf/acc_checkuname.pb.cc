// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: acc_checkuname.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "acc_checkuname.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protocol {
class CheckUnameReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CheckUnameReq> {
} _CheckUnameReq_default_instance_;
class CheckUnameRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CheckUnameResp> {
} _CheckUnameResp_default_instance_;

namespace protobuf_acc_5fcheckuname_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckUnameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckUnameReq, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckUnameReq, seq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckUnameReq, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckUnameReq, uname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckUnameResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckUnameResp, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckUnameResp, seq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckUnameResp, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckUnameResp, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckUnameResp, uname_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(CheckUnameReq)},
  { 9, -1, sizeof(CheckUnameResp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckUnameReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckUnameResp_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "acc_checkuname.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _CheckUnameReq_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _CheckUnameResp_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protocol::protobuf_msg_5fhead_2eproto::InitDefaults();
  _CheckUnameReq_default_instance_.DefaultConstruct();
  _CheckUnameResp_default_instance_.DefaultConstruct();
  _CheckUnameReq_default_instance_.get_mutable()->header_ = const_cast< ::protocol::MsgHead*>(
      ::protocol::MsgHead::internal_default_instance());
  _CheckUnameResp_default_instance_.get_mutable()->header_ = const_cast< ::protocol::MsgHead*>(
      ::protocol::MsgHead::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\024acc_checkuname.proto\022\010protocol\032\016msg_he"
      "ad.proto\"]\n\rCheckUnameReq\022!\n\006Header\030\001 \001("
      "\0132\021.protocol.MsgHead\022\013\n\003Seq\030\002 \001(\t\022\r\n\005App"
      "id\030\003 \001(\t\022\r\n\005Uname\030\004 \001(\t\"l\n\016CheckUnameRes"
      "p\022!\n\006Header\030\001 \001(\0132\021.protocol.MsgHead\022\013\n\003"
      "Seq\030\002 \001(\t\022\016\n\006Result\030\003 \001(\003\022\013\n\003Msg\030\004 \001(\t\022\r"
      "\n\005Uname\030\005 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 261);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "acc_checkuname.proto", &protobuf_RegisterTypes);
  ::protocol::protobuf_msg_5fhead_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_acc_5fcheckuname_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckUnameReq::kHeaderFieldNumber;
const int CheckUnameReq::kSeqFieldNumber;
const int CheckUnameReq::kAppidFieldNumber;
const int CheckUnameReq::kUnameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckUnameReq::CheckUnameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_acc_5fcheckuname_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.CheckUnameReq)
}
CheckUnameReq::CheckUnameReq(const CheckUnameReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  seq_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.seq().size() > 0) {
    seq_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.seq_);
  }
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appid().size() > 0) {
    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  uname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uname().size() > 0) {
    uname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uname_);
  }
  if (from.has_header()) {
    header_ = new ::protocol::MsgHead(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:protocol.CheckUnameReq)
}

void CheckUnameReq::SharedCtor() {
  seq_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  header_ = NULL;
  _cached_size_ = 0;
}

CheckUnameReq::~CheckUnameReq() {
  // @@protoc_insertion_point(destructor:protocol.CheckUnameReq)
  SharedDtor();
}

void CheckUnameReq::SharedDtor() {
  seq_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete header_;
  }
}

void CheckUnameReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckUnameReq::descriptor() {
  protobuf_acc_5fcheckuname_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_acc_5fcheckuname_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckUnameReq& CheckUnameReq::default_instance() {
  protobuf_acc_5fcheckuname_2eproto::InitDefaults();
  return *internal_default_instance();
}

CheckUnameReq* CheckUnameReq::New(::google::protobuf::Arena* arena) const {
  CheckUnameReq* n = new CheckUnameReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckUnameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.CheckUnameReq)
  seq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}

bool CheckUnameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.CheckUnameReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protocol.MsgHead Header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Seq = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_seq()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->seq().data(), this->seq().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protocol.CheckUnameReq.Seq"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Appid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appid().data(), this->appid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protocol.CheckUnameReq.Appid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Uname = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uname().data(), this->uname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protocol.CheckUnameReq.Uname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.CheckUnameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.CheckUnameReq)
  return false;
#undef DO_
}

void CheckUnameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.CheckUnameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.MsgHead Header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // string Seq = 2;
  if (this->seq().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->seq().data(), this->seq().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol.CheckUnameReq.Seq");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->seq(), output);
  }

  // string Appid = 3;
  if (this->appid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol.CheckUnameReq.Appid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->appid(), output);
  }

  // string Uname = 4;
  if (this->uname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uname().data(), this->uname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol.CheckUnameReq.Uname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->uname(), output);
  }

  // @@protoc_insertion_point(serialize_end:protocol.CheckUnameReq)
}

::google::protobuf::uint8* CheckUnameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.CheckUnameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.MsgHead Header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_, deterministic, target);
  }

  // string Seq = 2;
  if (this->seq().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->seq().data(), this->seq().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol.CheckUnameReq.Seq");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->seq(), target);
  }

  // string Appid = 3;
  if (this->appid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol.CheckUnameReq.Appid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->appid(), target);
  }

  // string Uname = 4;
  if (this->uname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uname().data(), this->uname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol.CheckUnameReq.Uname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->uname(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:protocol.CheckUnameReq)
  return target;
}

size_t CheckUnameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.CheckUnameReq)
  size_t total_size = 0;

  // string Seq = 2;
  if (this->seq().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->seq());
  }

  // string Appid = 3;
  if (this->appid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appid());
  }

  // string Uname = 4;
  if (this->uname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uname());
  }

  // .protocol.MsgHead Header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckUnameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.CheckUnameReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckUnameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckUnameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.CheckUnameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.CheckUnameReq)
    MergeFrom(*source);
  }
}

void CheckUnameReq::MergeFrom(const CheckUnameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.CheckUnameReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.seq().size() > 0) {

    seq_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.seq_);
  }
  if (from.appid().size() > 0) {

    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  if (from.uname().size() > 0) {

    uname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uname_);
  }
  if (from.has_header()) {
    mutable_header()->::protocol::MsgHead::MergeFrom(from.header());
  }
}

void CheckUnameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.CheckUnameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckUnameReq::CopyFrom(const CheckUnameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.CheckUnameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckUnameReq::IsInitialized() const {
  return true;
}

void CheckUnameReq::Swap(CheckUnameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckUnameReq::InternalSwap(CheckUnameReq* other) {
  seq_.Swap(&other->seq_);
  appid_.Swap(&other->appid_);
  uname_.Swap(&other->uname_);
  std::swap(header_, other->header_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckUnameReq::GetMetadata() const {
  protobuf_acc_5fcheckuname_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_acc_5fcheckuname_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckUnameReq

// .protocol.MsgHead Header = 1;
bool CheckUnameReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
void CheckUnameReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::protocol::MsgHead& CheckUnameReq::header() const {
  // @@protoc_insertion_point(field_get:protocol.CheckUnameReq.Header)
  return header_ != NULL ? *header_
                         : *::protocol::MsgHead::internal_default_instance();
}
::protocol::MsgHead* CheckUnameReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::protocol::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:protocol.CheckUnameReq.Header)
  return header_;
}
::protocol::MsgHead* CheckUnameReq::release_header() {
  // @@protoc_insertion_point(field_release:protocol.CheckUnameReq.Header)
  
  ::protocol::MsgHead* temp = header_;
  header_ = NULL;
  return temp;
}
void CheckUnameReq::set_allocated_header(::protocol::MsgHead* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.CheckUnameReq.Header)
}

// string Seq = 2;
void CheckUnameReq::clear_seq() {
  seq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CheckUnameReq::seq() const {
  // @@protoc_insertion_point(field_get:protocol.CheckUnameReq.Seq)
  return seq_.GetNoArena();
}
void CheckUnameReq::set_seq(const ::std::string& value) {
  
  seq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.CheckUnameReq.Seq)
}
#if LANG_CXX11
void CheckUnameReq::set_seq(::std::string&& value) {
  
  seq_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.CheckUnameReq.Seq)
}
#endif
void CheckUnameReq::set_seq(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  seq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.CheckUnameReq.Seq)
}
void CheckUnameReq::set_seq(const char* value, size_t size) {
  
  seq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.CheckUnameReq.Seq)
}
::std::string* CheckUnameReq::mutable_seq() {
  
  // @@protoc_insertion_point(field_mutable:protocol.CheckUnameReq.Seq)
  return seq_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckUnameReq::release_seq() {
  // @@protoc_insertion_point(field_release:protocol.CheckUnameReq.Seq)
  
  return seq_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckUnameReq::set_allocated_seq(::std::string* seq) {
  if (seq != NULL) {
    
  } else {
    
  }
  seq_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), seq);
  // @@protoc_insertion_point(field_set_allocated:protocol.CheckUnameReq.Seq)
}

// string Appid = 3;
void CheckUnameReq::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CheckUnameReq::appid() const {
  // @@protoc_insertion_point(field_get:protocol.CheckUnameReq.Appid)
  return appid_.GetNoArena();
}
void CheckUnameReq::set_appid(const ::std::string& value) {
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.CheckUnameReq.Appid)
}
#if LANG_CXX11
void CheckUnameReq::set_appid(::std::string&& value) {
  
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.CheckUnameReq.Appid)
}
#endif
void CheckUnameReq::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.CheckUnameReq.Appid)
}
void CheckUnameReq::set_appid(const char* value, size_t size) {
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.CheckUnameReq.Appid)
}
::std::string* CheckUnameReq::mutable_appid() {
  
  // @@protoc_insertion_point(field_mutable:protocol.CheckUnameReq.Appid)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckUnameReq::release_appid() {
  // @@protoc_insertion_point(field_release:protocol.CheckUnameReq.Appid)
  
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckUnameReq::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    
  } else {
    
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:protocol.CheckUnameReq.Appid)
}

// string Uname = 4;
void CheckUnameReq::clear_uname() {
  uname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CheckUnameReq::uname() const {
  // @@protoc_insertion_point(field_get:protocol.CheckUnameReq.Uname)
  return uname_.GetNoArena();
}
void CheckUnameReq::set_uname(const ::std::string& value) {
  
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.CheckUnameReq.Uname)
}
#if LANG_CXX11
void CheckUnameReq::set_uname(::std::string&& value) {
  
  uname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.CheckUnameReq.Uname)
}
#endif
void CheckUnameReq::set_uname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.CheckUnameReq.Uname)
}
void CheckUnameReq::set_uname(const char* value, size_t size) {
  
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.CheckUnameReq.Uname)
}
::std::string* CheckUnameReq::mutable_uname() {
  
  // @@protoc_insertion_point(field_mutable:protocol.CheckUnameReq.Uname)
  return uname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckUnameReq::release_uname() {
  // @@protoc_insertion_point(field_release:protocol.CheckUnameReq.Uname)
  
  return uname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckUnameReq::set_allocated_uname(::std::string* uname) {
  if (uname != NULL) {
    
  } else {
    
  }
  uname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uname);
  // @@protoc_insertion_point(field_set_allocated:protocol.CheckUnameReq.Uname)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckUnameResp::kHeaderFieldNumber;
const int CheckUnameResp::kSeqFieldNumber;
const int CheckUnameResp::kResultFieldNumber;
const int CheckUnameResp::kMsgFieldNumber;
const int CheckUnameResp::kUnameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckUnameResp::CheckUnameResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_acc_5fcheckuname_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.CheckUnameResp)
}
CheckUnameResp::CheckUnameResp(const CheckUnameResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  seq_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.seq().size() > 0) {
    seq_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.seq_);
  }
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  uname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uname().size() > 0) {
    uname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uname_);
  }
  if (from.has_header()) {
    header_ = new ::protocol::MsgHead(*from.header_);
  } else {
    header_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:protocol.CheckUnameResp)
}

void CheckUnameResp::SharedCtor() {
  seq_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&header_) + sizeof(result_));
  _cached_size_ = 0;
}

CheckUnameResp::~CheckUnameResp() {
  // @@protoc_insertion_point(destructor:protocol.CheckUnameResp)
  SharedDtor();
}

void CheckUnameResp::SharedDtor() {
  seq_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete header_;
  }
}

void CheckUnameResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckUnameResp::descriptor() {
  protobuf_acc_5fcheckuname_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_acc_5fcheckuname_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckUnameResp& CheckUnameResp::default_instance() {
  protobuf_acc_5fcheckuname_2eproto::InitDefaults();
  return *internal_default_instance();
}

CheckUnameResp* CheckUnameResp::New(::google::protobuf::Arena* arena) const {
  CheckUnameResp* n = new CheckUnameResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckUnameResp::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.CheckUnameResp)
  seq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  result_ = GOOGLE_LONGLONG(0);
}

bool CheckUnameResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.CheckUnameResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protocol.MsgHead Header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Seq = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_seq()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->seq().data(), this->seq().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protocol.CheckUnameResp.Seq"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 Result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Msg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protocol.CheckUnameResp.Msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Uname = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uname().data(), this->uname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protocol.CheckUnameResp.Uname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.CheckUnameResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.CheckUnameResp)
  return false;
#undef DO_
}

void CheckUnameResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.CheckUnameResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.MsgHead Header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // string Seq = 2;
  if (this->seq().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->seq().data(), this->seq().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol.CheckUnameResp.Seq");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->seq(), output);
  }

  // int64 Result = 3;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->result(), output);
  }

  // string Msg = 4;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol.CheckUnameResp.Msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->msg(), output);
  }

  // string Uname = 5;
  if (this->uname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uname().data(), this->uname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol.CheckUnameResp.Uname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->uname(), output);
  }

  // @@protoc_insertion_point(serialize_end:protocol.CheckUnameResp)
}

::google::protobuf::uint8* CheckUnameResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.CheckUnameResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protocol.MsgHead Header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_, deterministic, target);
  }

  // string Seq = 2;
  if (this->seq().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->seq().data(), this->seq().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol.CheckUnameResp.Seq");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->seq(), target);
  }

  // int64 Result = 3;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->result(), target);
  }

  // string Msg = 4;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol.CheckUnameResp.Msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->msg(), target);
  }

  // string Uname = 5;
  if (this->uname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uname().data(), this->uname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol.CheckUnameResp.Uname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->uname(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:protocol.CheckUnameResp)
  return target;
}

size_t CheckUnameResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.CheckUnameResp)
  size_t total_size = 0;

  // string Seq = 2;
  if (this->seq().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->seq());
  }

  // string Msg = 4;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // string Uname = 5;
  if (this->uname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uname());
  }

  // .protocol.MsgHead Header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // int64 Result = 3;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckUnameResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.CheckUnameResp)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckUnameResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckUnameResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.CheckUnameResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.CheckUnameResp)
    MergeFrom(*source);
  }
}

void CheckUnameResp::MergeFrom(const CheckUnameResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.CheckUnameResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.seq().size() > 0) {

    seq_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.seq_);
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.uname().size() > 0) {

    uname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uname_);
  }
  if (from.has_header()) {
    mutable_header()->::protocol::MsgHead::MergeFrom(from.header());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void CheckUnameResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.CheckUnameResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckUnameResp::CopyFrom(const CheckUnameResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.CheckUnameResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckUnameResp::IsInitialized() const {
  return true;
}

void CheckUnameResp::Swap(CheckUnameResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckUnameResp::InternalSwap(CheckUnameResp* other) {
  seq_.Swap(&other->seq_);
  msg_.Swap(&other->msg_);
  uname_.Swap(&other->uname_);
  std::swap(header_, other->header_);
  std::swap(result_, other->result_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckUnameResp::GetMetadata() const {
  protobuf_acc_5fcheckuname_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_acc_5fcheckuname_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckUnameResp

// .protocol.MsgHead Header = 1;
bool CheckUnameResp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
void CheckUnameResp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::protocol::MsgHead& CheckUnameResp::header() const {
  // @@protoc_insertion_point(field_get:protocol.CheckUnameResp.Header)
  return header_ != NULL ? *header_
                         : *::protocol::MsgHead::internal_default_instance();
}
::protocol::MsgHead* CheckUnameResp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::protocol::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:protocol.CheckUnameResp.Header)
  return header_;
}
::protocol::MsgHead* CheckUnameResp::release_header() {
  // @@protoc_insertion_point(field_release:protocol.CheckUnameResp.Header)
  
  ::protocol::MsgHead* temp = header_;
  header_ = NULL;
  return temp;
}
void CheckUnameResp::set_allocated_header(::protocol::MsgHead* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.CheckUnameResp.Header)
}

// string Seq = 2;
void CheckUnameResp::clear_seq() {
  seq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CheckUnameResp::seq() const {
  // @@protoc_insertion_point(field_get:protocol.CheckUnameResp.Seq)
  return seq_.GetNoArena();
}
void CheckUnameResp::set_seq(const ::std::string& value) {
  
  seq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.CheckUnameResp.Seq)
}
#if LANG_CXX11
void CheckUnameResp::set_seq(::std::string&& value) {
  
  seq_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.CheckUnameResp.Seq)
}
#endif
void CheckUnameResp::set_seq(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  seq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.CheckUnameResp.Seq)
}
void CheckUnameResp::set_seq(const char* value, size_t size) {
  
  seq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.CheckUnameResp.Seq)
}
::std::string* CheckUnameResp::mutable_seq() {
  
  // @@protoc_insertion_point(field_mutable:protocol.CheckUnameResp.Seq)
  return seq_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckUnameResp::release_seq() {
  // @@protoc_insertion_point(field_release:protocol.CheckUnameResp.Seq)
  
  return seq_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckUnameResp::set_allocated_seq(::std::string* seq) {
  if (seq != NULL) {
    
  } else {
    
  }
  seq_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), seq);
  // @@protoc_insertion_point(field_set_allocated:protocol.CheckUnameResp.Seq)
}

// int64 Result = 3;
void CheckUnameResp::clear_result() {
  result_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 CheckUnameResp::result() const {
  // @@protoc_insertion_point(field_get:protocol.CheckUnameResp.Result)
  return result_;
}
void CheckUnameResp::set_result(::google::protobuf::int64 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:protocol.CheckUnameResp.Result)
}

// string Msg = 4;
void CheckUnameResp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CheckUnameResp::msg() const {
  // @@protoc_insertion_point(field_get:protocol.CheckUnameResp.Msg)
  return msg_.GetNoArena();
}
void CheckUnameResp::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.CheckUnameResp.Msg)
}
#if LANG_CXX11
void CheckUnameResp::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.CheckUnameResp.Msg)
}
#endif
void CheckUnameResp::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.CheckUnameResp.Msg)
}
void CheckUnameResp::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.CheckUnameResp.Msg)
}
::std::string* CheckUnameResp::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:protocol.CheckUnameResp.Msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckUnameResp::release_msg() {
  // @@protoc_insertion_point(field_release:protocol.CheckUnameResp.Msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckUnameResp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:protocol.CheckUnameResp.Msg)
}

// string Uname = 5;
void CheckUnameResp::clear_uname() {
  uname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CheckUnameResp::uname() const {
  // @@protoc_insertion_point(field_get:protocol.CheckUnameResp.Uname)
  return uname_.GetNoArena();
}
void CheckUnameResp::set_uname(const ::std::string& value) {
  
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.CheckUnameResp.Uname)
}
#if LANG_CXX11
void CheckUnameResp::set_uname(::std::string&& value) {
  
  uname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.CheckUnameResp.Uname)
}
#endif
void CheckUnameResp::set_uname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.CheckUnameResp.Uname)
}
void CheckUnameResp::set_uname(const char* value, size_t size) {
  
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.CheckUnameResp.Uname)
}
::std::string* CheckUnameResp::mutable_uname() {
  
  // @@protoc_insertion_point(field_mutable:protocol.CheckUnameResp.Uname)
  return uname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckUnameResp::release_uname() {
  // @@protoc_insertion_point(field_release:protocol.CheckUnameResp.Uname)
  
  return uname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckUnameResp::set_allocated_uname(::std::string* uname) {
  if (uname != NULL) {
    
  } else {
    
  }
  uname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uname);
  // @@protoc_insertion_point(field_set_allocated:protocol.CheckUnameResp.Uname)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol

// @@protoc_insertion_point(global_scope)
