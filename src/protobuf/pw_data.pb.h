// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pw_data.proto

#ifndef PROTOBUF_pw_5fdata_2eproto__INCLUDED
#define PROTOBUF_pw_5fdata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "msg_head.pb.h"
#include <google/protobuf/any.pb.h>
// @@protoc_insertion_point(includes)
namespace NetProto {
class GS2PWGetPWData;
class GS2PWGetPWDataDefaultTypeInternal;
extern GS2PWGetPWDataDefaultTypeInternal _GS2PWGetPWData_default_instance_;
class MsgHead;
class MsgHeadDefaultTypeInternal;
extern MsgHeadDefaultTypeInternal _MsgHead_default_instance_;
class PW2GSNotifyPWData;
class PW2GSNotifyPWDataDefaultTypeInternal;
extern PW2GSNotifyPWDataDefaultTypeInternal _PW2GSNotifyPWData_default_instance_;
class PWDataRobotInfoParam;
class PWDataRobotInfoParamDefaultTypeInternal;
extern PWDataRobotInfoParamDefaultTypeInternal _PWDataRobotInfoParam_default_instance_;
class PWDataSceneIDParam;
class PWDataSceneIDParamDefaultTypeInternal;
extern PWDataSceneIDParamDefaultTypeInternal _PWDataSceneIDParam_default_instance_;
class PWDataSceneMapParam;
class PWDataSceneMapParamDefaultTypeInternal;
extern PWDataSceneMapParamDefaultTypeInternal _PWDataSceneMapParam_default_instance_;
class RobotSceneID;
class RobotSceneIDDefaultTypeInternal;
extern RobotSceneIDDefaultTypeInternal _RobotSceneID_default_instance_;
}  // namespace NetProto
namespace google {
namespace protobuf {
class Any;
class AnyDefaultTypeInternal;
extern AnyDefaultTypeInternal _Any_default_instance_;
}  // namespace protobuf
}  // namespace google

namespace NetProto {

namespace protobuf_pw_5fdata_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_pw_5fdata_2eproto

enum PWDataType {
  PW_DATA_TYPE_UNKNOWN = 0,
  PW_DATA_TYPE_SCENE_ID = 1,
  PW_DATA_TYPE_ROBOT_INFO = 2,
  PW_DATA_TYPE_SCENE_MAP = 3,
  PWDataType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PWDataType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PWDataType_IsValid(int value);
const PWDataType PWDataType_MIN = PW_DATA_TYPE_UNKNOWN;
const PWDataType PWDataType_MAX = PW_DATA_TYPE_SCENE_MAP;
const int PWDataType_ARRAYSIZE = PWDataType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PWDataType_descriptor();
inline const ::std::string& PWDataType_Name(PWDataType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PWDataType_descriptor(), value);
}
inline bool PWDataType_Parse(
    const ::std::string& name, PWDataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PWDataType>(
    PWDataType_descriptor(), name, value);
}
// ===================================================================

class PWDataSceneIDParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.PWDataSceneIDParam) */ {
 public:
  PWDataSceneIDParam();
  virtual ~PWDataSceneIDParam();

  PWDataSceneIDParam(const PWDataSceneIDParam& from);

  inline PWDataSceneIDParam& operator=(const PWDataSceneIDParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PWDataSceneIDParam& default_instance();

  static inline const PWDataSceneIDParam* internal_default_instance() {
    return reinterpret_cast<const PWDataSceneIDParam*>(
               &_PWDataSceneIDParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PWDataSceneIDParam* other);

  // implements Message ----------------------------------------------

  inline PWDataSceneIDParam* New() const PROTOBUF_FINAL { return New(NULL); }

  PWDataSceneIDParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PWDataSceneIDParam& from);
  void MergeFrom(const PWDataSceneIDParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PWDataSceneIDParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string robot_uuid = 1;
  void clear_robot_uuid();
  static const int kRobotUuidFieldNumber = 1;
  const ::std::string& robot_uuid() const;
  void set_robot_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_robot_uuid(::std::string&& value);
  #endif
  void set_robot_uuid(const char* value);
  void set_robot_uuid(const char* value, size_t size);
  ::std::string* mutable_robot_uuid();
  ::std::string* release_robot_uuid();
  void set_allocated_robot_uuid(::std::string* robot_uuid);

  // @@protoc_insertion_point(class_scope:NetProto.PWDataSceneIDParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr robot_uuid_;
  mutable int _cached_size_;
  friend struct protobuf_pw_5fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PWDataRobotInfoParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.PWDataRobotInfoParam) */ {
 public:
  PWDataRobotInfoParam();
  virtual ~PWDataRobotInfoParam();

  PWDataRobotInfoParam(const PWDataRobotInfoParam& from);

  inline PWDataRobotInfoParam& operator=(const PWDataRobotInfoParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PWDataRobotInfoParam& default_instance();

  static inline const PWDataRobotInfoParam* internal_default_instance() {
    return reinterpret_cast<const PWDataRobotInfoParam*>(
               &_PWDataRobotInfoParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(PWDataRobotInfoParam* other);

  // implements Message ----------------------------------------------

  inline PWDataRobotInfoParam* New() const PROTOBUF_FINAL { return New(NULL); }

  PWDataRobotInfoParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PWDataRobotInfoParam& from);
  void MergeFrom(const PWDataRobotInfoParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PWDataRobotInfoParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string robot_uuid = 1;
  void clear_robot_uuid();
  static const int kRobotUuidFieldNumber = 1;
  const ::std::string& robot_uuid() const;
  void set_robot_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_robot_uuid(::std::string&& value);
  #endif
  void set_robot_uuid(const char* value);
  void set_robot_uuid(const char* value, size_t size);
  ::std::string* mutable_robot_uuid();
  ::std::string* release_robot_uuid();
  void set_allocated_robot_uuid(::std::string* robot_uuid);

  // @@protoc_insertion_point(class_scope:NetProto.PWDataRobotInfoParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr robot_uuid_;
  mutable int _cached_size_;
  friend struct protobuf_pw_5fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PWDataSceneMapParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.PWDataSceneMapParam) */ {
 public:
  PWDataSceneMapParam();
  virtual ~PWDataSceneMapParam();

  PWDataSceneMapParam(const PWDataSceneMapParam& from);

  inline PWDataSceneMapParam& operator=(const PWDataSceneMapParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PWDataSceneMapParam& default_instance();

  static inline const PWDataSceneMapParam* internal_default_instance() {
    return reinterpret_cast<const PWDataSceneMapParam*>(
               &_PWDataSceneMapParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(PWDataSceneMapParam* other);

  // implements Message ----------------------------------------------

  inline PWDataSceneMapParam* New() const PROTOBUF_FINAL { return New(NULL); }

  PWDataSceneMapParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PWDataSceneMapParam& from);
  void MergeFrom(const PWDataSceneMapParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PWDataSceneMapParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  const ::std::string& scene_id() const;
  void set_scene_id(const ::std::string& value);
  #if LANG_CXX11
  void set_scene_id(::std::string&& value);
  #endif
  void set_scene_id(const char* value);
  void set_scene_id(const char* value, size_t size);
  ::std::string* mutable_scene_id();
  ::std::string* release_scene_id();
  void set_allocated_scene_id(::std::string* scene_id);

  // @@protoc_insertion_point(class_scope:NetProto.PWDataSceneMapParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_pw_5fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GS2PWGetPWData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.GS2PWGetPWData) */ {
 public:
  GS2PWGetPWData();
  virtual ~GS2PWGetPWData();

  GS2PWGetPWData(const GS2PWGetPWData& from);

  inline GS2PWGetPWData& operator=(const GS2PWGetPWData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS2PWGetPWData& default_instance();

  static inline const GS2PWGetPWData* internal_default_instance() {
    return reinterpret_cast<const GS2PWGetPWData*>(
               &_GS2PWGetPWData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(GS2PWGetPWData* other);

  // implements Message ----------------------------------------------

  inline GS2PWGetPWData* New() const PROTOBUF_FINAL { return New(NULL); }

  GS2PWGetPWData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GS2PWGetPWData& from);
  void MergeFrom(const GS2PWGetPWData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GS2PWGetPWData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .NetProto.MsgHead msg_head = 1;
  bool has_msg_head() const;
  void clear_msg_head();
  static const int kMsgHeadFieldNumber = 1;
  const ::NetProto::MsgHead& msg_head() const;
  ::NetProto::MsgHead* mutable_msg_head();
  ::NetProto::MsgHead* release_msg_head();
  void set_allocated_msg_head(::NetProto::MsgHead* msg_head);

  // .google.protobuf.Any data = 3;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::google::protobuf::Any& data() const;
  ::google::protobuf::Any* mutable_data();
  ::google::protobuf::Any* release_data();
  void set_allocated_data(::google::protobuf::Any* data);

  // .NetProto.PWDataType type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::NetProto::PWDataType type() const;
  void set_type(::NetProto::PWDataType value);

  // @@protoc_insertion_point(class_scope:NetProto.GS2PWGetPWData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetProto::MsgHead* msg_head_;
  ::google::protobuf::Any* data_;
  int type_;
  mutable int _cached_size_;
  friend struct protobuf_pw_5fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RobotSceneID : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.RobotSceneID) */ {
 public:
  RobotSceneID();
  virtual ~RobotSceneID();

  RobotSceneID(const RobotSceneID& from);

  inline RobotSceneID& operator=(const RobotSceneID& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotSceneID& default_instance();

  static inline const RobotSceneID* internal_default_instance() {
    return reinterpret_cast<const RobotSceneID*>(
               &_RobotSceneID_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(RobotSceneID* other);

  // implements Message ----------------------------------------------

  inline RobotSceneID* New() const PROTOBUF_FINAL { return New(NULL); }

  RobotSceneID* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RobotSceneID& from);
  void MergeFrom(const RobotSceneID& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RobotSceneID* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string robot_uuid = 1;
  void clear_robot_uuid();
  static const int kRobotUuidFieldNumber = 1;
  const ::std::string& robot_uuid() const;
  void set_robot_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_robot_uuid(::std::string&& value);
  #endif
  void set_robot_uuid(const char* value);
  void set_robot_uuid(const char* value, size_t size);
  ::std::string* mutable_robot_uuid();
  ::std::string* release_robot_uuid();
  void set_allocated_robot_uuid(::std::string* robot_uuid);

  // string scene_id = 2;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 2;
  const ::std::string& scene_id() const;
  void set_scene_id(const ::std::string& value);
  #if LANG_CXX11
  void set_scene_id(::std::string&& value);
  #endif
  void set_scene_id(const char* value);
  void set_scene_id(const char* value, size_t size);
  ::std::string* mutable_scene_id();
  ::std::string* release_scene_id();
  void set_allocated_scene_id(::std::string* scene_id);

  // @@protoc_insertion_point(class_scope:NetProto.RobotSceneID)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr robot_uuid_;
  ::google::protobuf::internal::ArenaStringPtr scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_pw_5fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PW2GSNotifyPWData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.PW2GSNotifyPWData) */ {
 public:
  PW2GSNotifyPWData();
  virtual ~PW2GSNotifyPWData();

  PW2GSNotifyPWData(const PW2GSNotifyPWData& from);

  inline PW2GSNotifyPWData& operator=(const PW2GSNotifyPWData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PW2GSNotifyPWData& default_instance();

  static inline const PW2GSNotifyPWData* internal_default_instance() {
    return reinterpret_cast<const PW2GSNotifyPWData*>(
               &_PW2GSNotifyPWData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(PW2GSNotifyPWData* other);

  // implements Message ----------------------------------------------

  inline PW2GSNotifyPWData* New() const PROTOBUF_FINAL { return New(NULL); }

  PW2GSNotifyPWData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PW2GSNotifyPWData& from);
  void MergeFrom(const PW2GSNotifyPWData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PW2GSNotifyPWData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .NetProto.MsgHead msg_head = 1;
  bool has_msg_head() const;
  void clear_msg_head();
  static const int kMsgHeadFieldNumber = 1;
  const ::NetProto::MsgHead& msg_head() const;
  ::NetProto::MsgHead* mutable_msg_head();
  ::NetProto::MsgHead* release_msg_head();
  void set_allocated_msg_head(::NetProto::MsgHead* msg_head);

  // .google.protobuf.Any data = 3;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::google::protobuf::Any& data() const;
  ::google::protobuf::Any* mutable_data();
  ::google::protobuf::Any* release_data();
  void set_allocated_data(::google::protobuf::Any* data);

  // .NetProto.PWDataType type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::NetProto::PWDataType type() const;
  void set_type(::NetProto::PWDataType value);

  // @@protoc_insertion_point(class_scope:NetProto.PW2GSNotifyPWData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetProto::MsgHead* msg_head_;
  ::google::protobuf::Any* data_;
  int type_;
  mutable int _cached_size_;
  friend struct protobuf_pw_5fdata_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PWDataSceneIDParam

// string robot_uuid = 1;
inline void PWDataSceneIDParam::clear_robot_uuid() {
  robot_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PWDataSceneIDParam::robot_uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.PWDataSceneIDParam.robot_uuid)
  return robot_uuid_.GetNoArena();
}
inline void PWDataSceneIDParam::set_robot_uuid(const ::std::string& value) {
  
  robot_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.PWDataSceneIDParam.robot_uuid)
}
#if LANG_CXX11
inline void PWDataSceneIDParam::set_robot_uuid(::std::string&& value) {
  
  robot_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.PWDataSceneIDParam.robot_uuid)
}
#endif
inline void PWDataSceneIDParam::set_robot_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  robot_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.PWDataSceneIDParam.robot_uuid)
}
inline void PWDataSceneIDParam::set_robot_uuid(const char* value, size_t size) {
  
  robot_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.PWDataSceneIDParam.robot_uuid)
}
inline ::std::string* PWDataSceneIDParam::mutable_robot_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.PWDataSceneIDParam.robot_uuid)
  return robot_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PWDataSceneIDParam::release_robot_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.PWDataSceneIDParam.robot_uuid)
  
  return robot_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PWDataSceneIDParam::set_allocated_robot_uuid(::std::string* robot_uuid) {
  if (robot_uuid != NULL) {
    
  } else {
    
  }
  robot_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), robot_uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.PWDataSceneIDParam.robot_uuid)
}

// -------------------------------------------------------------------

// PWDataRobotInfoParam

// string robot_uuid = 1;
inline void PWDataRobotInfoParam::clear_robot_uuid() {
  robot_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PWDataRobotInfoParam::robot_uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.PWDataRobotInfoParam.robot_uuid)
  return robot_uuid_.GetNoArena();
}
inline void PWDataRobotInfoParam::set_robot_uuid(const ::std::string& value) {
  
  robot_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.PWDataRobotInfoParam.robot_uuid)
}
#if LANG_CXX11
inline void PWDataRobotInfoParam::set_robot_uuid(::std::string&& value) {
  
  robot_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.PWDataRobotInfoParam.robot_uuid)
}
#endif
inline void PWDataRobotInfoParam::set_robot_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  robot_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.PWDataRobotInfoParam.robot_uuid)
}
inline void PWDataRobotInfoParam::set_robot_uuid(const char* value, size_t size) {
  
  robot_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.PWDataRobotInfoParam.robot_uuid)
}
inline ::std::string* PWDataRobotInfoParam::mutable_robot_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.PWDataRobotInfoParam.robot_uuid)
  return robot_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PWDataRobotInfoParam::release_robot_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.PWDataRobotInfoParam.robot_uuid)
  
  return robot_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PWDataRobotInfoParam::set_allocated_robot_uuid(::std::string* robot_uuid) {
  if (robot_uuid != NULL) {
    
  } else {
    
  }
  robot_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), robot_uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.PWDataRobotInfoParam.robot_uuid)
}

// -------------------------------------------------------------------

// PWDataSceneMapParam

// string scene_id = 1;
inline void PWDataSceneMapParam::clear_scene_id() {
  scene_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PWDataSceneMapParam::scene_id() const {
  // @@protoc_insertion_point(field_get:NetProto.PWDataSceneMapParam.scene_id)
  return scene_id_.GetNoArena();
}
inline void PWDataSceneMapParam::set_scene_id(const ::std::string& value) {
  
  scene_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.PWDataSceneMapParam.scene_id)
}
#if LANG_CXX11
inline void PWDataSceneMapParam::set_scene_id(::std::string&& value) {
  
  scene_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.PWDataSceneMapParam.scene_id)
}
#endif
inline void PWDataSceneMapParam::set_scene_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  scene_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.PWDataSceneMapParam.scene_id)
}
inline void PWDataSceneMapParam::set_scene_id(const char* value, size_t size) {
  
  scene_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.PWDataSceneMapParam.scene_id)
}
inline ::std::string* PWDataSceneMapParam::mutable_scene_id() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.PWDataSceneMapParam.scene_id)
  return scene_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PWDataSceneMapParam::release_scene_id() {
  // @@protoc_insertion_point(field_release:NetProto.PWDataSceneMapParam.scene_id)
  
  return scene_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PWDataSceneMapParam::set_allocated_scene_id(::std::string* scene_id) {
  if (scene_id != NULL) {
    
  } else {
    
  }
  scene_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scene_id);
  // @@protoc_insertion_point(field_set_allocated:NetProto.PWDataSceneMapParam.scene_id)
}

// -------------------------------------------------------------------

// GS2PWGetPWData

// .NetProto.MsgHead msg_head = 1;
inline bool GS2PWGetPWData::has_msg_head() const {
  return this != internal_default_instance() && msg_head_ != NULL;
}
inline void GS2PWGetPWData::clear_msg_head() {
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) delete msg_head_;
  msg_head_ = NULL;
}
inline const ::NetProto::MsgHead& GS2PWGetPWData::msg_head() const {
  // @@protoc_insertion_point(field_get:NetProto.GS2PWGetPWData.msg_head)
  return msg_head_ != NULL ? *msg_head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
inline ::NetProto::MsgHead* GS2PWGetPWData::mutable_msg_head() {
  
  if (msg_head_ == NULL) {
    msg_head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.GS2PWGetPWData.msg_head)
  return msg_head_;
}
inline ::NetProto::MsgHead* GS2PWGetPWData::release_msg_head() {
  // @@protoc_insertion_point(field_release:NetProto.GS2PWGetPWData.msg_head)
  
  ::NetProto::MsgHead* temp = msg_head_;
  msg_head_ = NULL;
  return temp;
}
inline void GS2PWGetPWData::set_allocated_msg_head(::NetProto::MsgHead* msg_head) {
  delete msg_head_;
  msg_head_ = msg_head;
  if (msg_head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.GS2PWGetPWData.msg_head)
}

// .NetProto.PWDataType type = 2;
inline void GS2PWGetPWData::clear_type() {
  type_ = 0;
}
inline ::NetProto::PWDataType GS2PWGetPWData::type() const {
  // @@protoc_insertion_point(field_get:NetProto.GS2PWGetPWData.type)
  return static_cast< ::NetProto::PWDataType >(type_);
}
inline void GS2PWGetPWData::set_type(::NetProto::PWDataType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetProto.GS2PWGetPWData.type)
}

// .google.protobuf.Any data = 3;
inline bool GS2PWGetPWData::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline void GS2PWGetPWData::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
inline const ::google::protobuf::Any& GS2PWGetPWData::data() const {
  // @@protoc_insertion_point(field_get:NetProto.GS2PWGetPWData.data)
  return data_ != NULL ? *data_
                         : *::google::protobuf::Any::internal_default_instance();
}
inline ::google::protobuf::Any* GS2PWGetPWData::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.GS2PWGetPWData.data)
  return data_;
}
inline ::google::protobuf::Any* GS2PWGetPWData::release_data() {
  // @@protoc_insertion_point(field_release:NetProto.GS2PWGetPWData.data)
  
  ::google::protobuf::Any* temp = data_;
  data_ = NULL;
  return temp;
}
inline void GS2PWGetPWData::set_allocated_data(::google::protobuf::Any* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.GS2PWGetPWData.data)
}

// -------------------------------------------------------------------

// RobotSceneID

// string robot_uuid = 1;
inline void RobotSceneID::clear_robot_uuid() {
  robot_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RobotSceneID::robot_uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotSceneID.robot_uuid)
  return robot_uuid_.GetNoArena();
}
inline void RobotSceneID::set_robot_uuid(const ::std::string& value) {
  
  robot_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.RobotSceneID.robot_uuid)
}
#if LANG_CXX11
inline void RobotSceneID::set_robot_uuid(::std::string&& value) {
  
  robot_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.RobotSceneID.robot_uuid)
}
#endif
inline void RobotSceneID::set_robot_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  robot_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.RobotSceneID.robot_uuid)
}
inline void RobotSceneID::set_robot_uuid(const char* value, size_t size) {
  
  robot_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.RobotSceneID.robot_uuid)
}
inline ::std::string* RobotSceneID::mutable_robot_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.RobotSceneID.robot_uuid)
  return robot_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RobotSceneID::release_robot_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.RobotSceneID.robot_uuid)
  
  return robot_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RobotSceneID::set_allocated_robot_uuid(::std::string* robot_uuid) {
  if (robot_uuid != NULL) {
    
  } else {
    
  }
  robot_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), robot_uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.RobotSceneID.robot_uuid)
}

// string scene_id = 2;
inline void RobotSceneID::clear_scene_id() {
  scene_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RobotSceneID::scene_id() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotSceneID.scene_id)
  return scene_id_.GetNoArena();
}
inline void RobotSceneID::set_scene_id(const ::std::string& value) {
  
  scene_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.RobotSceneID.scene_id)
}
#if LANG_CXX11
inline void RobotSceneID::set_scene_id(::std::string&& value) {
  
  scene_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.RobotSceneID.scene_id)
}
#endif
inline void RobotSceneID::set_scene_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  scene_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.RobotSceneID.scene_id)
}
inline void RobotSceneID::set_scene_id(const char* value, size_t size) {
  
  scene_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.RobotSceneID.scene_id)
}
inline ::std::string* RobotSceneID::mutable_scene_id() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.RobotSceneID.scene_id)
  return scene_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RobotSceneID::release_scene_id() {
  // @@protoc_insertion_point(field_release:NetProto.RobotSceneID.scene_id)
  
  return scene_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RobotSceneID::set_allocated_scene_id(::std::string* scene_id) {
  if (scene_id != NULL) {
    
  } else {
    
  }
  scene_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scene_id);
  // @@protoc_insertion_point(field_set_allocated:NetProto.RobotSceneID.scene_id)
}

// -------------------------------------------------------------------

// PW2GSNotifyPWData

// .NetProto.MsgHead msg_head = 1;
inline bool PW2GSNotifyPWData::has_msg_head() const {
  return this != internal_default_instance() && msg_head_ != NULL;
}
inline void PW2GSNotifyPWData::clear_msg_head() {
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) delete msg_head_;
  msg_head_ = NULL;
}
inline const ::NetProto::MsgHead& PW2GSNotifyPWData::msg_head() const {
  // @@protoc_insertion_point(field_get:NetProto.PW2GSNotifyPWData.msg_head)
  return msg_head_ != NULL ? *msg_head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
inline ::NetProto::MsgHead* PW2GSNotifyPWData::mutable_msg_head() {
  
  if (msg_head_ == NULL) {
    msg_head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.PW2GSNotifyPWData.msg_head)
  return msg_head_;
}
inline ::NetProto::MsgHead* PW2GSNotifyPWData::release_msg_head() {
  // @@protoc_insertion_point(field_release:NetProto.PW2GSNotifyPWData.msg_head)
  
  ::NetProto::MsgHead* temp = msg_head_;
  msg_head_ = NULL;
  return temp;
}
inline void PW2GSNotifyPWData::set_allocated_msg_head(::NetProto::MsgHead* msg_head) {
  delete msg_head_;
  msg_head_ = msg_head;
  if (msg_head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.PW2GSNotifyPWData.msg_head)
}

// .NetProto.PWDataType type = 2;
inline void PW2GSNotifyPWData::clear_type() {
  type_ = 0;
}
inline ::NetProto::PWDataType PW2GSNotifyPWData::type() const {
  // @@protoc_insertion_point(field_get:NetProto.PW2GSNotifyPWData.type)
  return static_cast< ::NetProto::PWDataType >(type_);
}
inline void PW2GSNotifyPWData::set_type(::NetProto::PWDataType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetProto.PW2GSNotifyPWData.type)
}

// .google.protobuf.Any data = 3;
inline bool PW2GSNotifyPWData::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline void PW2GSNotifyPWData::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
inline const ::google::protobuf::Any& PW2GSNotifyPWData::data() const {
  // @@protoc_insertion_point(field_get:NetProto.PW2GSNotifyPWData.data)
  return data_ != NULL ? *data_
                         : *::google::protobuf::Any::internal_default_instance();
}
inline ::google::protobuf::Any* PW2GSNotifyPWData::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.PW2GSNotifyPWData.data)
  return data_;
}
inline ::google::protobuf::Any* PW2GSNotifyPWData::release_data() {
  // @@protoc_insertion_point(field_release:NetProto.PW2GSNotifyPWData.data)
  
  ::google::protobuf::Any* temp = data_;
  data_ = NULL;
  return temp;
}
inline void PW2GSNotifyPWData::set_allocated_data(::google::protobuf::Any* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.PW2GSNotifyPWData.data)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace NetProto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::NetProto::PWDataType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetProto::PWDataType>() {
  return ::NetProto::PWDataType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_pw_5fdata_2eproto__INCLUDED
