// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cs.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cs.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace NetProto {
namespace CS {
class CSCommonMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CSCommonMsg> {
} _CSCommonMsg_default_instance_;
class NotifyClientRobotAttrChange_AttrDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NotifyClientRobotAttrChange_Attr> {
} _NotifyClientRobotAttrChange_Attr_default_instance_;
class NotifyClientRobotAttrChangeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NotifyClientRobotAttrChange> {
} _NotifyClientRobotAttrChange_default_instance_;
class C2SRegisterReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<C2SRegisterReq> {
} _C2SRegisterReq_default_instance_;
class S2CRegisterRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<S2CRegisterResp> {
} _S2CRegisterResp_default_instance_;
class C2SLoginReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<C2SLoginReq> {
} _C2SLoginReq_default_instance_;
class S2CLoginRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<S2CLoginResp> {
} _S2CLoginResp_default_instance_;
class S2CRoleActionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<S2CRoleAction> {
} _S2CRoleAction_default_instance_;
class S2CVoiceSpeechDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<S2CVoiceSpeech> {
} _S2CVoiceSpeech_default_instance_;
class C2SWalkFinishDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<C2SWalkFinish> {
} _C2SWalkFinish_default_instance_;
class C2SActionStatusDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<C2SActionStatus> {
} _C2SActionStatus_default_instance_;
class C2STouchEventDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<C2STouchEvent> {
} _C2STouchEvent_default_instance_;
class C2SPlaceEventDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<C2SPlaceEvent> {
} _C2SPlaceEvent_default_instance_;
class C2SFetchEventDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<C2SFetchEvent> {
} _C2SFetchEvent_default_instance_;
class C2SSpecialEventDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<C2SSpecialEvent> {
} _C2SSpecialEvent_default_instance_;
class C2SObjPosRotEventDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<C2SObjPosRotEvent> {
} _C2SObjPosRotEvent_default_instance_;
class C2SVisionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<C2SVision> {
} _C2SVision_default_instance_;
class C2SVoiceDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<C2SVoice> {
} _C2SVoice_default_instance_;
class C2SVoiceSpeechDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<C2SVoiceSpeech> {
} _C2SVoiceSpeech_default_instance_;
class C2SAddObjectDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<C2SAddObject> {
} _C2SAddObject_default_instance_;
class C2SReplaceObjectDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<C2SReplaceObject> {
} _C2SReplaceObject_default_instance_;
class C2SDeleteObjectDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<C2SDeleteObject> {
} _C2SDeleteObject_default_instance_;
class C2SDebugActionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<C2SDebugAction> {
} _C2SDebugAction_default_instance_;
class ObjPosRotChangeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ObjPosRotChange> {
} _ObjPosRotChange_default_instance_;
class FetchObjDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FetchObj> {
} _FetchObj_default_instance_;
class PutObjDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PutObj> {
} _PutObj_default_instance_;
class OperateObjDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OperateObj> {
} _OperateObj_default_instance_;
class SelfActionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SelfAction> {
} _SelfAction_default_instance_;

namespace protobuf_cs_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[28];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[7];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSCommonMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSCommonMsg, head_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyClientRobotAttrChange_Attr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyClientRobotAttrChange_Attr, field_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyClientRobotAttrChange_Attr, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyClientRobotAttrChange_Attr, ts_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyClientRobotAttrChange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyClientRobotAttrChange, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyClientRobotAttrChange, all_attr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SRegisterReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SRegisterReq, account_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SRegisterReq, password_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRegisterResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRegisterResp, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRegisterResp, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SLoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SLoginReq, account_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SLoginReq, password_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CLoginResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CLoginResp, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CLoginResp, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CLoginResp, robotinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRoleAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRoleAction, msg_head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRoleAction, action_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRoleAction, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRoleAction, fetch_obj_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRoleAction, put_obj_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRoleAction, operate_obj_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRoleAction, self_action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRoleAction, cached_start_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRoleAction, cached_finish_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CVoiceSpeech, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CVoiceSpeech, msg_head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CVoiceSpeech, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CVoiceSpeech, text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SWalkFinish, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SWalkFinish, msg_head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SWalkFinish, role_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SWalkFinish, role_rot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SWalkFinish, relation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SActionStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SActionStatus, msg_head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SActionStatus, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SActionStatus, action_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SActionStatus, cached_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2STouchEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2STouchEvent, msg_head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2STouchEvent, body_part_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2STouchEvent, obj_uuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SPlaceEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SPlaceEvent, msg_head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SPlaceEvent, obj_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SPlaceEvent, location_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SPlaceEvent, changed_pos_rot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SPlaceEvent, changed_relation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SPlaceEvent, body_part_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SFetchEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SFetchEvent, msg_head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SFetchEvent, obj_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SFetchEvent, location_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SFetchEvent, changed_pos_rot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SFetchEvent, changed_relation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SFetchEvent, body_part_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SSpecialEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SSpecialEvent, msg_head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SSpecialEvent, evt_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SSpecialEvent, obj_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SSpecialEvent, params_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SObjPosRotEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SObjPosRotEvent, msg_head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SObjPosRotEvent, obj_pos_rot_change_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SVision, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SVision, msg_head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SVision, enter_obj_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SVision, enter_obj_relation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SVision, leave_obj_uuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SVoice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SVoice, voice_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SVoice, voice_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SVoice, volume_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SVoice, params_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SVoiceSpeech, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SVoiceSpeech, msg_head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SVoiceSpeech, text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SAddObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SAddObject, msg_head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SAddObject, config_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SAddObject, obj_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SAddObject, class_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SAddObject, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SAddObject, pos_rot_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SReplaceObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SReplaceObject, msg_head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SReplaceObject, old_obj_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SReplaceObject, new_obj_uuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SDeleteObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SDeleteObject, msg_head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SDeleteObject, obj_uuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SDebugAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SDebugAction, msg_head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SDebugAction, action_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjPosRotChange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjPosRotChange, obj_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjPosRotChange, become_moving_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjPosRotChange, obj_pos_rot_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FetchObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FetchObj, obj_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FetchObj, location_uuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutObj, obj_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutObj, location_uuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperateObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperateObj, oper_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperateObj, obj_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperateObj, params_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelfAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelfAction, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelfAction, params_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(CSCommonMsg)},
  { 6, -1, sizeof(NotifyClientRobotAttrChange_Attr)},
  { 14, -1, sizeof(NotifyClientRobotAttrChange)},
  { 21, -1, sizeof(C2SRegisterReq)},
  { 28, -1, sizeof(S2CRegisterResp)},
  { 35, -1, sizeof(C2SLoginReq)},
  { 42, -1, sizeof(S2CLoginResp)},
  { 50, -1, sizeof(S2CRoleAction)},
  { 64, -1, sizeof(S2CVoiceSpeech)},
  { 72, -1, sizeof(C2SWalkFinish)},
  { 81, -1, sizeof(C2SActionStatus)},
  { 90, -1, sizeof(C2STouchEvent)},
  { 98, -1, sizeof(C2SPlaceEvent)},
  { 109, -1, sizeof(C2SFetchEvent)},
  { 120, -1, sizeof(C2SSpecialEvent)},
  { 129, -1, sizeof(C2SObjPosRotEvent)},
  { 136, -1, sizeof(C2SVision)},
  { 145, -1, sizeof(C2SVoice)},
  { 154, -1, sizeof(C2SVoiceSpeech)},
  { 161, -1, sizeof(C2SAddObject)},
  { 172, -1, sizeof(C2SReplaceObject)},
  { 180, -1, sizeof(C2SDeleteObject)},
  { 187, -1, sizeof(C2SDebugAction)},
  { 194, -1, sizeof(ObjPosRotChange)},
  { 202, -1, sizeof(FetchObj)},
  { 209, -1, sizeof(PutObj)},
  { 216, -1, sizeof(OperateObj)},
  { 224, -1, sizeof(SelfAction)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CSCommonMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NotifyClientRobotAttrChange_Attr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NotifyClientRobotAttrChange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_C2SRegisterReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_S2CRegisterResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_C2SLoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_S2CLoginResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_S2CRoleAction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_S2CVoiceSpeech_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_C2SWalkFinish_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_C2SActionStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_C2STouchEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_C2SPlaceEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_C2SFetchEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_C2SSpecialEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_C2SObjPosRotEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_C2SVision_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_C2SVoice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_C2SVoiceSpeech_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_C2SAddObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_C2SReplaceObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_C2SDeleteObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_C2SDebugAction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ObjPosRotChange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FetchObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PutObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OperateObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SelfAction_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cs.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 28);
}

}  // namespace

void TableStruct::Shutdown() {
  _CSCommonMsg_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _NotifyClientRobotAttrChange_Attr_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _NotifyClientRobotAttrChange_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _C2SRegisterReq_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _S2CRegisterResp_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _C2SLoginReq_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _S2CLoginResp_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _S2CRoleAction_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _S2CVoiceSpeech_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _C2SWalkFinish_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _C2SActionStatus_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _C2STouchEvent_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _C2SPlaceEvent_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _C2SFetchEvent_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _C2SSpecialEvent_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _C2SObjPosRotEvent_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _C2SVision_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _C2SVoice_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _C2SVoiceSpeech_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _C2SAddObject_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _C2SReplaceObject_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _C2SDeleteObject_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _C2SDebugAction_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
  _ObjPosRotChange_default_instance_.Shutdown();
  delete file_level_metadata[23].reflection;
  _FetchObj_default_instance_.Shutdown();
  delete file_level_metadata[24].reflection;
  _PutObj_default_instance_.Shutdown();
  delete file_level_metadata[25].reflection;
  _OperateObj_default_instance_.Shutdown();
  delete file_level_metadata[26].reflection;
  _SelfAction_default_instance_.Shutdown();
  delete file_level_metadata[27].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::NetProto::protobuf_msg_5fhead_2eproto::InitDefaults();
  ::NetProto::protobuf_key_5fvalue_5fpair_2eproto::InitDefaults();
  ::NetProto::protobuf_obj_5fpos_5frelation_2eproto::InitDefaults();
  ::NetProto::protobuf_vector3_2eproto::InitDefaults();
  ::NetProto::protobuf_quaternion_2eproto::InitDefaults();
  ::NetProto::protobuf_pos_5frot_2eproto::InitDefaults();
  ::NetProto::protobuf_robot_5finfo_2eproto::InitDefaults();
  ::NetProto::protobuf_role_5fstatus_5fevent_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fany_2eproto::InitDefaults();
  _CSCommonMsg_default_instance_.DefaultConstruct();
  _NotifyClientRobotAttrChange_Attr_default_instance_.DefaultConstruct();
  _NotifyClientRobotAttrChange_default_instance_.DefaultConstruct();
  _C2SRegisterReq_default_instance_.DefaultConstruct();
  _S2CRegisterResp_default_instance_.DefaultConstruct();
  _C2SLoginReq_default_instance_.DefaultConstruct();
  _S2CLoginResp_default_instance_.DefaultConstruct();
  _S2CRoleAction_default_instance_.DefaultConstruct();
  _S2CVoiceSpeech_default_instance_.DefaultConstruct();
  _C2SWalkFinish_default_instance_.DefaultConstruct();
  _C2SActionStatus_default_instance_.DefaultConstruct();
  _C2STouchEvent_default_instance_.DefaultConstruct();
  _C2SPlaceEvent_default_instance_.DefaultConstruct();
  _C2SFetchEvent_default_instance_.DefaultConstruct();
  _C2SSpecialEvent_default_instance_.DefaultConstruct();
  _C2SObjPosRotEvent_default_instance_.DefaultConstruct();
  _C2SVision_default_instance_.DefaultConstruct();
  _C2SVoice_default_instance_.DefaultConstruct();
  _C2SVoiceSpeech_default_instance_.DefaultConstruct();
  _C2SAddObject_default_instance_.DefaultConstruct();
  _C2SReplaceObject_default_instance_.DefaultConstruct();
  _C2SDeleteObject_default_instance_.DefaultConstruct();
  _C2SDebugAction_default_instance_.DefaultConstruct();
  _ObjPosRotChange_default_instance_.DefaultConstruct();
  _FetchObj_default_instance_.DefaultConstruct();
  _PutObj_default_instance_.DefaultConstruct();
  _OperateObj_default_instance_.DefaultConstruct();
  _SelfAction_default_instance_.DefaultConstruct();
  _CSCommonMsg_default_instance_.get_mutable()->head_ = const_cast< ::NetProto::MsgHead*>(
      ::NetProto::MsgHead::internal_default_instance());
  _NotifyClientRobotAttrChange_default_instance_.get_mutable()->head_ = const_cast< ::NetProto::MsgHead*>(
      ::NetProto::MsgHead::internal_default_instance());
  _S2CLoginResp_default_instance_.get_mutable()->robotinfo_ = const_cast< ::NetProto::RobotInfo*>(
      ::NetProto::RobotInfo::internal_default_instance());
  _S2CRoleAction_default_instance_.get_mutable()->msg_head_ = const_cast< ::NetProto::MsgHead*>(
      ::NetProto::MsgHead::internal_default_instance());
  _S2CRoleAction_default_instance_.get_mutable()->fetch_obj_ = const_cast< ::NetProto::CS::FetchObj*>(
      ::NetProto::CS::FetchObj::internal_default_instance());
  _S2CRoleAction_default_instance_.get_mutable()->put_obj_ = const_cast< ::NetProto::CS::PutObj*>(
      ::NetProto::CS::PutObj::internal_default_instance());
  _S2CRoleAction_default_instance_.get_mutable()->operate_obj_ = const_cast< ::NetProto::CS::OperateObj*>(
      ::NetProto::CS::OperateObj::internal_default_instance());
  _S2CRoleAction_default_instance_.get_mutable()->self_action_ = const_cast< ::NetProto::CS::SelfAction*>(
      ::NetProto::CS::SelfAction::internal_default_instance());
  _S2CRoleAction_default_instance_.get_mutable()->cached_start_data_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
  _S2CRoleAction_default_instance_.get_mutable()->cached_finish_data_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
  _S2CVoiceSpeech_default_instance_.get_mutable()->msg_head_ = const_cast< ::NetProto::MsgHead*>(
      ::NetProto::MsgHead::internal_default_instance());
  _C2SWalkFinish_default_instance_.get_mutable()->msg_head_ = const_cast< ::NetProto::MsgHead*>(
      ::NetProto::MsgHead::internal_default_instance());
  _C2SWalkFinish_default_instance_.get_mutable()->role_pos_ = const_cast< ::NetProto::Vector3*>(
      ::NetProto::Vector3::internal_default_instance());
  _C2SWalkFinish_default_instance_.get_mutable()->role_rot_ = const_cast< ::NetProto::Quaternion*>(
      ::NetProto::Quaternion::internal_default_instance());
  _C2SActionStatus_default_instance_.get_mutable()->msg_head_ = const_cast< ::NetProto::MsgHead*>(
      ::NetProto::MsgHead::internal_default_instance());
  _C2SActionStatus_default_instance_.get_mutable()->cached_data_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
  _C2STouchEvent_default_instance_.get_mutable()->msg_head_ = const_cast< ::NetProto::MsgHead*>(
      ::NetProto::MsgHead::internal_default_instance());
  _C2SPlaceEvent_default_instance_.get_mutable()->msg_head_ = const_cast< ::NetProto::MsgHead*>(
      ::NetProto::MsgHead::internal_default_instance());
  _C2SFetchEvent_default_instance_.get_mutable()->msg_head_ = const_cast< ::NetProto::MsgHead*>(
      ::NetProto::MsgHead::internal_default_instance());
  _C2SSpecialEvent_default_instance_.get_mutable()->msg_head_ = const_cast< ::NetProto::MsgHead*>(
      ::NetProto::MsgHead::internal_default_instance());
  _C2SObjPosRotEvent_default_instance_.get_mutable()->msg_head_ = const_cast< ::NetProto::MsgHead*>(
      ::NetProto::MsgHead::internal_default_instance());
  _C2SVision_default_instance_.get_mutable()->msg_head_ = const_cast< ::NetProto::MsgHead*>(
      ::NetProto::MsgHead::internal_default_instance());
  _C2SVoiceSpeech_default_instance_.get_mutable()->msg_head_ = const_cast< ::NetProto::MsgHead*>(
      ::NetProto::MsgHead::internal_default_instance());
  _C2SAddObject_default_instance_.get_mutable()->msg_head_ = const_cast< ::NetProto::MsgHead*>(
      ::NetProto::MsgHead::internal_default_instance());
  _C2SAddObject_default_instance_.get_mutable()->pos_rot_ = const_cast< ::NetProto::PosRot*>(
      ::NetProto::PosRot::internal_default_instance());
  _C2SReplaceObject_default_instance_.get_mutable()->msg_head_ = const_cast< ::NetProto::MsgHead*>(
      ::NetProto::MsgHead::internal_default_instance());
  _C2SDeleteObject_default_instance_.get_mutable()->msg_head_ = const_cast< ::NetProto::MsgHead*>(
      ::NetProto::MsgHead::internal_default_instance());
  _C2SDebugAction_default_instance_.get_mutable()->msg_head_ = const_cast< ::NetProto::MsgHead*>(
      ::NetProto::MsgHead::internal_default_instance());
  _ObjPosRotChange_default_instance_.get_mutable()->obj_pos_rot_ = const_cast< ::NetProto::PosRot*>(
      ::NetProto::PosRot::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\010cs.proto\022\013NetProto.CS\032\016msg_head.proto\032"
      "\024key_value_pair.proto\032\026obj_pos_relation."
      "proto\032\rvector3.proto\032\020quaternion.proto\032\r"
      "pos_rot.proto\032\020robot_info.proto\032\027role_st"
      "atus_event.proto\032\031google/protobuf/any.pr"
      "oto\".\n\013CSCommonMsg\022\037\n\004head\030\001 \001(\0132\021.NetPr"
      "oto.MsgHead\"\261\001\n\033NotifyClientRobotAttrCha"
      "nge\022\037\n\004head\030\001 \001(\0132\021.NetProto.MsgHead\022\?\n\010"
      "all_attr\030\002 \003(\0132-.NetProto.CS.NotifyClien"
      "tRobotAttrChange.Attr\0320\n\004Attr\022\r\n\005field\030\001"
      " \001(\r\022\r\n\005value\030\002 \001(\r\022\n\n\002ts\030\003 \001(\r\"8\n\016C2SRe"
      "gisterReq\022\024\n\014account_name\030\001 \001(\t\022\020\n\010passw"
      "ord\030\002 \001(\t\"1\n\017S2CRegisterResp\022\017\n\007success\030"
      "\001 \001(\010\022\r\n\005error\030\002 \001(\t\"5\n\013C2SLoginReq\022\024\n\014a"
      "ccount_name\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\"V\n\014S"
      "2CLoginResp\022\017\n\007success\030\001 \001(\010\022\r\n\005error\030\002 "
      "\001(\t\022&\n\trobotInfo\030\003 \001(\0132\023.NetProto.RobotI"
      "nfo\"\313\003\n\rS2CRoleAction\022#\n\010msg_head\030\001 \001(\0132"
      "\021.NetProto.MsgHead\022\021\n\taction_id\030\002 \001(\r\022-\n"
      "\004type\030\003 \001(\0162\037.NetProto.CS.S2CRoleAction."
      "Type\022(\n\tfetch_obj\030\004 \001(\0132\025.NetProto.CS.Fe"
      "tchObj\022$\n\007put_obj\030\005 \001(\0132\023.NetProto.CS.Pu"
      "tObj\022,\n\013operate_obj\030\006 \001(\0132\027.NetProto.CS."
      "OperateObj\022,\n\013self_action\030\007 \001(\0132\027.NetPro"
      "to.CS.SelfAction\022/\n\021cached_start_data\030\010 "
      "\001(\0132\024.google.protobuf.Any\0220\n\022cached_fini"
      "sh_data\030\t \001(\0132\024.google.protobuf.Any\"D\n\004T"
      "ype\022\r\n\tFETCH_OBJ\020\000\022\013\n\007PUT_OBJ\020\001\022\017\n\013OPERA"
      "TE_OBJ\020\002\022\017\n\013SELF_ACTION\020\003\"O\n\016S2CVoiceSpe"
      "ech\022#\n\010msg_head\030\001 \001(\0132\021.NetProto.MsgHead"
      "\022\n\n\002id\030\002 \001(\t\022\014\n\004text\030\003 \001(\t\"\255\001\n\rC2SWalkFi"
      "nish\022#\n\010msg_head\030\001 \001(\0132\021.NetProto.MsgHea"
      "d\022#\n\010role_pos\030\003 \001(\0132\021.NetProto.Vector3\022&"
      "\n\010role_rot\030\004 \001(\0132\024.NetProto.Quaternion\022*"
      "\n\010relation\030\005 \003(\0132\030.NetProto.ObjPosRelati"
      "on\"\304\001\n\017C2SActionStatus\022#\n\010msg_head\030\001 \001(\013"
      "2\021.NetProto.MsgHead\022/\n\004type\030\002 \001(\0162!.NetP"
      "roto.CS.C2SActionStatus.Type\022\021\n\taction_i"
      "d\030\003 \001(\r\022)\n\013cached_data\030\004 \001(\0132\024.google.pr"
      "otobuf.Any\"\035\n\004Type\022\t\n\005START\020\000\022\n\n\006FINISH\020"
      "\001\"p\n\rC2STouchEvent\022#\n\010msg_head\030\001 \001(\0132\021.N"
      "etProto.MsgHead\022(\n\tbody_part\030\002 \001(\0162\025.Net"
      "Proto.CS.BodyPart\022\020\n\010obj_uuid\030\003 \001(\t\"\362\001\n\r"
      "C2SPlaceEvent\022#\n\010msg_head\030\001 \001(\0132\021.NetPro"
      "to.MsgHead\022\020\n\010obj_uuid\030\003 \001(\t\022\025\n\rlocation"
      "_uuid\030\004 \001(\t\0225\n\017changed_pos_rot\030\005 \003(\0132\034.N"
      "etProto.CS.ObjPosRotChange\0222\n\020changed_re"
      "lation\030\006 \003(\0132\030.NetProto.ObjPosRelation\022("
      "\n\tbody_part\030\007 \001(\0162\025.NetProto.CS.BodyPart"
      "\"\362\001\n\rC2SFetchEvent\022#\n\010msg_head\030\001 \001(\0132\021.N"
      "etProto.MsgHead\022\020\n\010obj_uuid\030\003 \001(\t\022\025\n\rloc"
      "ation_uuid\030\004 \001(\t\0225\n\017changed_pos_rot\030\005 \003("
      "\0132\034.NetProto.CS.ObjPosRotChange\0222\n\020chang"
      "ed_relation\030\006 \003(\0132\030.NetProto.ObjPosRelat"
      "ion\022(\n\tbody_part\030\007 \001(\0162\025.NetProto.CS.Bod"
      "yPart\"\235\001\n\017C2SSpecialEvent\022#\n\010msg_head\030\001 "
      "\001(\0132\021.NetProto.MsgHead\022+\n\010evt_type\030\002 \001(\016"
      "2\031.NetProto.RoleStatusEvent\022\020\n\010obj_uuid\030"
      "\003 \001(\t\022&\n\006params\030\004 \003(\0132\026.NetProto.KeyValu"
      "ePair\"r\n\021C2SObjPosRotEvent\022#\n\010msg_head\030\001"
      " \001(\0132\021.NetProto.MsgHead\0228\n\022obj_pos_rot_c"
      "hange\030\003 \003(\0132\034.NetProto.CS.ObjPosRotChang"
      "e\"\226\001\n\tC2SVision\022#\n\010msg_head\030\001 \001(\0132\021.NetP"
      "roto.MsgHead\022\026\n\016enter_obj_uuid\030\002 \003(\t\0224\n\022"
      "enter_obj_relation\030\003 \003(\0132\030.NetProto.ObjP"
      "osRelation\022\026\n\016leave_obj_uuid\030\004 \003(\t\"\276\002\n\010C"
      "2SVoice\0223\n\nvoice_type\030\001 \001(\0162\037.NetProto.C"
      "S.C2SVoice.VoiceType\0227\n\014voice_status\030\002 \001"
      "(\0162!.NetProto.CS.C2SVoice.VoiceStatus\0227\n"
      "\014volume_level\030\003 \001(\0162!.NetProto.CS.C2SVoi"
      "ce.VolumeLevel\022\016\n\006params\030\004 \001(\t\"\035\n\tVoiceT"
      "ype\022\020\n\014DoorBellRing\020\000\",\n\013VolumeLevel\022\007\n\003"
      "LOW\020\000\022\n\n\006NORMAL\020\001\022\010\n\004HIGH\020\002\".\n\013VoiceStat"
      "us\022\t\n\005START\020\000\022\007\n\003END\020\001\022\013\n\007INSTANT\020\002\"C\n\016C"
      "2SVoiceSpeech\022#\n\010msg_head\030\001 \001(\0132\021.NetPro"
      "to.MsgHead\022\014\n\004text\030\003 \001(\t\"\236\001\n\014C2SAddObjec"
      "t\022#\n\010msg_head\030\001 \001(\0132\021.NetProto.MsgHead\022\021"
      "\n\tconfig_id\030\002 \001(\r\022\020\n\010obj_uuid\030\003 \001(\t\022\020\n\010c"
      "lass_id\030\004 \001(\r\022\017\n\007item_id\030\005 \001(\r\022!\n\007pos_ro"
      "t\030\006 \001(\0132\020.NetProto.PosRot\"c\n\020C2SReplaceO"
      "bject\022#\n\010msg_head\030\001 \001(\0132\021.NetProto.MsgHe"
      "ad\022\024\n\014old_obj_uuid\030\002 \001(\t\022\024\n\014new_obj_uuid"
      "\030\003 \001(\t\"H\n\017C2SDeleteObject\022#\n\010msg_head\030\001 "
      "\001(\0132\021.NetProto.MsgHead\022\020\n\010obj_uuid\030\002 \001(\t"
      "\"E\n\016C2SDebugAction\022#\n\010msg_head\030\001 \001(\0132\021.N"
      "etProto.MsgHead\022\016\n\006action\030\002 \001(\t\"a\n\017ObjPo"
      "sRotChange\022\020\n\010obj_uuid\030\003 \001(\t\022\025\n\rbecome_m"
      "oving\030\004 \001(\010\022%\n\013obj_pos_rot\030\005 \001(\0132\020.NetPr"
      "oto.PosRot\"3\n\010FetchObj\022\020\n\010obj_uuid\030\001 \001(\t"
      "\022\025\n\rlocation_uuid\030\002 \001(\t\"1\n\006PutObj\022\020\n\010obj"
      "_uuid\030\001 \001(\t\022\025\n\rlocation_uuid\030\002 \001(\t\"Y\n\nOp"
      "erateObj\022\021\n\toper_type\030\001 \001(\t\022\020\n\010obj_uuid\030"
      "\002 \001(\t\022&\n\006params\030\003 \003(\0132\026.NetProto.KeyValu"
      "ePair\"D\n\nSelfAction\022\016\n\006action\030\001 \001(\t\022&\n\006p"
      "arams\030\002 \003(\0132\026.NetProto.KeyValuePair*K\n\010B"
      "odyPart\022\r\n\tLEFT_HAND\020\000\022\016\n\nRIGHT_HAND\020\001\022\007"
      "\n\003LIP\020\002\022\007\n\003HIP\020\003\022\016\n\nWHOLE_BODY\020\004*1\n\016Worl"
      "dEventType\022\020\n\014DoorBellRing\020\000\022\r\n\tEmsArriv"
      "e\020\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3931);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cs.proto", &protobuf_RegisterTypes);
  ::NetProto::protobuf_msg_5fhead_2eproto::AddDescriptors();
  ::NetProto::protobuf_key_5fvalue_5fpair_2eproto::AddDescriptors();
  ::NetProto::protobuf_obj_5fpos_5frelation_2eproto::AddDescriptors();
  ::NetProto::protobuf_vector3_2eproto::AddDescriptors();
  ::NetProto::protobuf_quaternion_2eproto::AddDescriptors();
  ::NetProto::protobuf_pos_5frot_2eproto::AddDescriptors();
  ::NetProto::protobuf_robot_5finfo_2eproto::AddDescriptors();
  ::NetProto::protobuf_role_5fstatus_5fevent_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cs_2eproto

const ::google::protobuf::EnumDescriptor* S2CRoleAction_Type_descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_enum_descriptors[0];
}
bool S2CRoleAction_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const S2CRoleAction_Type S2CRoleAction::FETCH_OBJ;
const S2CRoleAction_Type S2CRoleAction::PUT_OBJ;
const S2CRoleAction_Type S2CRoleAction::OPERATE_OBJ;
const S2CRoleAction_Type S2CRoleAction::SELF_ACTION;
const S2CRoleAction_Type S2CRoleAction::Type_MIN;
const S2CRoleAction_Type S2CRoleAction::Type_MAX;
const int S2CRoleAction::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* C2SActionStatus_Type_descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_enum_descriptors[1];
}
bool C2SActionStatus_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const C2SActionStatus_Type C2SActionStatus::START;
const C2SActionStatus_Type C2SActionStatus::FINISH;
const C2SActionStatus_Type C2SActionStatus::Type_MIN;
const C2SActionStatus_Type C2SActionStatus::Type_MAX;
const int C2SActionStatus::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* C2SVoice_VoiceType_descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_enum_descriptors[2];
}
bool C2SVoice_VoiceType_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const C2SVoice_VoiceType C2SVoice::DoorBellRing;
const C2SVoice_VoiceType C2SVoice::VoiceType_MIN;
const C2SVoice_VoiceType C2SVoice::VoiceType_MAX;
const int C2SVoice::VoiceType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* C2SVoice_VolumeLevel_descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_enum_descriptors[3];
}
bool C2SVoice_VolumeLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const C2SVoice_VolumeLevel C2SVoice::LOW;
const C2SVoice_VolumeLevel C2SVoice::NORMAL;
const C2SVoice_VolumeLevel C2SVoice::HIGH;
const C2SVoice_VolumeLevel C2SVoice::VolumeLevel_MIN;
const C2SVoice_VolumeLevel C2SVoice::VolumeLevel_MAX;
const int C2SVoice::VolumeLevel_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* C2SVoice_VoiceStatus_descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_enum_descriptors[4];
}
bool C2SVoice_VoiceStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const C2SVoice_VoiceStatus C2SVoice::START;
const C2SVoice_VoiceStatus C2SVoice::END;
const C2SVoice_VoiceStatus C2SVoice::INSTANT;
const C2SVoice_VoiceStatus C2SVoice::VoiceStatus_MIN;
const C2SVoice_VoiceStatus C2SVoice::VoiceStatus_MAX;
const int C2SVoice::VoiceStatus_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* BodyPart_descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_enum_descriptors[5];
}
bool BodyPart_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* WorldEventType_descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_enum_descriptors[6];
}
bool WorldEventType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSCommonMsg::kHeadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSCommonMsg::CSCommonMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.CS.CSCommonMsg)
}
CSCommonMsg::CSCommonMsg(const CSCommonMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::NetProto::MsgHead(*from.head_);
  } else {
    head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NetProto.CS.CSCommonMsg)
}

void CSCommonMsg::SharedCtor() {
  head_ = NULL;
  _cached_size_ = 0;
}

CSCommonMsg::~CSCommonMsg() {
  // @@protoc_insertion_point(destructor:NetProto.CS.CSCommonMsg)
  SharedDtor();
}

void CSCommonMsg::SharedDtor() {
  if (this != internal_default_instance()) {
    delete head_;
  }
}

void CSCommonMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSCommonMsg::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSCommonMsg& CSCommonMsg::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

CSCommonMsg* CSCommonMsg::New(::google::protobuf::Arena* arena) const {
  CSCommonMsg* n = new CSCommonMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CSCommonMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.CS.CSCommonMsg)
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
}

bool CSCommonMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.CS.CSCommonMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.MsgHead head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.CS.CSCommonMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.CS.CSCommonMsg)
  return false;
#undef DO_
}

void CSCommonMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.CS.CSCommonMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->head_, output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.CS.CSCommonMsg)
}

::google::protobuf::uint8* CSCommonMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.CS.CSCommonMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->head_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.CS.CSCommonMsg)
  return target;
}

size_t CSCommonMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.CS.CSCommonMsg)
  size_t total_size = 0;

  // .NetProto.MsgHead head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSCommonMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.CS.CSCommonMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const CSCommonMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSCommonMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.CS.CSCommonMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.CS.CSCommonMsg)
    MergeFrom(*source);
  }
}

void CSCommonMsg::MergeFrom(const CSCommonMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.CS.CSCommonMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_head()) {
    mutable_head()->::NetProto::MsgHead::MergeFrom(from.head());
  }
}

void CSCommonMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.CS.CSCommonMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSCommonMsg::CopyFrom(const CSCommonMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.CS.CSCommonMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSCommonMsg::IsInitialized() const {
  return true;
}

void CSCommonMsg::Swap(CSCommonMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSCommonMsg::InternalSwap(CSCommonMsg* other) {
  std::swap(head_, other->head_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CSCommonMsg::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CSCommonMsg

// .NetProto.MsgHead head = 1;
bool CSCommonMsg::has_head() const {
  return this != internal_default_instance() && head_ != NULL;
}
void CSCommonMsg::clear_head() {
  if (GetArenaNoVirtual() == NULL && head_ != NULL) delete head_;
  head_ = NULL;
}
const ::NetProto::MsgHead& CSCommonMsg::head() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.CSCommonMsg.head)
  return head_ != NULL ? *head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
::NetProto::MsgHead* CSCommonMsg::mutable_head() {
  
  if (head_ == NULL) {
    head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.CS.CSCommonMsg.head)
  return head_;
}
::NetProto::MsgHead* CSCommonMsg::release_head() {
  // @@protoc_insertion_point(field_release:NetProto.CS.CSCommonMsg.head)
  
  ::NetProto::MsgHead* temp = head_;
  head_ = NULL;
  return temp;
}
void CSCommonMsg::set_allocated_head(::NetProto::MsgHead* head) {
  delete head_;
  head_ = head;
  if (head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.CSCommonMsg.head)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NotifyClientRobotAttrChange_Attr::kFieldFieldNumber;
const int NotifyClientRobotAttrChange_Attr::kValueFieldNumber;
const int NotifyClientRobotAttrChange_Attr::kTsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NotifyClientRobotAttrChange_Attr::NotifyClientRobotAttrChange_Attr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.CS.NotifyClientRobotAttrChange.Attr)
}
NotifyClientRobotAttrChange_Attr::NotifyClientRobotAttrChange_Attr(const NotifyClientRobotAttrChange_Attr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&field_, &from.field_,
    reinterpret_cast<char*>(&ts_) -
    reinterpret_cast<char*>(&field_) + sizeof(ts_));
  // @@protoc_insertion_point(copy_constructor:NetProto.CS.NotifyClientRobotAttrChange.Attr)
}

void NotifyClientRobotAttrChange_Attr::SharedCtor() {
  ::memset(&field_, 0, reinterpret_cast<char*>(&ts_) -
    reinterpret_cast<char*>(&field_) + sizeof(ts_));
  _cached_size_ = 0;
}

NotifyClientRobotAttrChange_Attr::~NotifyClientRobotAttrChange_Attr() {
  // @@protoc_insertion_point(destructor:NetProto.CS.NotifyClientRobotAttrChange.Attr)
  SharedDtor();
}

void NotifyClientRobotAttrChange_Attr::SharedDtor() {
}

void NotifyClientRobotAttrChange_Attr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyClientRobotAttrChange_Attr::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NotifyClientRobotAttrChange_Attr& NotifyClientRobotAttrChange_Attr::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

NotifyClientRobotAttrChange_Attr* NotifyClientRobotAttrChange_Attr::New(::google::protobuf::Arena* arena) const {
  NotifyClientRobotAttrChange_Attr* n = new NotifyClientRobotAttrChange_Attr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NotifyClientRobotAttrChange_Attr::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.CS.NotifyClientRobotAttrChange.Attr)
  ::memset(&field_, 0, reinterpret_cast<char*>(&ts_) -
    reinterpret_cast<char*>(&field_) + sizeof(ts_));
}

bool NotifyClientRobotAttrChange_Attr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.CS.NotifyClientRobotAttrChange.Attr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 field = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &field_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ts = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.CS.NotifyClientRobotAttrChange.Attr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.CS.NotifyClientRobotAttrChange.Attr)
  return false;
#undef DO_
}

void NotifyClientRobotAttrChange_Attr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.CS.NotifyClientRobotAttrChange.Attr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 field = 1;
  if (this->field() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->field(), output);
  }

  // uint32 value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->value(), output);
  }

  // uint32 ts = 3;
  if (this->ts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ts(), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.CS.NotifyClientRobotAttrChange.Attr)
}

::google::protobuf::uint8* NotifyClientRobotAttrChange_Attr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.CS.NotifyClientRobotAttrChange.Attr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 field = 1;
  if (this->field() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->field(), target);
  }

  // uint32 value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->value(), target);
  }

  // uint32 ts = 3;
  if (this->ts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ts(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.CS.NotifyClientRobotAttrChange.Attr)
  return target;
}

size_t NotifyClientRobotAttrChange_Attr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.CS.NotifyClientRobotAttrChange.Attr)
  size_t total_size = 0;

  // uint32 field = 1;
  if (this->field() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->field());
  }

  // uint32 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value());
  }

  // uint32 ts = 3;
  if (this->ts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyClientRobotAttrChange_Attr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.CS.NotifyClientRobotAttrChange.Attr)
  GOOGLE_DCHECK_NE(&from, this);
  const NotifyClientRobotAttrChange_Attr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NotifyClientRobotAttrChange_Attr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.CS.NotifyClientRobotAttrChange.Attr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.CS.NotifyClientRobotAttrChange.Attr)
    MergeFrom(*source);
  }
}

void NotifyClientRobotAttrChange_Attr::MergeFrom(const NotifyClientRobotAttrChange_Attr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.CS.NotifyClientRobotAttrChange.Attr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.field() != 0) {
    set_field(from.field());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
  if (from.ts() != 0) {
    set_ts(from.ts());
  }
}

void NotifyClientRobotAttrChange_Attr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.CS.NotifyClientRobotAttrChange.Attr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyClientRobotAttrChange_Attr::CopyFrom(const NotifyClientRobotAttrChange_Attr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.CS.NotifyClientRobotAttrChange.Attr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyClientRobotAttrChange_Attr::IsInitialized() const {
  return true;
}

void NotifyClientRobotAttrChange_Attr::Swap(NotifyClientRobotAttrChange_Attr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotifyClientRobotAttrChange_Attr::InternalSwap(NotifyClientRobotAttrChange_Attr* other) {
  std::swap(field_, other->field_);
  std::swap(value_, other->value_);
  std::swap(ts_, other->ts_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NotifyClientRobotAttrChange_Attr::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NotifyClientRobotAttrChange_Attr

// uint32 field = 1;
void NotifyClientRobotAttrChange_Attr::clear_field() {
  field_ = 0u;
}
::google::protobuf::uint32 NotifyClientRobotAttrChange_Attr::field() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.NotifyClientRobotAttrChange.Attr.field)
  return field_;
}
void NotifyClientRobotAttrChange_Attr::set_field(::google::protobuf::uint32 value) {
  
  field_ = value;
  // @@protoc_insertion_point(field_set:NetProto.CS.NotifyClientRobotAttrChange.Attr.field)
}

// uint32 value = 2;
void NotifyClientRobotAttrChange_Attr::clear_value() {
  value_ = 0u;
}
::google::protobuf::uint32 NotifyClientRobotAttrChange_Attr::value() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.NotifyClientRobotAttrChange.Attr.value)
  return value_;
}
void NotifyClientRobotAttrChange_Attr::set_value(::google::protobuf::uint32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:NetProto.CS.NotifyClientRobotAttrChange.Attr.value)
}

// uint32 ts = 3;
void NotifyClientRobotAttrChange_Attr::clear_ts() {
  ts_ = 0u;
}
::google::protobuf::uint32 NotifyClientRobotAttrChange_Attr::ts() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.NotifyClientRobotAttrChange.Attr.ts)
  return ts_;
}
void NotifyClientRobotAttrChange_Attr::set_ts(::google::protobuf::uint32 value) {
  
  ts_ = value;
  // @@protoc_insertion_point(field_set:NetProto.CS.NotifyClientRobotAttrChange.Attr.ts)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NotifyClientRobotAttrChange::kHeadFieldNumber;
const int NotifyClientRobotAttrChange::kAllAttrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NotifyClientRobotAttrChange::NotifyClientRobotAttrChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.CS.NotifyClientRobotAttrChange)
}
NotifyClientRobotAttrChange::NotifyClientRobotAttrChange(const NotifyClientRobotAttrChange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      all_attr_(from.all_attr_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::NetProto::MsgHead(*from.head_);
  } else {
    head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NetProto.CS.NotifyClientRobotAttrChange)
}

void NotifyClientRobotAttrChange::SharedCtor() {
  head_ = NULL;
  _cached_size_ = 0;
}

NotifyClientRobotAttrChange::~NotifyClientRobotAttrChange() {
  // @@protoc_insertion_point(destructor:NetProto.CS.NotifyClientRobotAttrChange)
  SharedDtor();
}

void NotifyClientRobotAttrChange::SharedDtor() {
  if (this != internal_default_instance()) {
    delete head_;
  }
}

void NotifyClientRobotAttrChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyClientRobotAttrChange::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NotifyClientRobotAttrChange& NotifyClientRobotAttrChange::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

NotifyClientRobotAttrChange* NotifyClientRobotAttrChange::New(::google::protobuf::Arena* arena) const {
  NotifyClientRobotAttrChange* n = new NotifyClientRobotAttrChange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NotifyClientRobotAttrChange::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.CS.NotifyClientRobotAttrChange)
  all_attr_.Clear();
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
}

bool NotifyClientRobotAttrChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.CS.NotifyClientRobotAttrChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.MsgHead head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NetProto.CS.NotifyClientRobotAttrChange.Attr all_attr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_all_attr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.CS.NotifyClientRobotAttrChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.CS.NotifyClientRobotAttrChange)
  return false;
#undef DO_
}

void NotifyClientRobotAttrChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.CS.NotifyClientRobotAttrChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->head_, output);
  }

  // repeated .NetProto.CS.NotifyClientRobotAttrChange.Attr all_attr = 2;
  for (unsigned int i = 0, n = this->all_attr_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->all_attr(i), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.CS.NotifyClientRobotAttrChange)
}

::google::protobuf::uint8* NotifyClientRobotAttrChange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.CS.NotifyClientRobotAttrChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->head_, deterministic, target);
  }

  // repeated .NetProto.CS.NotifyClientRobotAttrChange.Attr all_attr = 2;
  for (unsigned int i = 0, n = this->all_attr_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->all_attr(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.CS.NotifyClientRobotAttrChange)
  return target;
}

size_t NotifyClientRobotAttrChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.CS.NotifyClientRobotAttrChange)
  size_t total_size = 0;

  // repeated .NetProto.CS.NotifyClientRobotAttrChange.Attr all_attr = 2;
  {
    unsigned int count = this->all_attr_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->all_attr(i));
    }
  }

  // .NetProto.MsgHead head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyClientRobotAttrChange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.CS.NotifyClientRobotAttrChange)
  GOOGLE_DCHECK_NE(&from, this);
  const NotifyClientRobotAttrChange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NotifyClientRobotAttrChange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.CS.NotifyClientRobotAttrChange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.CS.NotifyClientRobotAttrChange)
    MergeFrom(*source);
  }
}

void NotifyClientRobotAttrChange::MergeFrom(const NotifyClientRobotAttrChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.CS.NotifyClientRobotAttrChange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  all_attr_.MergeFrom(from.all_attr_);
  if (from.has_head()) {
    mutable_head()->::NetProto::MsgHead::MergeFrom(from.head());
  }
}

void NotifyClientRobotAttrChange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.CS.NotifyClientRobotAttrChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyClientRobotAttrChange::CopyFrom(const NotifyClientRobotAttrChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.CS.NotifyClientRobotAttrChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyClientRobotAttrChange::IsInitialized() const {
  return true;
}

void NotifyClientRobotAttrChange::Swap(NotifyClientRobotAttrChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotifyClientRobotAttrChange::InternalSwap(NotifyClientRobotAttrChange* other) {
  all_attr_.InternalSwap(&other->all_attr_);
  std::swap(head_, other->head_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NotifyClientRobotAttrChange::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NotifyClientRobotAttrChange

// .NetProto.MsgHead head = 1;
bool NotifyClientRobotAttrChange::has_head() const {
  return this != internal_default_instance() && head_ != NULL;
}
void NotifyClientRobotAttrChange::clear_head() {
  if (GetArenaNoVirtual() == NULL && head_ != NULL) delete head_;
  head_ = NULL;
}
const ::NetProto::MsgHead& NotifyClientRobotAttrChange::head() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.NotifyClientRobotAttrChange.head)
  return head_ != NULL ? *head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
::NetProto::MsgHead* NotifyClientRobotAttrChange::mutable_head() {
  
  if (head_ == NULL) {
    head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.CS.NotifyClientRobotAttrChange.head)
  return head_;
}
::NetProto::MsgHead* NotifyClientRobotAttrChange::release_head() {
  // @@protoc_insertion_point(field_release:NetProto.CS.NotifyClientRobotAttrChange.head)
  
  ::NetProto::MsgHead* temp = head_;
  head_ = NULL;
  return temp;
}
void NotifyClientRobotAttrChange::set_allocated_head(::NetProto::MsgHead* head) {
  delete head_;
  head_ = head;
  if (head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.NotifyClientRobotAttrChange.head)
}

// repeated .NetProto.CS.NotifyClientRobotAttrChange.Attr all_attr = 2;
int NotifyClientRobotAttrChange::all_attr_size() const {
  return all_attr_.size();
}
void NotifyClientRobotAttrChange::clear_all_attr() {
  all_attr_.Clear();
}
const ::NetProto::CS::NotifyClientRobotAttrChange_Attr& NotifyClientRobotAttrChange::all_attr(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.CS.NotifyClientRobotAttrChange.all_attr)
  return all_attr_.Get(index);
}
::NetProto::CS::NotifyClientRobotAttrChange_Attr* NotifyClientRobotAttrChange::mutable_all_attr(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.CS.NotifyClientRobotAttrChange.all_attr)
  return all_attr_.Mutable(index);
}
::NetProto::CS::NotifyClientRobotAttrChange_Attr* NotifyClientRobotAttrChange::add_all_attr() {
  // @@protoc_insertion_point(field_add:NetProto.CS.NotifyClientRobotAttrChange.all_attr)
  return all_attr_.Add();
}
::google::protobuf::RepeatedPtrField< ::NetProto::CS::NotifyClientRobotAttrChange_Attr >*
NotifyClientRobotAttrChange::mutable_all_attr() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.CS.NotifyClientRobotAttrChange.all_attr)
  return &all_attr_;
}
const ::google::protobuf::RepeatedPtrField< ::NetProto::CS::NotifyClientRobotAttrChange_Attr >&
NotifyClientRobotAttrChange::all_attr() const {
  // @@protoc_insertion_point(field_list:NetProto.CS.NotifyClientRobotAttrChange.all_attr)
  return all_attr_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SRegisterReq::kAccountNameFieldNumber;
const int C2SRegisterReq::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SRegisterReq::C2SRegisterReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.CS.C2SRegisterReq)
}
C2SRegisterReq::C2SRegisterReq(const C2SRegisterReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account_name().size() > 0) {
    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:NetProto.CS.C2SRegisterReq)
}

void C2SRegisterReq::SharedCtor() {
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

C2SRegisterReq::~C2SRegisterReq() {
  // @@protoc_insertion_point(destructor:NetProto.CS.C2SRegisterReq)
  SharedDtor();
}

void C2SRegisterReq::SharedDtor() {
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void C2SRegisterReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SRegisterReq::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C2SRegisterReq& C2SRegisterReq::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

C2SRegisterReq* C2SRegisterReq::New(::google::protobuf::Arena* arena) const {
  C2SRegisterReq* n = new C2SRegisterReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SRegisterReq::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.CS.C2SRegisterReq)
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool C2SRegisterReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.CS.C2SRegisterReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string account_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_name().data(), this->account_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.CS.C2SRegisterReq.account_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.CS.C2SRegisterReq.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.CS.C2SRegisterReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.CS.C2SRegisterReq)
  return false;
#undef DO_
}

void C2SRegisterReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.CS.C2SRegisterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string account_name = 1;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SRegisterReq.account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account_name(), output);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SRegisterReq.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.CS.C2SRegisterReq)
}

::google::protobuf::uint8* C2SRegisterReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.CS.C2SRegisterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string account_name = 1;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SRegisterReq.account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account_name(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SRegisterReq.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.CS.C2SRegisterReq)
  return target;
}

size_t C2SRegisterReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.CS.C2SRegisterReq)
  size_t total_size = 0;

  // string account_name = 1;
  if (this->account_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_name());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SRegisterReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.CS.C2SRegisterReq)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SRegisterReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SRegisterReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.CS.C2SRegisterReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.CS.C2SRegisterReq)
    MergeFrom(*source);
  }
}

void C2SRegisterReq::MergeFrom(const C2SRegisterReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.CS.C2SRegisterReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account_name().size() > 0) {

    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void C2SRegisterReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.CS.C2SRegisterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SRegisterReq::CopyFrom(const C2SRegisterReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.CS.C2SRegisterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SRegisterReq::IsInitialized() const {
  return true;
}

void C2SRegisterReq::Swap(C2SRegisterReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SRegisterReq::InternalSwap(C2SRegisterReq* other) {
  account_name_.Swap(&other->account_name_);
  password_.Swap(&other->password_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SRegisterReq::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SRegisterReq

// string account_name = 1;
void C2SRegisterReq::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& C2SRegisterReq::account_name() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SRegisterReq.account_name)
  return account_name_.GetNoArena();
}
void C2SRegisterReq::set_account_name(const ::std::string& value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.CS.C2SRegisterReq.account_name)
}
#if LANG_CXX11
void C2SRegisterReq::set_account_name(::std::string&& value) {
  
  account_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.CS.C2SRegisterReq.account_name)
}
#endif
void C2SRegisterReq::set_account_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.CS.C2SRegisterReq.account_name)
}
void C2SRegisterReq::set_account_name(const char* value, size_t size) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.CS.C2SRegisterReq.account_name)
}
::std::string* C2SRegisterReq::mutable_account_name() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SRegisterReq.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* C2SRegisterReq::release_account_name() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2SRegisterReq.account_name)
  
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void C2SRegisterReq::set_allocated_account_name(::std::string* account_name) {
  if (account_name != NULL) {
    
  } else {
    
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2SRegisterReq.account_name)
}

// string password = 2;
void C2SRegisterReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& C2SRegisterReq::password() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SRegisterReq.password)
  return password_.GetNoArena();
}
void C2SRegisterReq::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.CS.C2SRegisterReq.password)
}
#if LANG_CXX11
void C2SRegisterReq::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.CS.C2SRegisterReq.password)
}
#endif
void C2SRegisterReq::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.CS.C2SRegisterReq.password)
}
void C2SRegisterReq::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.CS.C2SRegisterReq.password)
}
::std::string* C2SRegisterReq::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SRegisterReq.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* C2SRegisterReq::release_password() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2SRegisterReq.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void C2SRegisterReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2SRegisterReq.password)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CRegisterResp::kSuccessFieldNumber;
const int S2CRegisterResp::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CRegisterResp::S2CRegisterResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.CS.S2CRegisterResp)
}
S2CRegisterResp::S2CRegisterResp(const S2CRegisterResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:NetProto.CS.S2CRegisterResp)
}

void S2CRegisterResp::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
  _cached_size_ = 0;
}

S2CRegisterResp::~S2CRegisterResp() {
  // @@protoc_insertion_point(destructor:NetProto.CS.S2CRegisterResp)
  SharedDtor();
}

void S2CRegisterResp::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2CRegisterResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CRegisterResp::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2CRegisterResp& S2CRegisterResp::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

S2CRegisterResp* S2CRegisterResp::New(::google::protobuf::Arena* arena) const {
  S2CRegisterResp* n = new S2CRegisterResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CRegisterResp::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.CS.S2CRegisterResp)
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

bool S2CRegisterResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.CS.S2CRegisterResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), this->error().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.CS.S2CRegisterResp.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.CS.S2CRegisterResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.CS.S2CRegisterResp)
  return false;
#undef DO_
}

void S2CRegisterResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.CS.S2CRegisterResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.S2CRegisterResp.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.CS.S2CRegisterResp)
}

::google::protobuf::uint8* S2CRegisterResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.CS.S2CRegisterResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.S2CRegisterResp.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.CS.S2CRegisterResp)
  return target;
}

size_t S2CRegisterResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.CS.S2CRegisterResp)
  size_t total_size = 0;

  // string error = 2;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CRegisterResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.CS.S2CRegisterResp)
  GOOGLE_DCHECK_NE(&from, this);
  const S2CRegisterResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CRegisterResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.CS.S2CRegisterResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.CS.S2CRegisterResp)
    MergeFrom(*source);
  }
}

void S2CRegisterResp::MergeFrom(const S2CRegisterResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.CS.S2CRegisterResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void S2CRegisterResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.CS.S2CRegisterResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CRegisterResp::CopyFrom(const S2CRegisterResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.CS.S2CRegisterResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CRegisterResp::IsInitialized() const {
  return true;
}

void S2CRegisterResp::Swap(S2CRegisterResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CRegisterResp::InternalSwap(S2CRegisterResp* other) {
  error_.Swap(&other->error_);
  std::swap(success_, other->success_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CRegisterResp::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CRegisterResp

// bool success = 1;
void S2CRegisterResp::clear_success() {
  success_ = false;
}
bool S2CRegisterResp::success() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.S2CRegisterResp.success)
  return success_;
}
void S2CRegisterResp::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:NetProto.CS.S2CRegisterResp.success)
}

// string error = 2;
void S2CRegisterResp::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& S2CRegisterResp::error() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.S2CRegisterResp.error)
  return error_.GetNoArena();
}
void S2CRegisterResp::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.CS.S2CRegisterResp.error)
}
#if LANG_CXX11
void S2CRegisterResp::set_error(::std::string&& value) {
  
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.CS.S2CRegisterResp.error)
}
#endif
void S2CRegisterResp::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.CS.S2CRegisterResp.error)
}
void S2CRegisterResp::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.CS.S2CRegisterResp.error)
}
::std::string* S2CRegisterResp::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.CS.S2CRegisterResp.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* S2CRegisterResp::release_error() {
  // @@protoc_insertion_point(field_release:NetProto.CS.S2CRegisterResp.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void S2CRegisterResp::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.S2CRegisterResp.error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SLoginReq::kAccountNameFieldNumber;
const int C2SLoginReq::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SLoginReq::C2SLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.CS.C2SLoginReq)
}
C2SLoginReq::C2SLoginReq(const C2SLoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account_name().size() > 0) {
    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:NetProto.CS.C2SLoginReq)
}

void C2SLoginReq::SharedCtor() {
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

C2SLoginReq::~C2SLoginReq() {
  // @@protoc_insertion_point(destructor:NetProto.CS.C2SLoginReq)
  SharedDtor();
}

void C2SLoginReq::SharedDtor() {
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void C2SLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SLoginReq::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C2SLoginReq& C2SLoginReq::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

C2SLoginReq* C2SLoginReq::New(::google::protobuf::Arena* arena) const {
  C2SLoginReq* n = new C2SLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.CS.C2SLoginReq)
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool C2SLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.CS.C2SLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string account_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_name().data(), this->account_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.CS.C2SLoginReq.account_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.CS.C2SLoginReq.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.CS.C2SLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.CS.C2SLoginReq)
  return false;
#undef DO_
}

void C2SLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.CS.C2SLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string account_name = 1;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SLoginReq.account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account_name(), output);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SLoginReq.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.CS.C2SLoginReq)
}

::google::protobuf::uint8* C2SLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.CS.C2SLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string account_name = 1;
  if (this->account_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SLoginReq.account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account_name(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SLoginReq.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.CS.C2SLoginReq)
  return target;
}

size_t C2SLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.CS.C2SLoginReq)
  size_t total_size = 0;

  // string account_name = 1;
  if (this->account_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_name());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.CS.C2SLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SLoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.CS.C2SLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.CS.C2SLoginReq)
    MergeFrom(*source);
  }
}

void C2SLoginReq::MergeFrom(const C2SLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.CS.C2SLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account_name().size() > 0) {

    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void C2SLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.CS.C2SLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SLoginReq::CopyFrom(const C2SLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.CS.C2SLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SLoginReq::IsInitialized() const {
  return true;
}

void C2SLoginReq::Swap(C2SLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SLoginReq::InternalSwap(C2SLoginReq* other) {
  account_name_.Swap(&other->account_name_);
  password_.Swap(&other->password_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SLoginReq::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SLoginReq

// string account_name = 1;
void C2SLoginReq::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& C2SLoginReq::account_name() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SLoginReq.account_name)
  return account_name_.GetNoArena();
}
void C2SLoginReq::set_account_name(const ::std::string& value) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.CS.C2SLoginReq.account_name)
}
#if LANG_CXX11
void C2SLoginReq::set_account_name(::std::string&& value) {
  
  account_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.CS.C2SLoginReq.account_name)
}
#endif
void C2SLoginReq::set_account_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.CS.C2SLoginReq.account_name)
}
void C2SLoginReq::set_account_name(const char* value, size_t size) {
  
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.CS.C2SLoginReq.account_name)
}
::std::string* C2SLoginReq::mutable_account_name() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SLoginReq.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* C2SLoginReq::release_account_name() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2SLoginReq.account_name)
  
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void C2SLoginReq::set_allocated_account_name(::std::string* account_name) {
  if (account_name != NULL) {
    
  } else {
    
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2SLoginReq.account_name)
}

// string password = 2;
void C2SLoginReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& C2SLoginReq::password() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SLoginReq.password)
  return password_.GetNoArena();
}
void C2SLoginReq::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.CS.C2SLoginReq.password)
}
#if LANG_CXX11
void C2SLoginReq::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.CS.C2SLoginReq.password)
}
#endif
void C2SLoginReq::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.CS.C2SLoginReq.password)
}
void C2SLoginReq::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.CS.C2SLoginReq.password)
}
::std::string* C2SLoginReq::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SLoginReq.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* C2SLoginReq::release_password() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2SLoginReq.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void C2SLoginReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2SLoginReq.password)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CLoginResp::kSuccessFieldNumber;
const int S2CLoginResp::kErrorFieldNumber;
const int S2CLoginResp::kRobotInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CLoginResp::S2CLoginResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.CS.S2CLoginResp)
}
S2CLoginResp::S2CLoginResp(const S2CLoginResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.has_robotinfo()) {
    robotinfo_ = new ::NetProto::RobotInfo(*from.robotinfo_);
  } else {
    robotinfo_ = NULL;
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:NetProto.CS.S2CLoginResp)
}

void S2CLoginResp::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&robotinfo_, 0, reinterpret_cast<char*>(&success_) -
    reinterpret_cast<char*>(&robotinfo_) + sizeof(success_));
  _cached_size_ = 0;
}

S2CLoginResp::~S2CLoginResp() {
  // @@protoc_insertion_point(destructor:NetProto.CS.S2CLoginResp)
  SharedDtor();
}

void S2CLoginResp::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete robotinfo_;
  }
}

void S2CLoginResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CLoginResp::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2CLoginResp& S2CLoginResp::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

S2CLoginResp* S2CLoginResp::New(::google::protobuf::Arena* arena) const {
  S2CLoginResp* n = new S2CLoginResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CLoginResp::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.CS.S2CLoginResp)
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && robotinfo_ != NULL) {
    delete robotinfo_;
  }
  robotinfo_ = NULL;
  success_ = false;
}

bool S2CLoginResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.CS.S2CLoginResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), this->error().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.CS.S2CLoginResp.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.RobotInfo robotInfo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_robotinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.CS.S2CLoginResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.CS.S2CLoginResp)
  return false;
#undef DO_
}

void S2CLoginResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.CS.S2CLoginResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.S2CLoginResp.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  // .NetProto.RobotInfo robotInfo = 3;
  if (this->has_robotinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->robotinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.CS.S2CLoginResp)
}

::google::protobuf::uint8* S2CLoginResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.CS.S2CLoginResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.S2CLoginResp.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  // .NetProto.RobotInfo robotInfo = 3;
  if (this->has_robotinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->robotinfo_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.CS.S2CLoginResp)
  return target;
}

size_t S2CLoginResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.CS.S2CLoginResp)
  size_t total_size = 0;

  // string error = 2;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // .NetProto.RobotInfo robotInfo = 3;
  if (this->has_robotinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->robotinfo_);
  }

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CLoginResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.CS.S2CLoginResp)
  GOOGLE_DCHECK_NE(&from, this);
  const S2CLoginResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CLoginResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.CS.S2CLoginResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.CS.S2CLoginResp)
    MergeFrom(*source);
  }
}

void S2CLoginResp::MergeFrom(const S2CLoginResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.CS.S2CLoginResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.has_robotinfo()) {
    mutable_robotinfo()->::NetProto::RobotInfo::MergeFrom(from.robotinfo());
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void S2CLoginResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.CS.S2CLoginResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CLoginResp::CopyFrom(const S2CLoginResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.CS.S2CLoginResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CLoginResp::IsInitialized() const {
  return true;
}

void S2CLoginResp::Swap(S2CLoginResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CLoginResp::InternalSwap(S2CLoginResp* other) {
  error_.Swap(&other->error_);
  std::swap(robotinfo_, other->robotinfo_);
  std::swap(success_, other->success_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CLoginResp::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CLoginResp

// bool success = 1;
void S2CLoginResp::clear_success() {
  success_ = false;
}
bool S2CLoginResp::success() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.S2CLoginResp.success)
  return success_;
}
void S2CLoginResp::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:NetProto.CS.S2CLoginResp.success)
}

// string error = 2;
void S2CLoginResp::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& S2CLoginResp::error() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.S2CLoginResp.error)
  return error_.GetNoArena();
}
void S2CLoginResp::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.CS.S2CLoginResp.error)
}
#if LANG_CXX11
void S2CLoginResp::set_error(::std::string&& value) {
  
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.CS.S2CLoginResp.error)
}
#endif
void S2CLoginResp::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.CS.S2CLoginResp.error)
}
void S2CLoginResp::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.CS.S2CLoginResp.error)
}
::std::string* S2CLoginResp::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.CS.S2CLoginResp.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* S2CLoginResp::release_error() {
  // @@protoc_insertion_point(field_release:NetProto.CS.S2CLoginResp.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void S2CLoginResp::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.S2CLoginResp.error)
}

// .NetProto.RobotInfo robotInfo = 3;
bool S2CLoginResp::has_robotinfo() const {
  return this != internal_default_instance() && robotinfo_ != NULL;
}
void S2CLoginResp::clear_robotinfo() {
  if (GetArenaNoVirtual() == NULL && robotinfo_ != NULL) delete robotinfo_;
  robotinfo_ = NULL;
}
const ::NetProto::RobotInfo& S2CLoginResp::robotinfo() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.S2CLoginResp.robotInfo)
  return robotinfo_ != NULL ? *robotinfo_
                         : *::NetProto::RobotInfo::internal_default_instance();
}
::NetProto::RobotInfo* S2CLoginResp::mutable_robotinfo() {
  
  if (robotinfo_ == NULL) {
    robotinfo_ = new ::NetProto::RobotInfo;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.CS.S2CLoginResp.robotInfo)
  return robotinfo_;
}
::NetProto::RobotInfo* S2CLoginResp::release_robotinfo() {
  // @@protoc_insertion_point(field_release:NetProto.CS.S2CLoginResp.robotInfo)
  
  ::NetProto::RobotInfo* temp = robotinfo_;
  robotinfo_ = NULL;
  return temp;
}
void S2CLoginResp::set_allocated_robotinfo(::NetProto::RobotInfo* robotinfo) {
  delete robotinfo_;
  robotinfo_ = robotinfo;
  if (robotinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.S2CLoginResp.robotInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CRoleAction::kMsgHeadFieldNumber;
const int S2CRoleAction::kActionIdFieldNumber;
const int S2CRoleAction::kTypeFieldNumber;
const int S2CRoleAction::kFetchObjFieldNumber;
const int S2CRoleAction::kPutObjFieldNumber;
const int S2CRoleAction::kOperateObjFieldNumber;
const int S2CRoleAction::kSelfActionFieldNumber;
const int S2CRoleAction::kCachedStartDataFieldNumber;
const int S2CRoleAction::kCachedFinishDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CRoleAction::S2CRoleAction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.CS.S2CRoleAction)
}
S2CRoleAction::S2CRoleAction(const S2CRoleAction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_msg_head()) {
    msg_head_ = new ::NetProto::MsgHead(*from.msg_head_);
  } else {
    msg_head_ = NULL;
  }
  if (from.has_fetch_obj()) {
    fetch_obj_ = new ::NetProto::CS::FetchObj(*from.fetch_obj_);
  } else {
    fetch_obj_ = NULL;
  }
  if (from.has_put_obj()) {
    put_obj_ = new ::NetProto::CS::PutObj(*from.put_obj_);
  } else {
    put_obj_ = NULL;
  }
  if (from.has_operate_obj()) {
    operate_obj_ = new ::NetProto::CS::OperateObj(*from.operate_obj_);
  } else {
    operate_obj_ = NULL;
  }
  if (from.has_self_action()) {
    self_action_ = new ::NetProto::CS::SelfAction(*from.self_action_);
  } else {
    self_action_ = NULL;
  }
  if (from.has_cached_start_data()) {
    cached_start_data_ = new ::google::protobuf::Any(*from.cached_start_data_);
  } else {
    cached_start_data_ = NULL;
  }
  if (from.has_cached_finish_data()) {
    cached_finish_data_ = new ::google::protobuf::Any(*from.cached_finish_data_);
  } else {
    cached_finish_data_ = NULL;
  }
  ::memcpy(&action_id_, &from.action_id_,
    reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&action_id_) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:NetProto.CS.S2CRoleAction)
}

void S2CRoleAction::SharedCtor() {
  ::memset(&msg_head_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&msg_head_) + sizeof(type_));
  _cached_size_ = 0;
}

S2CRoleAction::~S2CRoleAction() {
  // @@protoc_insertion_point(destructor:NetProto.CS.S2CRoleAction)
  SharedDtor();
}

void S2CRoleAction::SharedDtor() {
  if (this != internal_default_instance()) {
    delete msg_head_;
  }
  if (this != internal_default_instance()) {
    delete fetch_obj_;
  }
  if (this != internal_default_instance()) {
    delete put_obj_;
  }
  if (this != internal_default_instance()) {
    delete operate_obj_;
  }
  if (this != internal_default_instance()) {
    delete self_action_;
  }
  if (this != internal_default_instance()) {
    delete cached_start_data_;
  }
  if (this != internal_default_instance()) {
    delete cached_finish_data_;
  }
}

void S2CRoleAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CRoleAction::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2CRoleAction& S2CRoleAction::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

S2CRoleAction* S2CRoleAction::New(::google::protobuf::Arena* arena) const {
  S2CRoleAction* n = new S2CRoleAction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CRoleAction::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.CS.S2CRoleAction)
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) {
    delete msg_head_;
  }
  msg_head_ = NULL;
  if (GetArenaNoVirtual() == NULL && fetch_obj_ != NULL) {
    delete fetch_obj_;
  }
  fetch_obj_ = NULL;
  if (GetArenaNoVirtual() == NULL && put_obj_ != NULL) {
    delete put_obj_;
  }
  put_obj_ = NULL;
  if (GetArenaNoVirtual() == NULL && operate_obj_ != NULL) {
    delete operate_obj_;
  }
  operate_obj_ = NULL;
  if (GetArenaNoVirtual() == NULL && self_action_ != NULL) {
    delete self_action_;
  }
  self_action_ = NULL;
  if (GetArenaNoVirtual() == NULL && cached_start_data_ != NULL) {
    delete cached_start_data_;
  }
  cached_start_data_ = NULL;
  if (GetArenaNoVirtual() == NULL && cached_finish_data_ != NULL) {
    delete cached_finish_data_;
  }
  cached_finish_data_ = NULL;
  ::memset(&action_id_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&action_id_) + sizeof(type_));
}

bool S2CRoleAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.CS.S2CRoleAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.MsgHead msg_head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 action_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &action_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.CS.S2CRoleAction.Type type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::NetProto::CS::S2CRoleAction_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.CS.FetchObj fetch_obj = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fetch_obj()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.CS.PutObj put_obj = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_put_obj()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.CS.OperateObj operate_obj = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_operate_obj()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.CS.SelfAction self_action = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_self_action()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any cached_start_data = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cached_start_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any cached_finish_data = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cached_finish_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.CS.S2CRoleAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.CS.S2CRoleAction)
  return false;
#undef DO_
}

void S2CRoleAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.CS.S2CRoleAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msg_head_, output);
  }

  // uint32 action_id = 2;
  if (this->action_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->action_id(), output);
  }

  // .NetProto.CS.S2CRoleAction.Type type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  // .NetProto.CS.FetchObj fetch_obj = 4;
  if (this->has_fetch_obj()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->fetch_obj_, output);
  }

  // .NetProto.CS.PutObj put_obj = 5;
  if (this->has_put_obj()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->put_obj_, output);
  }

  // .NetProto.CS.OperateObj operate_obj = 6;
  if (this->has_operate_obj()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->operate_obj_, output);
  }

  // .NetProto.CS.SelfAction self_action = 7;
  if (this->has_self_action()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->self_action_, output);
  }

  // .google.protobuf.Any cached_start_data = 8;
  if (this->has_cached_start_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->cached_start_data_, output);
  }

  // .google.protobuf.Any cached_finish_data = 9;
  if (this->has_cached_finish_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->cached_finish_data_, output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.CS.S2CRoleAction)
}

::google::protobuf::uint8* S2CRoleAction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.CS.S2CRoleAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msg_head_, deterministic, target);
  }

  // uint32 action_id = 2;
  if (this->action_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->action_id(), target);
  }

  // .NetProto.CS.S2CRoleAction.Type type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  // .NetProto.CS.FetchObj fetch_obj = 4;
  if (this->has_fetch_obj()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->fetch_obj_, deterministic, target);
  }

  // .NetProto.CS.PutObj put_obj = 5;
  if (this->has_put_obj()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->put_obj_, deterministic, target);
  }

  // .NetProto.CS.OperateObj operate_obj = 6;
  if (this->has_operate_obj()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->operate_obj_, deterministic, target);
  }

  // .NetProto.CS.SelfAction self_action = 7;
  if (this->has_self_action()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->self_action_, deterministic, target);
  }

  // .google.protobuf.Any cached_start_data = 8;
  if (this->has_cached_start_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->cached_start_data_, deterministic, target);
  }

  // .google.protobuf.Any cached_finish_data = 9;
  if (this->has_cached_finish_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->cached_finish_data_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.CS.S2CRoleAction)
  return target;
}

size_t S2CRoleAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.CS.S2CRoleAction)
  size_t total_size = 0;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_head_);
  }

  // .NetProto.CS.FetchObj fetch_obj = 4;
  if (this->has_fetch_obj()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->fetch_obj_);
  }

  // .NetProto.CS.PutObj put_obj = 5;
  if (this->has_put_obj()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->put_obj_);
  }

  // .NetProto.CS.OperateObj operate_obj = 6;
  if (this->has_operate_obj()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->operate_obj_);
  }

  // .NetProto.CS.SelfAction self_action = 7;
  if (this->has_self_action()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->self_action_);
  }

  // .google.protobuf.Any cached_start_data = 8;
  if (this->has_cached_start_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cached_start_data_);
  }

  // .google.protobuf.Any cached_finish_data = 9;
  if (this->has_cached_finish_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cached_finish_data_);
  }

  // uint32 action_id = 2;
  if (this->action_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->action_id());
  }

  // .NetProto.CS.S2CRoleAction.Type type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CRoleAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.CS.S2CRoleAction)
  GOOGLE_DCHECK_NE(&from, this);
  const S2CRoleAction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CRoleAction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.CS.S2CRoleAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.CS.S2CRoleAction)
    MergeFrom(*source);
  }
}

void S2CRoleAction::MergeFrom(const S2CRoleAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.CS.S2CRoleAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_msg_head()) {
    mutable_msg_head()->::NetProto::MsgHead::MergeFrom(from.msg_head());
  }
  if (from.has_fetch_obj()) {
    mutable_fetch_obj()->::NetProto::CS::FetchObj::MergeFrom(from.fetch_obj());
  }
  if (from.has_put_obj()) {
    mutable_put_obj()->::NetProto::CS::PutObj::MergeFrom(from.put_obj());
  }
  if (from.has_operate_obj()) {
    mutable_operate_obj()->::NetProto::CS::OperateObj::MergeFrom(from.operate_obj());
  }
  if (from.has_self_action()) {
    mutable_self_action()->::NetProto::CS::SelfAction::MergeFrom(from.self_action());
  }
  if (from.has_cached_start_data()) {
    mutable_cached_start_data()->::google::protobuf::Any::MergeFrom(from.cached_start_data());
  }
  if (from.has_cached_finish_data()) {
    mutable_cached_finish_data()->::google::protobuf::Any::MergeFrom(from.cached_finish_data());
  }
  if (from.action_id() != 0) {
    set_action_id(from.action_id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void S2CRoleAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.CS.S2CRoleAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CRoleAction::CopyFrom(const S2CRoleAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.CS.S2CRoleAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CRoleAction::IsInitialized() const {
  return true;
}

void S2CRoleAction::Swap(S2CRoleAction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CRoleAction::InternalSwap(S2CRoleAction* other) {
  std::swap(msg_head_, other->msg_head_);
  std::swap(fetch_obj_, other->fetch_obj_);
  std::swap(put_obj_, other->put_obj_);
  std::swap(operate_obj_, other->operate_obj_);
  std::swap(self_action_, other->self_action_);
  std::swap(cached_start_data_, other->cached_start_data_);
  std::swap(cached_finish_data_, other->cached_finish_data_);
  std::swap(action_id_, other->action_id_);
  std::swap(type_, other->type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CRoleAction::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CRoleAction

// .NetProto.MsgHead msg_head = 1;
bool S2CRoleAction::has_msg_head() const {
  return this != internal_default_instance() && msg_head_ != NULL;
}
void S2CRoleAction::clear_msg_head() {
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) delete msg_head_;
  msg_head_ = NULL;
}
const ::NetProto::MsgHead& S2CRoleAction::msg_head() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.S2CRoleAction.msg_head)
  return msg_head_ != NULL ? *msg_head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
::NetProto::MsgHead* S2CRoleAction::mutable_msg_head() {
  
  if (msg_head_ == NULL) {
    msg_head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.CS.S2CRoleAction.msg_head)
  return msg_head_;
}
::NetProto::MsgHead* S2CRoleAction::release_msg_head() {
  // @@protoc_insertion_point(field_release:NetProto.CS.S2CRoleAction.msg_head)
  
  ::NetProto::MsgHead* temp = msg_head_;
  msg_head_ = NULL;
  return temp;
}
void S2CRoleAction::set_allocated_msg_head(::NetProto::MsgHead* msg_head) {
  delete msg_head_;
  msg_head_ = msg_head;
  if (msg_head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.S2CRoleAction.msg_head)
}

// uint32 action_id = 2;
void S2CRoleAction::clear_action_id() {
  action_id_ = 0u;
}
::google::protobuf::uint32 S2CRoleAction::action_id() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.S2CRoleAction.action_id)
  return action_id_;
}
void S2CRoleAction::set_action_id(::google::protobuf::uint32 value) {
  
  action_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.CS.S2CRoleAction.action_id)
}

// .NetProto.CS.S2CRoleAction.Type type = 3;
void S2CRoleAction::clear_type() {
  type_ = 0;
}
::NetProto::CS::S2CRoleAction_Type S2CRoleAction::type() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.S2CRoleAction.type)
  return static_cast< ::NetProto::CS::S2CRoleAction_Type >(type_);
}
void S2CRoleAction::set_type(::NetProto::CS::S2CRoleAction_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetProto.CS.S2CRoleAction.type)
}

// .NetProto.CS.FetchObj fetch_obj = 4;
bool S2CRoleAction::has_fetch_obj() const {
  return this != internal_default_instance() && fetch_obj_ != NULL;
}
void S2CRoleAction::clear_fetch_obj() {
  if (GetArenaNoVirtual() == NULL && fetch_obj_ != NULL) delete fetch_obj_;
  fetch_obj_ = NULL;
}
const ::NetProto::CS::FetchObj& S2CRoleAction::fetch_obj() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.S2CRoleAction.fetch_obj)
  return fetch_obj_ != NULL ? *fetch_obj_
                         : *::NetProto::CS::FetchObj::internal_default_instance();
}
::NetProto::CS::FetchObj* S2CRoleAction::mutable_fetch_obj() {
  
  if (fetch_obj_ == NULL) {
    fetch_obj_ = new ::NetProto::CS::FetchObj;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.CS.S2CRoleAction.fetch_obj)
  return fetch_obj_;
}
::NetProto::CS::FetchObj* S2CRoleAction::release_fetch_obj() {
  // @@protoc_insertion_point(field_release:NetProto.CS.S2CRoleAction.fetch_obj)
  
  ::NetProto::CS::FetchObj* temp = fetch_obj_;
  fetch_obj_ = NULL;
  return temp;
}
void S2CRoleAction::set_allocated_fetch_obj(::NetProto::CS::FetchObj* fetch_obj) {
  delete fetch_obj_;
  fetch_obj_ = fetch_obj;
  if (fetch_obj) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.S2CRoleAction.fetch_obj)
}

// .NetProto.CS.PutObj put_obj = 5;
bool S2CRoleAction::has_put_obj() const {
  return this != internal_default_instance() && put_obj_ != NULL;
}
void S2CRoleAction::clear_put_obj() {
  if (GetArenaNoVirtual() == NULL && put_obj_ != NULL) delete put_obj_;
  put_obj_ = NULL;
}
const ::NetProto::CS::PutObj& S2CRoleAction::put_obj() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.S2CRoleAction.put_obj)
  return put_obj_ != NULL ? *put_obj_
                         : *::NetProto::CS::PutObj::internal_default_instance();
}
::NetProto::CS::PutObj* S2CRoleAction::mutable_put_obj() {
  
  if (put_obj_ == NULL) {
    put_obj_ = new ::NetProto::CS::PutObj;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.CS.S2CRoleAction.put_obj)
  return put_obj_;
}
::NetProto::CS::PutObj* S2CRoleAction::release_put_obj() {
  // @@protoc_insertion_point(field_release:NetProto.CS.S2CRoleAction.put_obj)
  
  ::NetProto::CS::PutObj* temp = put_obj_;
  put_obj_ = NULL;
  return temp;
}
void S2CRoleAction::set_allocated_put_obj(::NetProto::CS::PutObj* put_obj) {
  delete put_obj_;
  put_obj_ = put_obj;
  if (put_obj) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.S2CRoleAction.put_obj)
}

// .NetProto.CS.OperateObj operate_obj = 6;
bool S2CRoleAction::has_operate_obj() const {
  return this != internal_default_instance() && operate_obj_ != NULL;
}
void S2CRoleAction::clear_operate_obj() {
  if (GetArenaNoVirtual() == NULL && operate_obj_ != NULL) delete operate_obj_;
  operate_obj_ = NULL;
}
const ::NetProto::CS::OperateObj& S2CRoleAction::operate_obj() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.S2CRoleAction.operate_obj)
  return operate_obj_ != NULL ? *operate_obj_
                         : *::NetProto::CS::OperateObj::internal_default_instance();
}
::NetProto::CS::OperateObj* S2CRoleAction::mutable_operate_obj() {
  
  if (operate_obj_ == NULL) {
    operate_obj_ = new ::NetProto::CS::OperateObj;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.CS.S2CRoleAction.operate_obj)
  return operate_obj_;
}
::NetProto::CS::OperateObj* S2CRoleAction::release_operate_obj() {
  // @@protoc_insertion_point(field_release:NetProto.CS.S2CRoleAction.operate_obj)
  
  ::NetProto::CS::OperateObj* temp = operate_obj_;
  operate_obj_ = NULL;
  return temp;
}
void S2CRoleAction::set_allocated_operate_obj(::NetProto::CS::OperateObj* operate_obj) {
  delete operate_obj_;
  operate_obj_ = operate_obj;
  if (operate_obj) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.S2CRoleAction.operate_obj)
}

// .NetProto.CS.SelfAction self_action = 7;
bool S2CRoleAction::has_self_action() const {
  return this != internal_default_instance() && self_action_ != NULL;
}
void S2CRoleAction::clear_self_action() {
  if (GetArenaNoVirtual() == NULL && self_action_ != NULL) delete self_action_;
  self_action_ = NULL;
}
const ::NetProto::CS::SelfAction& S2CRoleAction::self_action() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.S2CRoleAction.self_action)
  return self_action_ != NULL ? *self_action_
                         : *::NetProto::CS::SelfAction::internal_default_instance();
}
::NetProto::CS::SelfAction* S2CRoleAction::mutable_self_action() {
  
  if (self_action_ == NULL) {
    self_action_ = new ::NetProto::CS::SelfAction;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.CS.S2CRoleAction.self_action)
  return self_action_;
}
::NetProto::CS::SelfAction* S2CRoleAction::release_self_action() {
  // @@protoc_insertion_point(field_release:NetProto.CS.S2CRoleAction.self_action)
  
  ::NetProto::CS::SelfAction* temp = self_action_;
  self_action_ = NULL;
  return temp;
}
void S2CRoleAction::set_allocated_self_action(::NetProto::CS::SelfAction* self_action) {
  delete self_action_;
  self_action_ = self_action;
  if (self_action) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.S2CRoleAction.self_action)
}

// .google.protobuf.Any cached_start_data = 8;
bool S2CRoleAction::has_cached_start_data() const {
  return this != internal_default_instance() && cached_start_data_ != NULL;
}
void S2CRoleAction::clear_cached_start_data() {
  if (GetArenaNoVirtual() == NULL && cached_start_data_ != NULL) delete cached_start_data_;
  cached_start_data_ = NULL;
}
const ::google::protobuf::Any& S2CRoleAction::cached_start_data() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.S2CRoleAction.cached_start_data)
  return cached_start_data_ != NULL ? *cached_start_data_
                         : *::google::protobuf::Any::internal_default_instance();
}
::google::protobuf::Any* S2CRoleAction::mutable_cached_start_data() {
  
  if (cached_start_data_ == NULL) {
    cached_start_data_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.CS.S2CRoleAction.cached_start_data)
  return cached_start_data_;
}
::google::protobuf::Any* S2CRoleAction::release_cached_start_data() {
  // @@protoc_insertion_point(field_release:NetProto.CS.S2CRoleAction.cached_start_data)
  
  ::google::protobuf::Any* temp = cached_start_data_;
  cached_start_data_ = NULL;
  return temp;
}
void S2CRoleAction::set_allocated_cached_start_data(::google::protobuf::Any* cached_start_data) {
  delete cached_start_data_;
  cached_start_data_ = cached_start_data;
  if (cached_start_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.S2CRoleAction.cached_start_data)
}

// .google.protobuf.Any cached_finish_data = 9;
bool S2CRoleAction::has_cached_finish_data() const {
  return this != internal_default_instance() && cached_finish_data_ != NULL;
}
void S2CRoleAction::clear_cached_finish_data() {
  if (GetArenaNoVirtual() == NULL && cached_finish_data_ != NULL) delete cached_finish_data_;
  cached_finish_data_ = NULL;
}
const ::google::protobuf::Any& S2CRoleAction::cached_finish_data() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.S2CRoleAction.cached_finish_data)
  return cached_finish_data_ != NULL ? *cached_finish_data_
                         : *::google::protobuf::Any::internal_default_instance();
}
::google::protobuf::Any* S2CRoleAction::mutable_cached_finish_data() {
  
  if (cached_finish_data_ == NULL) {
    cached_finish_data_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.CS.S2CRoleAction.cached_finish_data)
  return cached_finish_data_;
}
::google::protobuf::Any* S2CRoleAction::release_cached_finish_data() {
  // @@protoc_insertion_point(field_release:NetProto.CS.S2CRoleAction.cached_finish_data)
  
  ::google::protobuf::Any* temp = cached_finish_data_;
  cached_finish_data_ = NULL;
  return temp;
}
void S2CRoleAction::set_allocated_cached_finish_data(::google::protobuf::Any* cached_finish_data) {
  delete cached_finish_data_;
  cached_finish_data_ = cached_finish_data;
  if (cached_finish_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.S2CRoleAction.cached_finish_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CVoiceSpeech::kMsgHeadFieldNumber;
const int S2CVoiceSpeech::kIdFieldNumber;
const int S2CVoiceSpeech::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CVoiceSpeech::S2CVoiceSpeech()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.CS.S2CVoiceSpeech)
}
S2CVoiceSpeech::S2CVoiceSpeech(const S2CVoiceSpeech& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.has_msg_head()) {
    msg_head_ = new ::NetProto::MsgHead(*from.msg_head_);
  } else {
    msg_head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NetProto.CS.S2CVoiceSpeech)
}

void S2CVoiceSpeech::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_head_ = NULL;
  _cached_size_ = 0;
}

S2CVoiceSpeech::~S2CVoiceSpeech() {
  // @@protoc_insertion_point(destructor:NetProto.CS.S2CVoiceSpeech)
  SharedDtor();
}

void S2CVoiceSpeech::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete msg_head_;
  }
}

void S2CVoiceSpeech::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CVoiceSpeech::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2CVoiceSpeech& S2CVoiceSpeech::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

S2CVoiceSpeech* S2CVoiceSpeech::New(::google::protobuf::Arena* arena) const {
  S2CVoiceSpeech* n = new S2CVoiceSpeech;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CVoiceSpeech::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.CS.S2CVoiceSpeech)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) {
    delete msg_head_;
  }
  msg_head_ = NULL;
}

bool S2CVoiceSpeech::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.CS.S2CVoiceSpeech)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.MsgHead msg_head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.CS.S2CVoiceSpeech.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.CS.S2CVoiceSpeech.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.CS.S2CVoiceSpeech)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.CS.S2CVoiceSpeech)
  return false;
#undef DO_
}

void S2CVoiceSpeech::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.CS.S2CVoiceSpeech)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msg_head_, output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.S2CVoiceSpeech.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // string text = 3;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.S2CVoiceSpeech.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->text(), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.CS.S2CVoiceSpeech)
}

::google::protobuf::uint8* S2CVoiceSpeech::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.CS.S2CVoiceSpeech)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msg_head_, deterministic, target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.S2CVoiceSpeech.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // string text = 3;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.S2CVoiceSpeech.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->text(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.CS.S2CVoiceSpeech)
  return target;
}

size_t S2CVoiceSpeech::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.CS.S2CVoiceSpeech)
  size_t total_size = 0;

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string text = 3;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CVoiceSpeech::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.CS.S2CVoiceSpeech)
  GOOGLE_DCHECK_NE(&from, this);
  const S2CVoiceSpeech* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CVoiceSpeech>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.CS.S2CVoiceSpeech)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.CS.S2CVoiceSpeech)
    MergeFrom(*source);
  }
}

void S2CVoiceSpeech::MergeFrom(const S2CVoiceSpeech& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.CS.S2CVoiceSpeech)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.has_msg_head()) {
    mutable_msg_head()->::NetProto::MsgHead::MergeFrom(from.msg_head());
  }
}

void S2CVoiceSpeech::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.CS.S2CVoiceSpeech)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CVoiceSpeech::CopyFrom(const S2CVoiceSpeech& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.CS.S2CVoiceSpeech)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CVoiceSpeech::IsInitialized() const {
  return true;
}

void S2CVoiceSpeech::Swap(S2CVoiceSpeech* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CVoiceSpeech::InternalSwap(S2CVoiceSpeech* other) {
  id_.Swap(&other->id_);
  text_.Swap(&other->text_);
  std::swap(msg_head_, other->msg_head_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CVoiceSpeech::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CVoiceSpeech

// .NetProto.MsgHead msg_head = 1;
bool S2CVoiceSpeech::has_msg_head() const {
  return this != internal_default_instance() && msg_head_ != NULL;
}
void S2CVoiceSpeech::clear_msg_head() {
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) delete msg_head_;
  msg_head_ = NULL;
}
const ::NetProto::MsgHead& S2CVoiceSpeech::msg_head() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.S2CVoiceSpeech.msg_head)
  return msg_head_ != NULL ? *msg_head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
::NetProto::MsgHead* S2CVoiceSpeech::mutable_msg_head() {
  
  if (msg_head_ == NULL) {
    msg_head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.CS.S2CVoiceSpeech.msg_head)
  return msg_head_;
}
::NetProto::MsgHead* S2CVoiceSpeech::release_msg_head() {
  // @@protoc_insertion_point(field_release:NetProto.CS.S2CVoiceSpeech.msg_head)
  
  ::NetProto::MsgHead* temp = msg_head_;
  msg_head_ = NULL;
  return temp;
}
void S2CVoiceSpeech::set_allocated_msg_head(::NetProto::MsgHead* msg_head) {
  delete msg_head_;
  msg_head_ = msg_head;
  if (msg_head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.S2CVoiceSpeech.msg_head)
}

// string id = 2;
void S2CVoiceSpeech::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& S2CVoiceSpeech::id() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.S2CVoiceSpeech.id)
  return id_.GetNoArena();
}
void S2CVoiceSpeech::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.CS.S2CVoiceSpeech.id)
}
#if LANG_CXX11
void S2CVoiceSpeech::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.CS.S2CVoiceSpeech.id)
}
#endif
void S2CVoiceSpeech::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.CS.S2CVoiceSpeech.id)
}
void S2CVoiceSpeech::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.CS.S2CVoiceSpeech.id)
}
::std::string* S2CVoiceSpeech::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.CS.S2CVoiceSpeech.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* S2CVoiceSpeech::release_id() {
  // @@protoc_insertion_point(field_release:NetProto.CS.S2CVoiceSpeech.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void S2CVoiceSpeech::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.S2CVoiceSpeech.id)
}

// string text = 3;
void S2CVoiceSpeech::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& S2CVoiceSpeech::text() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.S2CVoiceSpeech.text)
  return text_.GetNoArena();
}
void S2CVoiceSpeech::set_text(const ::std::string& value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.CS.S2CVoiceSpeech.text)
}
#if LANG_CXX11
void S2CVoiceSpeech::set_text(::std::string&& value) {
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.CS.S2CVoiceSpeech.text)
}
#endif
void S2CVoiceSpeech::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.CS.S2CVoiceSpeech.text)
}
void S2CVoiceSpeech::set_text(const char* value, size_t size) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.CS.S2CVoiceSpeech.text)
}
::std::string* S2CVoiceSpeech::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.CS.S2CVoiceSpeech.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* S2CVoiceSpeech::release_text() {
  // @@protoc_insertion_point(field_release:NetProto.CS.S2CVoiceSpeech.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void S2CVoiceSpeech::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.S2CVoiceSpeech.text)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SWalkFinish::kMsgHeadFieldNumber;
const int C2SWalkFinish::kRolePosFieldNumber;
const int C2SWalkFinish::kRoleRotFieldNumber;
const int C2SWalkFinish::kRelationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SWalkFinish::C2SWalkFinish()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.CS.C2SWalkFinish)
}
C2SWalkFinish::C2SWalkFinish(const C2SWalkFinish& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      relation_(from.relation_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_msg_head()) {
    msg_head_ = new ::NetProto::MsgHead(*from.msg_head_);
  } else {
    msg_head_ = NULL;
  }
  if (from.has_role_pos()) {
    role_pos_ = new ::NetProto::Vector3(*from.role_pos_);
  } else {
    role_pos_ = NULL;
  }
  if (from.has_role_rot()) {
    role_rot_ = new ::NetProto::Quaternion(*from.role_rot_);
  } else {
    role_rot_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NetProto.CS.C2SWalkFinish)
}

void C2SWalkFinish::SharedCtor() {
  ::memset(&msg_head_, 0, reinterpret_cast<char*>(&role_rot_) -
    reinterpret_cast<char*>(&msg_head_) + sizeof(role_rot_));
  _cached_size_ = 0;
}

C2SWalkFinish::~C2SWalkFinish() {
  // @@protoc_insertion_point(destructor:NetProto.CS.C2SWalkFinish)
  SharedDtor();
}

void C2SWalkFinish::SharedDtor() {
  if (this != internal_default_instance()) {
    delete msg_head_;
  }
  if (this != internal_default_instance()) {
    delete role_pos_;
  }
  if (this != internal_default_instance()) {
    delete role_rot_;
  }
}

void C2SWalkFinish::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SWalkFinish::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C2SWalkFinish& C2SWalkFinish::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

C2SWalkFinish* C2SWalkFinish::New(::google::protobuf::Arena* arena) const {
  C2SWalkFinish* n = new C2SWalkFinish;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SWalkFinish::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.CS.C2SWalkFinish)
  relation_.Clear();
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) {
    delete msg_head_;
  }
  msg_head_ = NULL;
  if (GetArenaNoVirtual() == NULL && role_pos_ != NULL) {
    delete role_pos_;
  }
  role_pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && role_rot_ != NULL) {
    delete role_rot_;
  }
  role_rot_ = NULL;
}

bool C2SWalkFinish::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.CS.C2SWalkFinish)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.MsgHead msg_head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.Vector3 role_pos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_role_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.Quaternion role_rot = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_role_rot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NetProto.ObjPosRelation relation = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_relation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.CS.C2SWalkFinish)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.CS.C2SWalkFinish)
  return false;
#undef DO_
}

void C2SWalkFinish::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.CS.C2SWalkFinish)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msg_head_, output);
  }

  // .NetProto.Vector3 role_pos = 3;
  if (this->has_role_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->role_pos_, output);
  }

  // .NetProto.Quaternion role_rot = 4;
  if (this->has_role_rot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->role_rot_, output);
  }

  // repeated .NetProto.ObjPosRelation relation = 5;
  for (unsigned int i = 0, n = this->relation_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->relation(i), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.CS.C2SWalkFinish)
}

::google::protobuf::uint8* C2SWalkFinish::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.CS.C2SWalkFinish)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msg_head_, deterministic, target);
  }

  // .NetProto.Vector3 role_pos = 3;
  if (this->has_role_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->role_pos_, deterministic, target);
  }

  // .NetProto.Quaternion role_rot = 4;
  if (this->has_role_rot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->role_rot_, deterministic, target);
  }

  // repeated .NetProto.ObjPosRelation relation = 5;
  for (unsigned int i = 0, n = this->relation_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->relation(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.CS.C2SWalkFinish)
  return target;
}

size_t C2SWalkFinish::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.CS.C2SWalkFinish)
  size_t total_size = 0;

  // repeated .NetProto.ObjPosRelation relation = 5;
  {
    unsigned int count = this->relation_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->relation(i));
    }
  }

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_head_);
  }

  // .NetProto.Vector3 role_pos = 3;
  if (this->has_role_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->role_pos_);
  }

  // .NetProto.Quaternion role_rot = 4;
  if (this->has_role_rot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->role_rot_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SWalkFinish::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.CS.C2SWalkFinish)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SWalkFinish* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SWalkFinish>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.CS.C2SWalkFinish)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.CS.C2SWalkFinish)
    MergeFrom(*source);
  }
}

void C2SWalkFinish::MergeFrom(const C2SWalkFinish& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.CS.C2SWalkFinish)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  relation_.MergeFrom(from.relation_);
  if (from.has_msg_head()) {
    mutable_msg_head()->::NetProto::MsgHead::MergeFrom(from.msg_head());
  }
  if (from.has_role_pos()) {
    mutable_role_pos()->::NetProto::Vector3::MergeFrom(from.role_pos());
  }
  if (from.has_role_rot()) {
    mutable_role_rot()->::NetProto::Quaternion::MergeFrom(from.role_rot());
  }
}

void C2SWalkFinish::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.CS.C2SWalkFinish)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SWalkFinish::CopyFrom(const C2SWalkFinish& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.CS.C2SWalkFinish)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SWalkFinish::IsInitialized() const {
  return true;
}

void C2SWalkFinish::Swap(C2SWalkFinish* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SWalkFinish::InternalSwap(C2SWalkFinish* other) {
  relation_.InternalSwap(&other->relation_);
  std::swap(msg_head_, other->msg_head_);
  std::swap(role_pos_, other->role_pos_);
  std::swap(role_rot_, other->role_rot_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SWalkFinish::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SWalkFinish

// .NetProto.MsgHead msg_head = 1;
bool C2SWalkFinish::has_msg_head() const {
  return this != internal_default_instance() && msg_head_ != NULL;
}
void C2SWalkFinish::clear_msg_head() {
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) delete msg_head_;
  msg_head_ = NULL;
}
const ::NetProto::MsgHead& C2SWalkFinish::msg_head() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SWalkFinish.msg_head)
  return msg_head_ != NULL ? *msg_head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
::NetProto::MsgHead* C2SWalkFinish::mutable_msg_head() {
  
  if (msg_head_ == NULL) {
    msg_head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SWalkFinish.msg_head)
  return msg_head_;
}
::NetProto::MsgHead* C2SWalkFinish::release_msg_head() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2SWalkFinish.msg_head)
  
  ::NetProto::MsgHead* temp = msg_head_;
  msg_head_ = NULL;
  return temp;
}
void C2SWalkFinish::set_allocated_msg_head(::NetProto::MsgHead* msg_head) {
  delete msg_head_;
  msg_head_ = msg_head;
  if (msg_head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2SWalkFinish.msg_head)
}

// .NetProto.Vector3 role_pos = 3;
bool C2SWalkFinish::has_role_pos() const {
  return this != internal_default_instance() && role_pos_ != NULL;
}
void C2SWalkFinish::clear_role_pos() {
  if (GetArenaNoVirtual() == NULL && role_pos_ != NULL) delete role_pos_;
  role_pos_ = NULL;
}
const ::NetProto::Vector3& C2SWalkFinish::role_pos() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SWalkFinish.role_pos)
  return role_pos_ != NULL ? *role_pos_
                         : *::NetProto::Vector3::internal_default_instance();
}
::NetProto::Vector3* C2SWalkFinish::mutable_role_pos() {
  
  if (role_pos_ == NULL) {
    role_pos_ = new ::NetProto::Vector3;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SWalkFinish.role_pos)
  return role_pos_;
}
::NetProto::Vector3* C2SWalkFinish::release_role_pos() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2SWalkFinish.role_pos)
  
  ::NetProto::Vector3* temp = role_pos_;
  role_pos_ = NULL;
  return temp;
}
void C2SWalkFinish::set_allocated_role_pos(::NetProto::Vector3* role_pos) {
  delete role_pos_;
  role_pos_ = role_pos;
  if (role_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2SWalkFinish.role_pos)
}

// .NetProto.Quaternion role_rot = 4;
bool C2SWalkFinish::has_role_rot() const {
  return this != internal_default_instance() && role_rot_ != NULL;
}
void C2SWalkFinish::clear_role_rot() {
  if (GetArenaNoVirtual() == NULL && role_rot_ != NULL) delete role_rot_;
  role_rot_ = NULL;
}
const ::NetProto::Quaternion& C2SWalkFinish::role_rot() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SWalkFinish.role_rot)
  return role_rot_ != NULL ? *role_rot_
                         : *::NetProto::Quaternion::internal_default_instance();
}
::NetProto::Quaternion* C2SWalkFinish::mutable_role_rot() {
  
  if (role_rot_ == NULL) {
    role_rot_ = new ::NetProto::Quaternion;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SWalkFinish.role_rot)
  return role_rot_;
}
::NetProto::Quaternion* C2SWalkFinish::release_role_rot() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2SWalkFinish.role_rot)
  
  ::NetProto::Quaternion* temp = role_rot_;
  role_rot_ = NULL;
  return temp;
}
void C2SWalkFinish::set_allocated_role_rot(::NetProto::Quaternion* role_rot) {
  delete role_rot_;
  role_rot_ = role_rot;
  if (role_rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2SWalkFinish.role_rot)
}

// repeated .NetProto.ObjPosRelation relation = 5;
int C2SWalkFinish::relation_size() const {
  return relation_.size();
}
void C2SWalkFinish::clear_relation() {
  relation_.Clear();
}
const ::NetProto::ObjPosRelation& C2SWalkFinish::relation(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SWalkFinish.relation)
  return relation_.Get(index);
}
::NetProto::ObjPosRelation* C2SWalkFinish::mutable_relation(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SWalkFinish.relation)
  return relation_.Mutable(index);
}
::NetProto::ObjPosRelation* C2SWalkFinish::add_relation() {
  // @@protoc_insertion_point(field_add:NetProto.CS.C2SWalkFinish.relation)
  return relation_.Add();
}
::google::protobuf::RepeatedPtrField< ::NetProto::ObjPosRelation >*
C2SWalkFinish::mutable_relation() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.CS.C2SWalkFinish.relation)
  return &relation_;
}
const ::google::protobuf::RepeatedPtrField< ::NetProto::ObjPosRelation >&
C2SWalkFinish::relation() const {
  // @@protoc_insertion_point(field_list:NetProto.CS.C2SWalkFinish.relation)
  return relation_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SActionStatus::kMsgHeadFieldNumber;
const int C2SActionStatus::kTypeFieldNumber;
const int C2SActionStatus::kActionIdFieldNumber;
const int C2SActionStatus::kCachedDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SActionStatus::C2SActionStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.CS.C2SActionStatus)
}
C2SActionStatus::C2SActionStatus(const C2SActionStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_msg_head()) {
    msg_head_ = new ::NetProto::MsgHead(*from.msg_head_);
  } else {
    msg_head_ = NULL;
  }
  if (from.has_cached_data()) {
    cached_data_ = new ::google::protobuf::Any(*from.cached_data_);
  } else {
    cached_data_ = NULL;
  }
  ::memcpy(&type_, &from.type_,
    reinterpret_cast<char*>(&action_id_) -
    reinterpret_cast<char*>(&type_) + sizeof(action_id_));
  // @@protoc_insertion_point(copy_constructor:NetProto.CS.C2SActionStatus)
}

void C2SActionStatus::SharedCtor() {
  ::memset(&msg_head_, 0, reinterpret_cast<char*>(&action_id_) -
    reinterpret_cast<char*>(&msg_head_) + sizeof(action_id_));
  _cached_size_ = 0;
}

C2SActionStatus::~C2SActionStatus() {
  // @@protoc_insertion_point(destructor:NetProto.CS.C2SActionStatus)
  SharedDtor();
}

void C2SActionStatus::SharedDtor() {
  if (this != internal_default_instance()) {
    delete msg_head_;
  }
  if (this != internal_default_instance()) {
    delete cached_data_;
  }
}

void C2SActionStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SActionStatus::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C2SActionStatus& C2SActionStatus::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

C2SActionStatus* C2SActionStatus::New(::google::protobuf::Arena* arena) const {
  C2SActionStatus* n = new C2SActionStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SActionStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.CS.C2SActionStatus)
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) {
    delete msg_head_;
  }
  msg_head_ = NULL;
  if (GetArenaNoVirtual() == NULL && cached_data_ != NULL) {
    delete cached_data_;
  }
  cached_data_ = NULL;
  ::memset(&type_, 0, reinterpret_cast<char*>(&action_id_) -
    reinterpret_cast<char*>(&type_) + sizeof(action_id_));
}

bool C2SActionStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.CS.C2SActionStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.MsgHead msg_head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.CS.C2SActionStatus.Type type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::NetProto::CS::C2SActionStatus_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 action_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &action_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any cached_data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cached_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.CS.C2SActionStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.CS.C2SActionStatus)
  return false;
#undef DO_
}

void C2SActionStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.CS.C2SActionStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msg_head_, output);
  }

  // .NetProto.CS.C2SActionStatus.Type type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // uint32 action_id = 3;
  if (this->action_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->action_id(), output);
  }

  // .google.protobuf.Any cached_data = 4;
  if (this->has_cached_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->cached_data_, output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.CS.C2SActionStatus)
}

::google::protobuf::uint8* C2SActionStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.CS.C2SActionStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msg_head_, deterministic, target);
  }

  // .NetProto.CS.C2SActionStatus.Type type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // uint32 action_id = 3;
  if (this->action_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->action_id(), target);
  }

  // .google.protobuf.Any cached_data = 4;
  if (this->has_cached_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->cached_data_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.CS.C2SActionStatus)
  return target;
}

size_t C2SActionStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.CS.C2SActionStatus)
  size_t total_size = 0;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_head_);
  }

  // .google.protobuf.Any cached_data = 4;
  if (this->has_cached_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cached_data_);
  }

  // .NetProto.CS.C2SActionStatus.Type type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // uint32 action_id = 3;
  if (this->action_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->action_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SActionStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.CS.C2SActionStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SActionStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SActionStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.CS.C2SActionStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.CS.C2SActionStatus)
    MergeFrom(*source);
  }
}

void C2SActionStatus::MergeFrom(const C2SActionStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.CS.C2SActionStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_msg_head()) {
    mutable_msg_head()->::NetProto::MsgHead::MergeFrom(from.msg_head());
  }
  if (from.has_cached_data()) {
    mutable_cached_data()->::google::protobuf::Any::MergeFrom(from.cached_data());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.action_id() != 0) {
    set_action_id(from.action_id());
  }
}

void C2SActionStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.CS.C2SActionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SActionStatus::CopyFrom(const C2SActionStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.CS.C2SActionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SActionStatus::IsInitialized() const {
  return true;
}

void C2SActionStatus::Swap(C2SActionStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SActionStatus::InternalSwap(C2SActionStatus* other) {
  std::swap(msg_head_, other->msg_head_);
  std::swap(cached_data_, other->cached_data_);
  std::swap(type_, other->type_);
  std::swap(action_id_, other->action_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SActionStatus::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SActionStatus

// .NetProto.MsgHead msg_head = 1;
bool C2SActionStatus::has_msg_head() const {
  return this != internal_default_instance() && msg_head_ != NULL;
}
void C2SActionStatus::clear_msg_head() {
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) delete msg_head_;
  msg_head_ = NULL;
}
const ::NetProto::MsgHead& C2SActionStatus::msg_head() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SActionStatus.msg_head)
  return msg_head_ != NULL ? *msg_head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
::NetProto::MsgHead* C2SActionStatus::mutable_msg_head() {
  
  if (msg_head_ == NULL) {
    msg_head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SActionStatus.msg_head)
  return msg_head_;
}
::NetProto::MsgHead* C2SActionStatus::release_msg_head() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2SActionStatus.msg_head)
  
  ::NetProto::MsgHead* temp = msg_head_;
  msg_head_ = NULL;
  return temp;
}
void C2SActionStatus::set_allocated_msg_head(::NetProto::MsgHead* msg_head) {
  delete msg_head_;
  msg_head_ = msg_head;
  if (msg_head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2SActionStatus.msg_head)
}

// .NetProto.CS.C2SActionStatus.Type type = 2;
void C2SActionStatus::clear_type() {
  type_ = 0;
}
::NetProto::CS::C2SActionStatus_Type C2SActionStatus::type() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SActionStatus.type)
  return static_cast< ::NetProto::CS::C2SActionStatus_Type >(type_);
}
void C2SActionStatus::set_type(::NetProto::CS::C2SActionStatus_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetProto.CS.C2SActionStatus.type)
}

// uint32 action_id = 3;
void C2SActionStatus::clear_action_id() {
  action_id_ = 0u;
}
::google::protobuf::uint32 C2SActionStatus::action_id() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SActionStatus.action_id)
  return action_id_;
}
void C2SActionStatus::set_action_id(::google::protobuf::uint32 value) {
  
  action_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.CS.C2SActionStatus.action_id)
}

// .google.protobuf.Any cached_data = 4;
bool C2SActionStatus::has_cached_data() const {
  return this != internal_default_instance() && cached_data_ != NULL;
}
void C2SActionStatus::clear_cached_data() {
  if (GetArenaNoVirtual() == NULL && cached_data_ != NULL) delete cached_data_;
  cached_data_ = NULL;
}
const ::google::protobuf::Any& C2SActionStatus::cached_data() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SActionStatus.cached_data)
  return cached_data_ != NULL ? *cached_data_
                         : *::google::protobuf::Any::internal_default_instance();
}
::google::protobuf::Any* C2SActionStatus::mutable_cached_data() {
  
  if (cached_data_ == NULL) {
    cached_data_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SActionStatus.cached_data)
  return cached_data_;
}
::google::protobuf::Any* C2SActionStatus::release_cached_data() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2SActionStatus.cached_data)
  
  ::google::protobuf::Any* temp = cached_data_;
  cached_data_ = NULL;
  return temp;
}
void C2SActionStatus::set_allocated_cached_data(::google::protobuf::Any* cached_data) {
  delete cached_data_;
  cached_data_ = cached_data;
  if (cached_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2SActionStatus.cached_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2STouchEvent::kMsgHeadFieldNumber;
const int C2STouchEvent::kBodyPartFieldNumber;
const int C2STouchEvent::kObjUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2STouchEvent::C2STouchEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.CS.C2STouchEvent)
}
C2STouchEvent::C2STouchEvent(const C2STouchEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  obj_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.obj_uuid().size() > 0) {
    obj_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_uuid_);
  }
  if (from.has_msg_head()) {
    msg_head_ = new ::NetProto::MsgHead(*from.msg_head_);
  } else {
    msg_head_ = NULL;
  }
  body_part_ = from.body_part_;
  // @@protoc_insertion_point(copy_constructor:NetProto.CS.C2STouchEvent)
}

void C2STouchEvent::SharedCtor() {
  obj_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msg_head_, 0, reinterpret_cast<char*>(&body_part_) -
    reinterpret_cast<char*>(&msg_head_) + sizeof(body_part_));
  _cached_size_ = 0;
}

C2STouchEvent::~C2STouchEvent() {
  // @@protoc_insertion_point(destructor:NetProto.CS.C2STouchEvent)
  SharedDtor();
}

void C2STouchEvent::SharedDtor() {
  obj_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete msg_head_;
  }
}

void C2STouchEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2STouchEvent::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C2STouchEvent& C2STouchEvent::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

C2STouchEvent* C2STouchEvent::New(::google::protobuf::Arena* arena) const {
  C2STouchEvent* n = new C2STouchEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2STouchEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.CS.C2STouchEvent)
  obj_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) {
    delete msg_head_;
  }
  msg_head_ = NULL;
  body_part_ = 0;
}

bool C2STouchEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.CS.C2STouchEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.MsgHead msg_head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.CS.BodyPart body_part = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_body_part(static_cast< ::NetProto::CS::BodyPart >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string obj_uuid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->obj_uuid().data(), this->obj_uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.CS.C2STouchEvent.obj_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.CS.C2STouchEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.CS.C2STouchEvent)
  return false;
#undef DO_
}

void C2STouchEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.CS.C2STouchEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msg_head_, output);
  }

  // .NetProto.CS.BodyPart body_part = 2;
  if (this->body_part() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->body_part(), output);
  }

  // string obj_uuid = 3;
  if (this->obj_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->obj_uuid().data(), this->obj_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2STouchEvent.obj_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->obj_uuid(), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.CS.C2STouchEvent)
}

::google::protobuf::uint8* C2STouchEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.CS.C2STouchEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msg_head_, deterministic, target);
  }

  // .NetProto.CS.BodyPart body_part = 2;
  if (this->body_part() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->body_part(), target);
  }

  // string obj_uuid = 3;
  if (this->obj_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->obj_uuid().data(), this->obj_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2STouchEvent.obj_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->obj_uuid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.CS.C2STouchEvent)
  return target;
}

size_t C2STouchEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.CS.C2STouchEvent)
  size_t total_size = 0;

  // string obj_uuid = 3;
  if (this->obj_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj_uuid());
  }

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_head_);
  }

  // .NetProto.CS.BodyPart body_part = 2;
  if (this->body_part() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->body_part());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2STouchEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.CS.C2STouchEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const C2STouchEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C2STouchEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.CS.C2STouchEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.CS.C2STouchEvent)
    MergeFrom(*source);
  }
}

void C2STouchEvent::MergeFrom(const C2STouchEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.CS.C2STouchEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_uuid().size() > 0) {

    obj_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_uuid_);
  }
  if (from.has_msg_head()) {
    mutable_msg_head()->::NetProto::MsgHead::MergeFrom(from.msg_head());
  }
  if (from.body_part() != 0) {
    set_body_part(from.body_part());
  }
}

void C2STouchEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.CS.C2STouchEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2STouchEvent::CopyFrom(const C2STouchEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.CS.C2STouchEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2STouchEvent::IsInitialized() const {
  return true;
}

void C2STouchEvent::Swap(C2STouchEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2STouchEvent::InternalSwap(C2STouchEvent* other) {
  obj_uuid_.Swap(&other->obj_uuid_);
  std::swap(msg_head_, other->msg_head_);
  std::swap(body_part_, other->body_part_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2STouchEvent::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2STouchEvent

// .NetProto.MsgHead msg_head = 1;
bool C2STouchEvent::has_msg_head() const {
  return this != internal_default_instance() && msg_head_ != NULL;
}
void C2STouchEvent::clear_msg_head() {
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) delete msg_head_;
  msg_head_ = NULL;
}
const ::NetProto::MsgHead& C2STouchEvent::msg_head() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2STouchEvent.msg_head)
  return msg_head_ != NULL ? *msg_head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
::NetProto::MsgHead* C2STouchEvent::mutable_msg_head() {
  
  if (msg_head_ == NULL) {
    msg_head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2STouchEvent.msg_head)
  return msg_head_;
}
::NetProto::MsgHead* C2STouchEvent::release_msg_head() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2STouchEvent.msg_head)
  
  ::NetProto::MsgHead* temp = msg_head_;
  msg_head_ = NULL;
  return temp;
}
void C2STouchEvent::set_allocated_msg_head(::NetProto::MsgHead* msg_head) {
  delete msg_head_;
  msg_head_ = msg_head;
  if (msg_head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2STouchEvent.msg_head)
}

// .NetProto.CS.BodyPart body_part = 2;
void C2STouchEvent::clear_body_part() {
  body_part_ = 0;
}
::NetProto::CS::BodyPart C2STouchEvent::body_part() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2STouchEvent.body_part)
  return static_cast< ::NetProto::CS::BodyPart >(body_part_);
}
void C2STouchEvent::set_body_part(::NetProto::CS::BodyPart value) {
  
  body_part_ = value;
  // @@protoc_insertion_point(field_set:NetProto.CS.C2STouchEvent.body_part)
}

// string obj_uuid = 3;
void C2STouchEvent::clear_obj_uuid() {
  obj_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& C2STouchEvent::obj_uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2STouchEvent.obj_uuid)
  return obj_uuid_.GetNoArena();
}
void C2STouchEvent::set_obj_uuid(const ::std::string& value) {
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.CS.C2STouchEvent.obj_uuid)
}
#if LANG_CXX11
void C2STouchEvent::set_obj_uuid(::std::string&& value) {
  
  obj_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.CS.C2STouchEvent.obj_uuid)
}
#endif
void C2STouchEvent::set_obj_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.CS.C2STouchEvent.obj_uuid)
}
void C2STouchEvent::set_obj_uuid(const char* value, size_t size) {
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.CS.C2STouchEvent.obj_uuid)
}
::std::string* C2STouchEvent::mutable_obj_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2STouchEvent.obj_uuid)
  return obj_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* C2STouchEvent::release_obj_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2STouchEvent.obj_uuid)
  
  return obj_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void C2STouchEvent::set_allocated_obj_uuid(::std::string* obj_uuid) {
  if (obj_uuid != NULL) {
    
  } else {
    
  }
  obj_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj_uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2STouchEvent.obj_uuid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SPlaceEvent::kMsgHeadFieldNumber;
const int C2SPlaceEvent::kObjUuidFieldNumber;
const int C2SPlaceEvent::kLocationUuidFieldNumber;
const int C2SPlaceEvent::kChangedPosRotFieldNumber;
const int C2SPlaceEvent::kChangedRelationFieldNumber;
const int C2SPlaceEvent::kBodyPartFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SPlaceEvent::C2SPlaceEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.CS.C2SPlaceEvent)
}
C2SPlaceEvent::C2SPlaceEvent(const C2SPlaceEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      changed_pos_rot_(from.changed_pos_rot_),
      changed_relation_(from.changed_relation_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  obj_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.obj_uuid().size() > 0) {
    obj_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_uuid_);
  }
  location_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.location_uuid().size() > 0) {
    location_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_uuid_);
  }
  if (from.has_msg_head()) {
    msg_head_ = new ::NetProto::MsgHead(*from.msg_head_);
  } else {
    msg_head_ = NULL;
  }
  body_part_ = from.body_part_;
  // @@protoc_insertion_point(copy_constructor:NetProto.CS.C2SPlaceEvent)
}

void C2SPlaceEvent::SharedCtor() {
  obj_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msg_head_, 0, reinterpret_cast<char*>(&body_part_) -
    reinterpret_cast<char*>(&msg_head_) + sizeof(body_part_));
  _cached_size_ = 0;
}

C2SPlaceEvent::~C2SPlaceEvent() {
  // @@protoc_insertion_point(destructor:NetProto.CS.C2SPlaceEvent)
  SharedDtor();
}

void C2SPlaceEvent::SharedDtor() {
  obj_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete msg_head_;
  }
}

void C2SPlaceEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SPlaceEvent::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C2SPlaceEvent& C2SPlaceEvent::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

C2SPlaceEvent* C2SPlaceEvent::New(::google::protobuf::Arena* arena) const {
  C2SPlaceEvent* n = new C2SPlaceEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SPlaceEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.CS.C2SPlaceEvent)
  changed_pos_rot_.Clear();
  changed_relation_.Clear();
  obj_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) {
    delete msg_head_;
  }
  msg_head_ = NULL;
  body_part_ = 0;
}

bool C2SPlaceEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.CS.C2SPlaceEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.MsgHead msg_head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string obj_uuid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->obj_uuid().data(), this->obj_uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.CS.C2SPlaceEvent.obj_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string location_uuid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location_uuid().data(), this->location_uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.CS.C2SPlaceEvent.location_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NetProto.CS.ObjPosRotChange changed_pos_rot = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_changed_pos_rot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NetProto.ObjPosRelation changed_relation = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_changed_relation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.CS.BodyPart body_part = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_body_part(static_cast< ::NetProto::CS::BodyPart >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.CS.C2SPlaceEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.CS.C2SPlaceEvent)
  return false;
#undef DO_
}

void C2SPlaceEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.CS.C2SPlaceEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msg_head_, output);
  }

  // string obj_uuid = 3;
  if (this->obj_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->obj_uuid().data(), this->obj_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SPlaceEvent.obj_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->obj_uuid(), output);
  }

  // string location_uuid = 4;
  if (this->location_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location_uuid().data(), this->location_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SPlaceEvent.location_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->location_uuid(), output);
  }

  // repeated .NetProto.CS.ObjPosRotChange changed_pos_rot = 5;
  for (unsigned int i = 0, n = this->changed_pos_rot_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->changed_pos_rot(i), output);
  }

  // repeated .NetProto.ObjPosRelation changed_relation = 6;
  for (unsigned int i = 0, n = this->changed_relation_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->changed_relation(i), output);
  }

  // .NetProto.CS.BodyPart body_part = 7;
  if (this->body_part() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->body_part(), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.CS.C2SPlaceEvent)
}

::google::protobuf::uint8* C2SPlaceEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.CS.C2SPlaceEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msg_head_, deterministic, target);
  }

  // string obj_uuid = 3;
  if (this->obj_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->obj_uuid().data(), this->obj_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SPlaceEvent.obj_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->obj_uuid(), target);
  }

  // string location_uuid = 4;
  if (this->location_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location_uuid().data(), this->location_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SPlaceEvent.location_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->location_uuid(), target);
  }

  // repeated .NetProto.CS.ObjPosRotChange changed_pos_rot = 5;
  for (unsigned int i = 0, n = this->changed_pos_rot_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->changed_pos_rot(i), deterministic, target);
  }

  // repeated .NetProto.ObjPosRelation changed_relation = 6;
  for (unsigned int i = 0, n = this->changed_relation_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->changed_relation(i), deterministic, target);
  }

  // .NetProto.CS.BodyPart body_part = 7;
  if (this->body_part() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->body_part(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.CS.C2SPlaceEvent)
  return target;
}

size_t C2SPlaceEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.CS.C2SPlaceEvent)
  size_t total_size = 0;

  // repeated .NetProto.CS.ObjPosRotChange changed_pos_rot = 5;
  {
    unsigned int count = this->changed_pos_rot_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->changed_pos_rot(i));
    }
  }

  // repeated .NetProto.ObjPosRelation changed_relation = 6;
  {
    unsigned int count = this->changed_relation_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->changed_relation(i));
    }
  }

  // string obj_uuid = 3;
  if (this->obj_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj_uuid());
  }

  // string location_uuid = 4;
  if (this->location_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location_uuid());
  }

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_head_);
  }

  // .NetProto.CS.BodyPart body_part = 7;
  if (this->body_part() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->body_part());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SPlaceEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.CS.C2SPlaceEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SPlaceEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SPlaceEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.CS.C2SPlaceEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.CS.C2SPlaceEvent)
    MergeFrom(*source);
  }
}

void C2SPlaceEvent::MergeFrom(const C2SPlaceEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.CS.C2SPlaceEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  changed_pos_rot_.MergeFrom(from.changed_pos_rot_);
  changed_relation_.MergeFrom(from.changed_relation_);
  if (from.obj_uuid().size() > 0) {

    obj_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_uuid_);
  }
  if (from.location_uuid().size() > 0) {

    location_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_uuid_);
  }
  if (from.has_msg_head()) {
    mutable_msg_head()->::NetProto::MsgHead::MergeFrom(from.msg_head());
  }
  if (from.body_part() != 0) {
    set_body_part(from.body_part());
  }
}

void C2SPlaceEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.CS.C2SPlaceEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SPlaceEvent::CopyFrom(const C2SPlaceEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.CS.C2SPlaceEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SPlaceEvent::IsInitialized() const {
  return true;
}

void C2SPlaceEvent::Swap(C2SPlaceEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SPlaceEvent::InternalSwap(C2SPlaceEvent* other) {
  changed_pos_rot_.InternalSwap(&other->changed_pos_rot_);
  changed_relation_.InternalSwap(&other->changed_relation_);
  obj_uuid_.Swap(&other->obj_uuid_);
  location_uuid_.Swap(&other->location_uuid_);
  std::swap(msg_head_, other->msg_head_);
  std::swap(body_part_, other->body_part_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SPlaceEvent::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SPlaceEvent

// .NetProto.MsgHead msg_head = 1;
bool C2SPlaceEvent::has_msg_head() const {
  return this != internal_default_instance() && msg_head_ != NULL;
}
void C2SPlaceEvent::clear_msg_head() {
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) delete msg_head_;
  msg_head_ = NULL;
}
const ::NetProto::MsgHead& C2SPlaceEvent::msg_head() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SPlaceEvent.msg_head)
  return msg_head_ != NULL ? *msg_head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
::NetProto::MsgHead* C2SPlaceEvent::mutable_msg_head() {
  
  if (msg_head_ == NULL) {
    msg_head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SPlaceEvent.msg_head)
  return msg_head_;
}
::NetProto::MsgHead* C2SPlaceEvent::release_msg_head() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2SPlaceEvent.msg_head)
  
  ::NetProto::MsgHead* temp = msg_head_;
  msg_head_ = NULL;
  return temp;
}
void C2SPlaceEvent::set_allocated_msg_head(::NetProto::MsgHead* msg_head) {
  delete msg_head_;
  msg_head_ = msg_head;
  if (msg_head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2SPlaceEvent.msg_head)
}

// string obj_uuid = 3;
void C2SPlaceEvent::clear_obj_uuid() {
  obj_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& C2SPlaceEvent::obj_uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SPlaceEvent.obj_uuid)
  return obj_uuid_.GetNoArena();
}
void C2SPlaceEvent::set_obj_uuid(const ::std::string& value) {
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.CS.C2SPlaceEvent.obj_uuid)
}
#if LANG_CXX11
void C2SPlaceEvent::set_obj_uuid(::std::string&& value) {
  
  obj_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.CS.C2SPlaceEvent.obj_uuid)
}
#endif
void C2SPlaceEvent::set_obj_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.CS.C2SPlaceEvent.obj_uuid)
}
void C2SPlaceEvent::set_obj_uuid(const char* value, size_t size) {
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.CS.C2SPlaceEvent.obj_uuid)
}
::std::string* C2SPlaceEvent::mutable_obj_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SPlaceEvent.obj_uuid)
  return obj_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* C2SPlaceEvent::release_obj_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2SPlaceEvent.obj_uuid)
  
  return obj_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void C2SPlaceEvent::set_allocated_obj_uuid(::std::string* obj_uuid) {
  if (obj_uuid != NULL) {
    
  } else {
    
  }
  obj_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj_uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2SPlaceEvent.obj_uuid)
}

// string location_uuid = 4;
void C2SPlaceEvent::clear_location_uuid() {
  location_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& C2SPlaceEvent::location_uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SPlaceEvent.location_uuid)
  return location_uuid_.GetNoArena();
}
void C2SPlaceEvent::set_location_uuid(const ::std::string& value) {
  
  location_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.CS.C2SPlaceEvent.location_uuid)
}
#if LANG_CXX11
void C2SPlaceEvent::set_location_uuid(::std::string&& value) {
  
  location_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.CS.C2SPlaceEvent.location_uuid)
}
#endif
void C2SPlaceEvent::set_location_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  location_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.CS.C2SPlaceEvent.location_uuid)
}
void C2SPlaceEvent::set_location_uuid(const char* value, size_t size) {
  
  location_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.CS.C2SPlaceEvent.location_uuid)
}
::std::string* C2SPlaceEvent::mutable_location_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SPlaceEvent.location_uuid)
  return location_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* C2SPlaceEvent::release_location_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2SPlaceEvent.location_uuid)
  
  return location_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void C2SPlaceEvent::set_allocated_location_uuid(::std::string* location_uuid) {
  if (location_uuid != NULL) {
    
  } else {
    
  }
  location_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location_uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2SPlaceEvent.location_uuid)
}

// repeated .NetProto.CS.ObjPosRotChange changed_pos_rot = 5;
int C2SPlaceEvent::changed_pos_rot_size() const {
  return changed_pos_rot_.size();
}
void C2SPlaceEvent::clear_changed_pos_rot() {
  changed_pos_rot_.Clear();
}
const ::NetProto::CS::ObjPosRotChange& C2SPlaceEvent::changed_pos_rot(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SPlaceEvent.changed_pos_rot)
  return changed_pos_rot_.Get(index);
}
::NetProto::CS::ObjPosRotChange* C2SPlaceEvent::mutable_changed_pos_rot(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SPlaceEvent.changed_pos_rot)
  return changed_pos_rot_.Mutable(index);
}
::NetProto::CS::ObjPosRotChange* C2SPlaceEvent::add_changed_pos_rot() {
  // @@protoc_insertion_point(field_add:NetProto.CS.C2SPlaceEvent.changed_pos_rot)
  return changed_pos_rot_.Add();
}
::google::protobuf::RepeatedPtrField< ::NetProto::CS::ObjPosRotChange >*
C2SPlaceEvent::mutable_changed_pos_rot() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.CS.C2SPlaceEvent.changed_pos_rot)
  return &changed_pos_rot_;
}
const ::google::protobuf::RepeatedPtrField< ::NetProto::CS::ObjPosRotChange >&
C2SPlaceEvent::changed_pos_rot() const {
  // @@protoc_insertion_point(field_list:NetProto.CS.C2SPlaceEvent.changed_pos_rot)
  return changed_pos_rot_;
}

// repeated .NetProto.ObjPosRelation changed_relation = 6;
int C2SPlaceEvent::changed_relation_size() const {
  return changed_relation_.size();
}
void C2SPlaceEvent::clear_changed_relation() {
  changed_relation_.Clear();
}
const ::NetProto::ObjPosRelation& C2SPlaceEvent::changed_relation(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SPlaceEvent.changed_relation)
  return changed_relation_.Get(index);
}
::NetProto::ObjPosRelation* C2SPlaceEvent::mutable_changed_relation(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SPlaceEvent.changed_relation)
  return changed_relation_.Mutable(index);
}
::NetProto::ObjPosRelation* C2SPlaceEvent::add_changed_relation() {
  // @@protoc_insertion_point(field_add:NetProto.CS.C2SPlaceEvent.changed_relation)
  return changed_relation_.Add();
}
::google::protobuf::RepeatedPtrField< ::NetProto::ObjPosRelation >*
C2SPlaceEvent::mutable_changed_relation() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.CS.C2SPlaceEvent.changed_relation)
  return &changed_relation_;
}
const ::google::protobuf::RepeatedPtrField< ::NetProto::ObjPosRelation >&
C2SPlaceEvent::changed_relation() const {
  // @@protoc_insertion_point(field_list:NetProto.CS.C2SPlaceEvent.changed_relation)
  return changed_relation_;
}

// .NetProto.CS.BodyPart body_part = 7;
void C2SPlaceEvent::clear_body_part() {
  body_part_ = 0;
}
::NetProto::CS::BodyPart C2SPlaceEvent::body_part() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SPlaceEvent.body_part)
  return static_cast< ::NetProto::CS::BodyPart >(body_part_);
}
void C2SPlaceEvent::set_body_part(::NetProto::CS::BodyPart value) {
  
  body_part_ = value;
  // @@protoc_insertion_point(field_set:NetProto.CS.C2SPlaceEvent.body_part)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SFetchEvent::kMsgHeadFieldNumber;
const int C2SFetchEvent::kObjUuidFieldNumber;
const int C2SFetchEvent::kLocationUuidFieldNumber;
const int C2SFetchEvent::kChangedPosRotFieldNumber;
const int C2SFetchEvent::kChangedRelationFieldNumber;
const int C2SFetchEvent::kBodyPartFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SFetchEvent::C2SFetchEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.CS.C2SFetchEvent)
}
C2SFetchEvent::C2SFetchEvent(const C2SFetchEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      changed_pos_rot_(from.changed_pos_rot_),
      changed_relation_(from.changed_relation_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  obj_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.obj_uuid().size() > 0) {
    obj_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_uuid_);
  }
  location_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.location_uuid().size() > 0) {
    location_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_uuid_);
  }
  if (from.has_msg_head()) {
    msg_head_ = new ::NetProto::MsgHead(*from.msg_head_);
  } else {
    msg_head_ = NULL;
  }
  body_part_ = from.body_part_;
  // @@protoc_insertion_point(copy_constructor:NetProto.CS.C2SFetchEvent)
}

void C2SFetchEvent::SharedCtor() {
  obj_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msg_head_, 0, reinterpret_cast<char*>(&body_part_) -
    reinterpret_cast<char*>(&msg_head_) + sizeof(body_part_));
  _cached_size_ = 0;
}

C2SFetchEvent::~C2SFetchEvent() {
  // @@protoc_insertion_point(destructor:NetProto.CS.C2SFetchEvent)
  SharedDtor();
}

void C2SFetchEvent::SharedDtor() {
  obj_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete msg_head_;
  }
}

void C2SFetchEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SFetchEvent::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C2SFetchEvent& C2SFetchEvent::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

C2SFetchEvent* C2SFetchEvent::New(::google::protobuf::Arena* arena) const {
  C2SFetchEvent* n = new C2SFetchEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SFetchEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.CS.C2SFetchEvent)
  changed_pos_rot_.Clear();
  changed_relation_.Clear();
  obj_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) {
    delete msg_head_;
  }
  msg_head_ = NULL;
  body_part_ = 0;
}

bool C2SFetchEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.CS.C2SFetchEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.MsgHead msg_head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string obj_uuid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->obj_uuid().data(), this->obj_uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.CS.C2SFetchEvent.obj_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string location_uuid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location_uuid().data(), this->location_uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.CS.C2SFetchEvent.location_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NetProto.CS.ObjPosRotChange changed_pos_rot = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_changed_pos_rot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NetProto.ObjPosRelation changed_relation = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_changed_relation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.CS.BodyPart body_part = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_body_part(static_cast< ::NetProto::CS::BodyPart >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.CS.C2SFetchEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.CS.C2SFetchEvent)
  return false;
#undef DO_
}

void C2SFetchEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.CS.C2SFetchEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msg_head_, output);
  }

  // string obj_uuid = 3;
  if (this->obj_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->obj_uuid().data(), this->obj_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SFetchEvent.obj_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->obj_uuid(), output);
  }

  // string location_uuid = 4;
  if (this->location_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location_uuid().data(), this->location_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SFetchEvent.location_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->location_uuid(), output);
  }

  // repeated .NetProto.CS.ObjPosRotChange changed_pos_rot = 5;
  for (unsigned int i = 0, n = this->changed_pos_rot_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->changed_pos_rot(i), output);
  }

  // repeated .NetProto.ObjPosRelation changed_relation = 6;
  for (unsigned int i = 0, n = this->changed_relation_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->changed_relation(i), output);
  }

  // .NetProto.CS.BodyPart body_part = 7;
  if (this->body_part() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->body_part(), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.CS.C2SFetchEvent)
}

::google::protobuf::uint8* C2SFetchEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.CS.C2SFetchEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msg_head_, deterministic, target);
  }

  // string obj_uuid = 3;
  if (this->obj_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->obj_uuid().data(), this->obj_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SFetchEvent.obj_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->obj_uuid(), target);
  }

  // string location_uuid = 4;
  if (this->location_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location_uuid().data(), this->location_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SFetchEvent.location_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->location_uuid(), target);
  }

  // repeated .NetProto.CS.ObjPosRotChange changed_pos_rot = 5;
  for (unsigned int i = 0, n = this->changed_pos_rot_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->changed_pos_rot(i), deterministic, target);
  }

  // repeated .NetProto.ObjPosRelation changed_relation = 6;
  for (unsigned int i = 0, n = this->changed_relation_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->changed_relation(i), deterministic, target);
  }

  // .NetProto.CS.BodyPart body_part = 7;
  if (this->body_part() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->body_part(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.CS.C2SFetchEvent)
  return target;
}

size_t C2SFetchEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.CS.C2SFetchEvent)
  size_t total_size = 0;

  // repeated .NetProto.CS.ObjPosRotChange changed_pos_rot = 5;
  {
    unsigned int count = this->changed_pos_rot_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->changed_pos_rot(i));
    }
  }

  // repeated .NetProto.ObjPosRelation changed_relation = 6;
  {
    unsigned int count = this->changed_relation_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->changed_relation(i));
    }
  }

  // string obj_uuid = 3;
  if (this->obj_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj_uuid());
  }

  // string location_uuid = 4;
  if (this->location_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location_uuid());
  }

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_head_);
  }

  // .NetProto.CS.BodyPart body_part = 7;
  if (this->body_part() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->body_part());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SFetchEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.CS.C2SFetchEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SFetchEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SFetchEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.CS.C2SFetchEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.CS.C2SFetchEvent)
    MergeFrom(*source);
  }
}

void C2SFetchEvent::MergeFrom(const C2SFetchEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.CS.C2SFetchEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  changed_pos_rot_.MergeFrom(from.changed_pos_rot_);
  changed_relation_.MergeFrom(from.changed_relation_);
  if (from.obj_uuid().size() > 0) {

    obj_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_uuid_);
  }
  if (from.location_uuid().size() > 0) {

    location_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_uuid_);
  }
  if (from.has_msg_head()) {
    mutable_msg_head()->::NetProto::MsgHead::MergeFrom(from.msg_head());
  }
  if (from.body_part() != 0) {
    set_body_part(from.body_part());
  }
}

void C2SFetchEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.CS.C2SFetchEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SFetchEvent::CopyFrom(const C2SFetchEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.CS.C2SFetchEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SFetchEvent::IsInitialized() const {
  return true;
}

void C2SFetchEvent::Swap(C2SFetchEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SFetchEvent::InternalSwap(C2SFetchEvent* other) {
  changed_pos_rot_.InternalSwap(&other->changed_pos_rot_);
  changed_relation_.InternalSwap(&other->changed_relation_);
  obj_uuid_.Swap(&other->obj_uuid_);
  location_uuid_.Swap(&other->location_uuid_);
  std::swap(msg_head_, other->msg_head_);
  std::swap(body_part_, other->body_part_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SFetchEvent::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SFetchEvent

// .NetProto.MsgHead msg_head = 1;
bool C2SFetchEvent::has_msg_head() const {
  return this != internal_default_instance() && msg_head_ != NULL;
}
void C2SFetchEvent::clear_msg_head() {
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) delete msg_head_;
  msg_head_ = NULL;
}
const ::NetProto::MsgHead& C2SFetchEvent::msg_head() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SFetchEvent.msg_head)
  return msg_head_ != NULL ? *msg_head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
::NetProto::MsgHead* C2SFetchEvent::mutable_msg_head() {
  
  if (msg_head_ == NULL) {
    msg_head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SFetchEvent.msg_head)
  return msg_head_;
}
::NetProto::MsgHead* C2SFetchEvent::release_msg_head() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2SFetchEvent.msg_head)
  
  ::NetProto::MsgHead* temp = msg_head_;
  msg_head_ = NULL;
  return temp;
}
void C2SFetchEvent::set_allocated_msg_head(::NetProto::MsgHead* msg_head) {
  delete msg_head_;
  msg_head_ = msg_head;
  if (msg_head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2SFetchEvent.msg_head)
}

// string obj_uuid = 3;
void C2SFetchEvent::clear_obj_uuid() {
  obj_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& C2SFetchEvent::obj_uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SFetchEvent.obj_uuid)
  return obj_uuid_.GetNoArena();
}
void C2SFetchEvent::set_obj_uuid(const ::std::string& value) {
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.CS.C2SFetchEvent.obj_uuid)
}
#if LANG_CXX11
void C2SFetchEvent::set_obj_uuid(::std::string&& value) {
  
  obj_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.CS.C2SFetchEvent.obj_uuid)
}
#endif
void C2SFetchEvent::set_obj_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.CS.C2SFetchEvent.obj_uuid)
}
void C2SFetchEvent::set_obj_uuid(const char* value, size_t size) {
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.CS.C2SFetchEvent.obj_uuid)
}
::std::string* C2SFetchEvent::mutable_obj_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SFetchEvent.obj_uuid)
  return obj_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* C2SFetchEvent::release_obj_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2SFetchEvent.obj_uuid)
  
  return obj_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void C2SFetchEvent::set_allocated_obj_uuid(::std::string* obj_uuid) {
  if (obj_uuid != NULL) {
    
  } else {
    
  }
  obj_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj_uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2SFetchEvent.obj_uuid)
}

// string location_uuid = 4;
void C2SFetchEvent::clear_location_uuid() {
  location_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& C2SFetchEvent::location_uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SFetchEvent.location_uuid)
  return location_uuid_.GetNoArena();
}
void C2SFetchEvent::set_location_uuid(const ::std::string& value) {
  
  location_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.CS.C2SFetchEvent.location_uuid)
}
#if LANG_CXX11
void C2SFetchEvent::set_location_uuid(::std::string&& value) {
  
  location_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.CS.C2SFetchEvent.location_uuid)
}
#endif
void C2SFetchEvent::set_location_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  location_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.CS.C2SFetchEvent.location_uuid)
}
void C2SFetchEvent::set_location_uuid(const char* value, size_t size) {
  
  location_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.CS.C2SFetchEvent.location_uuid)
}
::std::string* C2SFetchEvent::mutable_location_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SFetchEvent.location_uuid)
  return location_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* C2SFetchEvent::release_location_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2SFetchEvent.location_uuid)
  
  return location_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void C2SFetchEvent::set_allocated_location_uuid(::std::string* location_uuid) {
  if (location_uuid != NULL) {
    
  } else {
    
  }
  location_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location_uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2SFetchEvent.location_uuid)
}

// repeated .NetProto.CS.ObjPosRotChange changed_pos_rot = 5;
int C2SFetchEvent::changed_pos_rot_size() const {
  return changed_pos_rot_.size();
}
void C2SFetchEvent::clear_changed_pos_rot() {
  changed_pos_rot_.Clear();
}
const ::NetProto::CS::ObjPosRotChange& C2SFetchEvent::changed_pos_rot(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SFetchEvent.changed_pos_rot)
  return changed_pos_rot_.Get(index);
}
::NetProto::CS::ObjPosRotChange* C2SFetchEvent::mutable_changed_pos_rot(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SFetchEvent.changed_pos_rot)
  return changed_pos_rot_.Mutable(index);
}
::NetProto::CS::ObjPosRotChange* C2SFetchEvent::add_changed_pos_rot() {
  // @@protoc_insertion_point(field_add:NetProto.CS.C2SFetchEvent.changed_pos_rot)
  return changed_pos_rot_.Add();
}
::google::protobuf::RepeatedPtrField< ::NetProto::CS::ObjPosRotChange >*
C2SFetchEvent::mutable_changed_pos_rot() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.CS.C2SFetchEvent.changed_pos_rot)
  return &changed_pos_rot_;
}
const ::google::protobuf::RepeatedPtrField< ::NetProto::CS::ObjPosRotChange >&
C2SFetchEvent::changed_pos_rot() const {
  // @@protoc_insertion_point(field_list:NetProto.CS.C2SFetchEvent.changed_pos_rot)
  return changed_pos_rot_;
}

// repeated .NetProto.ObjPosRelation changed_relation = 6;
int C2SFetchEvent::changed_relation_size() const {
  return changed_relation_.size();
}
void C2SFetchEvent::clear_changed_relation() {
  changed_relation_.Clear();
}
const ::NetProto::ObjPosRelation& C2SFetchEvent::changed_relation(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SFetchEvent.changed_relation)
  return changed_relation_.Get(index);
}
::NetProto::ObjPosRelation* C2SFetchEvent::mutable_changed_relation(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SFetchEvent.changed_relation)
  return changed_relation_.Mutable(index);
}
::NetProto::ObjPosRelation* C2SFetchEvent::add_changed_relation() {
  // @@protoc_insertion_point(field_add:NetProto.CS.C2SFetchEvent.changed_relation)
  return changed_relation_.Add();
}
::google::protobuf::RepeatedPtrField< ::NetProto::ObjPosRelation >*
C2SFetchEvent::mutable_changed_relation() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.CS.C2SFetchEvent.changed_relation)
  return &changed_relation_;
}
const ::google::protobuf::RepeatedPtrField< ::NetProto::ObjPosRelation >&
C2SFetchEvent::changed_relation() const {
  // @@protoc_insertion_point(field_list:NetProto.CS.C2SFetchEvent.changed_relation)
  return changed_relation_;
}

// .NetProto.CS.BodyPart body_part = 7;
void C2SFetchEvent::clear_body_part() {
  body_part_ = 0;
}
::NetProto::CS::BodyPart C2SFetchEvent::body_part() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SFetchEvent.body_part)
  return static_cast< ::NetProto::CS::BodyPart >(body_part_);
}
void C2SFetchEvent::set_body_part(::NetProto::CS::BodyPart value) {
  
  body_part_ = value;
  // @@protoc_insertion_point(field_set:NetProto.CS.C2SFetchEvent.body_part)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SSpecialEvent::kMsgHeadFieldNumber;
const int C2SSpecialEvent::kEvtTypeFieldNumber;
const int C2SSpecialEvent::kObjUuidFieldNumber;
const int C2SSpecialEvent::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SSpecialEvent::C2SSpecialEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.CS.C2SSpecialEvent)
}
C2SSpecialEvent::C2SSpecialEvent(const C2SSpecialEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      params_(from.params_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  obj_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.obj_uuid().size() > 0) {
    obj_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_uuid_);
  }
  if (from.has_msg_head()) {
    msg_head_ = new ::NetProto::MsgHead(*from.msg_head_);
  } else {
    msg_head_ = NULL;
  }
  evt_type_ = from.evt_type_;
  // @@protoc_insertion_point(copy_constructor:NetProto.CS.C2SSpecialEvent)
}

void C2SSpecialEvent::SharedCtor() {
  obj_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msg_head_, 0, reinterpret_cast<char*>(&evt_type_) -
    reinterpret_cast<char*>(&msg_head_) + sizeof(evt_type_));
  _cached_size_ = 0;
}

C2SSpecialEvent::~C2SSpecialEvent() {
  // @@protoc_insertion_point(destructor:NetProto.CS.C2SSpecialEvent)
  SharedDtor();
}

void C2SSpecialEvent::SharedDtor() {
  obj_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete msg_head_;
  }
}

void C2SSpecialEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SSpecialEvent::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C2SSpecialEvent& C2SSpecialEvent::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

C2SSpecialEvent* C2SSpecialEvent::New(::google::protobuf::Arena* arena) const {
  C2SSpecialEvent* n = new C2SSpecialEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SSpecialEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.CS.C2SSpecialEvent)
  params_.Clear();
  obj_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) {
    delete msg_head_;
  }
  msg_head_ = NULL;
  evt_type_ = 0;
}

bool C2SSpecialEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.CS.C2SSpecialEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.MsgHead msg_head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.RoleStatusEvent evt_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_evt_type(static_cast< ::NetProto::RoleStatusEvent >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string obj_uuid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->obj_uuid().data(), this->obj_uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.CS.C2SSpecialEvent.obj_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NetProto.KeyValuePair params = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.CS.C2SSpecialEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.CS.C2SSpecialEvent)
  return false;
#undef DO_
}

void C2SSpecialEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.CS.C2SSpecialEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msg_head_, output);
  }

  // .NetProto.RoleStatusEvent evt_type = 2;
  if (this->evt_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->evt_type(), output);
  }

  // string obj_uuid = 3;
  if (this->obj_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->obj_uuid().data(), this->obj_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SSpecialEvent.obj_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->obj_uuid(), output);
  }

  // repeated .NetProto.KeyValuePair params = 4;
  for (unsigned int i = 0, n = this->params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->params(i), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.CS.C2SSpecialEvent)
}

::google::protobuf::uint8* C2SSpecialEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.CS.C2SSpecialEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msg_head_, deterministic, target);
  }

  // .NetProto.RoleStatusEvent evt_type = 2;
  if (this->evt_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->evt_type(), target);
  }

  // string obj_uuid = 3;
  if (this->obj_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->obj_uuid().data(), this->obj_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SSpecialEvent.obj_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->obj_uuid(), target);
  }

  // repeated .NetProto.KeyValuePair params = 4;
  for (unsigned int i = 0, n = this->params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->params(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.CS.C2SSpecialEvent)
  return target;
}

size_t C2SSpecialEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.CS.C2SSpecialEvent)
  size_t total_size = 0;

  // repeated .NetProto.KeyValuePair params = 4;
  {
    unsigned int count = this->params_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->params(i));
    }
  }

  // string obj_uuid = 3;
  if (this->obj_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj_uuid());
  }

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_head_);
  }

  // .NetProto.RoleStatusEvent evt_type = 2;
  if (this->evt_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->evt_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SSpecialEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.CS.C2SSpecialEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SSpecialEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SSpecialEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.CS.C2SSpecialEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.CS.C2SSpecialEvent)
    MergeFrom(*source);
  }
}

void C2SSpecialEvent::MergeFrom(const C2SSpecialEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.CS.C2SSpecialEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  if (from.obj_uuid().size() > 0) {

    obj_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_uuid_);
  }
  if (from.has_msg_head()) {
    mutable_msg_head()->::NetProto::MsgHead::MergeFrom(from.msg_head());
  }
  if (from.evt_type() != 0) {
    set_evt_type(from.evt_type());
  }
}

void C2SSpecialEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.CS.C2SSpecialEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SSpecialEvent::CopyFrom(const C2SSpecialEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.CS.C2SSpecialEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SSpecialEvent::IsInitialized() const {
  return true;
}

void C2SSpecialEvent::Swap(C2SSpecialEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SSpecialEvent::InternalSwap(C2SSpecialEvent* other) {
  params_.InternalSwap(&other->params_);
  obj_uuid_.Swap(&other->obj_uuid_);
  std::swap(msg_head_, other->msg_head_);
  std::swap(evt_type_, other->evt_type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SSpecialEvent::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SSpecialEvent

// .NetProto.MsgHead msg_head = 1;
bool C2SSpecialEvent::has_msg_head() const {
  return this != internal_default_instance() && msg_head_ != NULL;
}
void C2SSpecialEvent::clear_msg_head() {
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) delete msg_head_;
  msg_head_ = NULL;
}
const ::NetProto::MsgHead& C2SSpecialEvent::msg_head() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SSpecialEvent.msg_head)
  return msg_head_ != NULL ? *msg_head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
::NetProto::MsgHead* C2SSpecialEvent::mutable_msg_head() {
  
  if (msg_head_ == NULL) {
    msg_head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SSpecialEvent.msg_head)
  return msg_head_;
}
::NetProto::MsgHead* C2SSpecialEvent::release_msg_head() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2SSpecialEvent.msg_head)
  
  ::NetProto::MsgHead* temp = msg_head_;
  msg_head_ = NULL;
  return temp;
}
void C2SSpecialEvent::set_allocated_msg_head(::NetProto::MsgHead* msg_head) {
  delete msg_head_;
  msg_head_ = msg_head;
  if (msg_head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2SSpecialEvent.msg_head)
}

// .NetProto.RoleStatusEvent evt_type = 2;
void C2SSpecialEvent::clear_evt_type() {
  evt_type_ = 0;
}
::NetProto::RoleStatusEvent C2SSpecialEvent::evt_type() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SSpecialEvent.evt_type)
  return static_cast< ::NetProto::RoleStatusEvent >(evt_type_);
}
void C2SSpecialEvent::set_evt_type(::NetProto::RoleStatusEvent value) {
  
  evt_type_ = value;
  // @@protoc_insertion_point(field_set:NetProto.CS.C2SSpecialEvent.evt_type)
}

// string obj_uuid = 3;
void C2SSpecialEvent::clear_obj_uuid() {
  obj_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& C2SSpecialEvent::obj_uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SSpecialEvent.obj_uuid)
  return obj_uuid_.GetNoArena();
}
void C2SSpecialEvent::set_obj_uuid(const ::std::string& value) {
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.CS.C2SSpecialEvent.obj_uuid)
}
#if LANG_CXX11
void C2SSpecialEvent::set_obj_uuid(::std::string&& value) {
  
  obj_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.CS.C2SSpecialEvent.obj_uuid)
}
#endif
void C2SSpecialEvent::set_obj_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.CS.C2SSpecialEvent.obj_uuid)
}
void C2SSpecialEvent::set_obj_uuid(const char* value, size_t size) {
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.CS.C2SSpecialEvent.obj_uuid)
}
::std::string* C2SSpecialEvent::mutable_obj_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SSpecialEvent.obj_uuid)
  return obj_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* C2SSpecialEvent::release_obj_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2SSpecialEvent.obj_uuid)
  
  return obj_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void C2SSpecialEvent::set_allocated_obj_uuid(::std::string* obj_uuid) {
  if (obj_uuid != NULL) {
    
  } else {
    
  }
  obj_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj_uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2SSpecialEvent.obj_uuid)
}

// repeated .NetProto.KeyValuePair params = 4;
int C2SSpecialEvent::params_size() const {
  return params_.size();
}
void C2SSpecialEvent::clear_params() {
  params_.Clear();
}
const ::NetProto::KeyValuePair& C2SSpecialEvent::params(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SSpecialEvent.params)
  return params_.Get(index);
}
::NetProto::KeyValuePair* C2SSpecialEvent::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SSpecialEvent.params)
  return params_.Mutable(index);
}
::NetProto::KeyValuePair* C2SSpecialEvent::add_params() {
  // @@protoc_insertion_point(field_add:NetProto.CS.C2SSpecialEvent.params)
  return params_.Add();
}
::google::protobuf::RepeatedPtrField< ::NetProto::KeyValuePair >*
C2SSpecialEvent::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.CS.C2SSpecialEvent.params)
  return &params_;
}
const ::google::protobuf::RepeatedPtrField< ::NetProto::KeyValuePair >&
C2SSpecialEvent::params() const {
  // @@protoc_insertion_point(field_list:NetProto.CS.C2SSpecialEvent.params)
  return params_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SObjPosRotEvent::kMsgHeadFieldNumber;
const int C2SObjPosRotEvent::kObjPosRotChangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SObjPosRotEvent::C2SObjPosRotEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.CS.C2SObjPosRotEvent)
}
C2SObjPosRotEvent::C2SObjPosRotEvent(const C2SObjPosRotEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      obj_pos_rot_change_(from.obj_pos_rot_change_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_msg_head()) {
    msg_head_ = new ::NetProto::MsgHead(*from.msg_head_);
  } else {
    msg_head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NetProto.CS.C2SObjPosRotEvent)
}

void C2SObjPosRotEvent::SharedCtor() {
  msg_head_ = NULL;
  _cached_size_ = 0;
}

C2SObjPosRotEvent::~C2SObjPosRotEvent() {
  // @@protoc_insertion_point(destructor:NetProto.CS.C2SObjPosRotEvent)
  SharedDtor();
}

void C2SObjPosRotEvent::SharedDtor() {
  if (this != internal_default_instance()) {
    delete msg_head_;
  }
}

void C2SObjPosRotEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SObjPosRotEvent::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C2SObjPosRotEvent& C2SObjPosRotEvent::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

C2SObjPosRotEvent* C2SObjPosRotEvent::New(::google::protobuf::Arena* arena) const {
  C2SObjPosRotEvent* n = new C2SObjPosRotEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SObjPosRotEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.CS.C2SObjPosRotEvent)
  obj_pos_rot_change_.Clear();
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) {
    delete msg_head_;
  }
  msg_head_ = NULL;
}

bool C2SObjPosRotEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.CS.C2SObjPosRotEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.MsgHead msg_head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NetProto.CS.ObjPosRotChange obj_pos_rot_change = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_obj_pos_rot_change()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.CS.C2SObjPosRotEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.CS.C2SObjPosRotEvent)
  return false;
#undef DO_
}

void C2SObjPosRotEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.CS.C2SObjPosRotEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msg_head_, output);
  }

  // repeated .NetProto.CS.ObjPosRotChange obj_pos_rot_change = 3;
  for (unsigned int i = 0, n = this->obj_pos_rot_change_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->obj_pos_rot_change(i), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.CS.C2SObjPosRotEvent)
}

::google::protobuf::uint8* C2SObjPosRotEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.CS.C2SObjPosRotEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msg_head_, deterministic, target);
  }

  // repeated .NetProto.CS.ObjPosRotChange obj_pos_rot_change = 3;
  for (unsigned int i = 0, n = this->obj_pos_rot_change_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->obj_pos_rot_change(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.CS.C2SObjPosRotEvent)
  return target;
}

size_t C2SObjPosRotEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.CS.C2SObjPosRotEvent)
  size_t total_size = 0;

  // repeated .NetProto.CS.ObjPosRotChange obj_pos_rot_change = 3;
  {
    unsigned int count = this->obj_pos_rot_change_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->obj_pos_rot_change(i));
    }
  }

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SObjPosRotEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.CS.C2SObjPosRotEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SObjPosRotEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SObjPosRotEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.CS.C2SObjPosRotEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.CS.C2SObjPosRotEvent)
    MergeFrom(*source);
  }
}

void C2SObjPosRotEvent::MergeFrom(const C2SObjPosRotEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.CS.C2SObjPosRotEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  obj_pos_rot_change_.MergeFrom(from.obj_pos_rot_change_);
  if (from.has_msg_head()) {
    mutable_msg_head()->::NetProto::MsgHead::MergeFrom(from.msg_head());
  }
}

void C2SObjPosRotEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.CS.C2SObjPosRotEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SObjPosRotEvent::CopyFrom(const C2SObjPosRotEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.CS.C2SObjPosRotEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SObjPosRotEvent::IsInitialized() const {
  return true;
}

void C2SObjPosRotEvent::Swap(C2SObjPosRotEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SObjPosRotEvent::InternalSwap(C2SObjPosRotEvent* other) {
  obj_pos_rot_change_.InternalSwap(&other->obj_pos_rot_change_);
  std::swap(msg_head_, other->msg_head_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SObjPosRotEvent::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SObjPosRotEvent

// .NetProto.MsgHead msg_head = 1;
bool C2SObjPosRotEvent::has_msg_head() const {
  return this != internal_default_instance() && msg_head_ != NULL;
}
void C2SObjPosRotEvent::clear_msg_head() {
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) delete msg_head_;
  msg_head_ = NULL;
}
const ::NetProto::MsgHead& C2SObjPosRotEvent::msg_head() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SObjPosRotEvent.msg_head)
  return msg_head_ != NULL ? *msg_head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
::NetProto::MsgHead* C2SObjPosRotEvent::mutable_msg_head() {
  
  if (msg_head_ == NULL) {
    msg_head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SObjPosRotEvent.msg_head)
  return msg_head_;
}
::NetProto::MsgHead* C2SObjPosRotEvent::release_msg_head() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2SObjPosRotEvent.msg_head)
  
  ::NetProto::MsgHead* temp = msg_head_;
  msg_head_ = NULL;
  return temp;
}
void C2SObjPosRotEvent::set_allocated_msg_head(::NetProto::MsgHead* msg_head) {
  delete msg_head_;
  msg_head_ = msg_head;
  if (msg_head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2SObjPosRotEvent.msg_head)
}

// repeated .NetProto.CS.ObjPosRotChange obj_pos_rot_change = 3;
int C2SObjPosRotEvent::obj_pos_rot_change_size() const {
  return obj_pos_rot_change_.size();
}
void C2SObjPosRotEvent::clear_obj_pos_rot_change() {
  obj_pos_rot_change_.Clear();
}
const ::NetProto::CS::ObjPosRotChange& C2SObjPosRotEvent::obj_pos_rot_change(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SObjPosRotEvent.obj_pos_rot_change)
  return obj_pos_rot_change_.Get(index);
}
::NetProto::CS::ObjPosRotChange* C2SObjPosRotEvent::mutable_obj_pos_rot_change(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SObjPosRotEvent.obj_pos_rot_change)
  return obj_pos_rot_change_.Mutable(index);
}
::NetProto::CS::ObjPosRotChange* C2SObjPosRotEvent::add_obj_pos_rot_change() {
  // @@protoc_insertion_point(field_add:NetProto.CS.C2SObjPosRotEvent.obj_pos_rot_change)
  return obj_pos_rot_change_.Add();
}
::google::protobuf::RepeatedPtrField< ::NetProto::CS::ObjPosRotChange >*
C2SObjPosRotEvent::mutable_obj_pos_rot_change() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.CS.C2SObjPosRotEvent.obj_pos_rot_change)
  return &obj_pos_rot_change_;
}
const ::google::protobuf::RepeatedPtrField< ::NetProto::CS::ObjPosRotChange >&
C2SObjPosRotEvent::obj_pos_rot_change() const {
  // @@protoc_insertion_point(field_list:NetProto.CS.C2SObjPosRotEvent.obj_pos_rot_change)
  return obj_pos_rot_change_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SVision::kMsgHeadFieldNumber;
const int C2SVision::kEnterObjUuidFieldNumber;
const int C2SVision::kEnterObjRelationFieldNumber;
const int C2SVision::kLeaveObjUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SVision::C2SVision()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.CS.C2SVision)
}
C2SVision::C2SVision(const C2SVision& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      enter_obj_uuid_(from.enter_obj_uuid_),
      enter_obj_relation_(from.enter_obj_relation_),
      leave_obj_uuid_(from.leave_obj_uuid_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_msg_head()) {
    msg_head_ = new ::NetProto::MsgHead(*from.msg_head_);
  } else {
    msg_head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NetProto.CS.C2SVision)
}

void C2SVision::SharedCtor() {
  msg_head_ = NULL;
  _cached_size_ = 0;
}

C2SVision::~C2SVision() {
  // @@protoc_insertion_point(destructor:NetProto.CS.C2SVision)
  SharedDtor();
}

void C2SVision::SharedDtor() {
  if (this != internal_default_instance()) {
    delete msg_head_;
  }
}

void C2SVision::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SVision::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C2SVision& C2SVision::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

C2SVision* C2SVision::New(::google::protobuf::Arena* arena) const {
  C2SVision* n = new C2SVision;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SVision::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.CS.C2SVision)
  enter_obj_uuid_.Clear();
  enter_obj_relation_.Clear();
  leave_obj_uuid_.Clear();
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) {
    delete msg_head_;
  }
  msg_head_ = NULL;
}

bool C2SVision::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.CS.C2SVision)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.MsgHead msg_head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string enter_obj_uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_enter_obj_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->enter_obj_uuid(this->enter_obj_uuid_size() - 1).data(),
            this->enter_obj_uuid(this->enter_obj_uuid_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.CS.C2SVision.enter_obj_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NetProto.ObjPosRelation enter_obj_relation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_enter_obj_relation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string leave_obj_uuid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_leave_obj_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->leave_obj_uuid(this->leave_obj_uuid_size() - 1).data(),
            this->leave_obj_uuid(this->leave_obj_uuid_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.CS.C2SVision.leave_obj_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.CS.C2SVision)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.CS.C2SVision)
  return false;
#undef DO_
}

void C2SVision::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.CS.C2SVision)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msg_head_, output);
  }

  // repeated string enter_obj_uuid = 2;
  for (int i = 0, n = this->enter_obj_uuid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->enter_obj_uuid(i).data(), this->enter_obj_uuid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SVision.enter_obj_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->enter_obj_uuid(i), output);
  }

  // repeated .NetProto.ObjPosRelation enter_obj_relation = 3;
  for (unsigned int i = 0, n = this->enter_obj_relation_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->enter_obj_relation(i), output);
  }

  // repeated string leave_obj_uuid = 4;
  for (int i = 0, n = this->leave_obj_uuid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->leave_obj_uuid(i).data(), this->leave_obj_uuid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SVision.leave_obj_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->leave_obj_uuid(i), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.CS.C2SVision)
}

::google::protobuf::uint8* C2SVision::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.CS.C2SVision)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msg_head_, deterministic, target);
  }

  // repeated string enter_obj_uuid = 2;
  for (int i = 0, n = this->enter_obj_uuid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->enter_obj_uuid(i).data(), this->enter_obj_uuid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SVision.enter_obj_uuid");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->enter_obj_uuid(i), target);
  }

  // repeated .NetProto.ObjPosRelation enter_obj_relation = 3;
  for (unsigned int i = 0, n = this->enter_obj_relation_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->enter_obj_relation(i), deterministic, target);
  }

  // repeated string leave_obj_uuid = 4;
  for (int i = 0, n = this->leave_obj_uuid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->leave_obj_uuid(i).data(), this->leave_obj_uuid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SVision.leave_obj_uuid");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->leave_obj_uuid(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.CS.C2SVision)
  return target;
}

size_t C2SVision::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.CS.C2SVision)
  size_t total_size = 0;

  // repeated string enter_obj_uuid = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->enter_obj_uuid_size());
  for (int i = 0, n = this->enter_obj_uuid_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->enter_obj_uuid(i));
  }

  // repeated .NetProto.ObjPosRelation enter_obj_relation = 3;
  {
    unsigned int count = this->enter_obj_relation_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->enter_obj_relation(i));
    }
  }

  // repeated string leave_obj_uuid = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->leave_obj_uuid_size());
  for (int i = 0, n = this->leave_obj_uuid_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->leave_obj_uuid(i));
  }

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SVision::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.CS.C2SVision)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SVision* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SVision>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.CS.C2SVision)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.CS.C2SVision)
    MergeFrom(*source);
  }
}

void C2SVision::MergeFrom(const C2SVision& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.CS.C2SVision)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  enter_obj_uuid_.MergeFrom(from.enter_obj_uuid_);
  enter_obj_relation_.MergeFrom(from.enter_obj_relation_);
  leave_obj_uuid_.MergeFrom(from.leave_obj_uuid_);
  if (from.has_msg_head()) {
    mutable_msg_head()->::NetProto::MsgHead::MergeFrom(from.msg_head());
  }
}

void C2SVision::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.CS.C2SVision)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SVision::CopyFrom(const C2SVision& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.CS.C2SVision)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SVision::IsInitialized() const {
  return true;
}

void C2SVision::Swap(C2SVision* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SVision::InternalSwap(C2SVision* other) {
  enter_obj_uuid_.InternalSwap(&other->enter_obj_uuid_);
  enter_obj_relation_.InternalSwap(&other->enter_obj_relation_);
  leave_obj_uuid_.InternalSwap(&other->leave_obj_uuid_);
  std::swap(msg_head_, other->msg_head_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SVision::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SVision

// .NetProto.MsgHead msg_head = 1;
bool C2SVision::has_msg_head() const {
  return this != internal_default_instance() && msg_head_ != NULL;
}
void C2SVision::clear_msg_head() {
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) delete msg_head_;
  msg_head_ = NULL;
}
const ::NetProto::MsgHead& C2SVision::msg_head() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SVision.msg_head)
  return msg_head_ != NULL ? *msg_head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
::NetProto::MsgHead* C2SVision::mutable_msg_head() {
  
  if (msg_head_ == NULL) {
    msg_head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SVision.msg_head)
  return msg_head_;
}
::NetProto::MsgHead* C2SVision::release_msg_head() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2SVision.msg_head)
  
  ::NetProto::MsgHead* temp = msg_head_;
  msg_head_ = NULL;
  return temp;
}
void C2SVision::set_allocated_msg_head(::NetProto::MsgHead* msg_head) {
  delete msg_head_;
  msg_head_ = msg_head;
  if (msg_head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2SVision.msg_head)
}

// repeated string enter_obj_uuid = 2;
int C2SVision::enter_obj_uuid_size() const {
  return enter_obj_uuid_.size();
}
void C2SVision::clear_enter_obj_uuid() {
  enter_obj_uuid_.Clear();
}
const ::std::string& C2SVision::enter_obj_uuid(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SVision.enter_obj_uuid)
  return enter_obj_uuid_.Get(index);
}
::std::string* C2SVision::mutable_enter_obj_uuid(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SVision.enter_obj_uuid)
  return enter_obj_uuid_.Mutable(index);
}
void C2SVision::set_enter_obj_uuid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:NetProto.CS.C2SVision.enter_obj_uuid)
  enter_obj_uuid_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void C2SVision::set_enter_obj_uuid(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:NetProto.CS.C2SVision.enter_obj_uuid)
  enter_obj_uuid_.Mutable(index)->assign(std::move(value));
}
#endif
void C2SVision::set_enter_obj_uuid(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  enter_obj_uuid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:NetProto.CS.C2SVision.enter_obj_uuid)
}
void C2SVision::set_enter_obj_uuid(int index, const char* value, size_t size) {
  enter_obj_uuid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:NetProto.CS.C2SVision.enter_obj_uuid)
}
::std::string* C2SVision::add_enter_obj_uuid() {
  // @@protoc_insertion_point(field_add_mutable:NetProto.CS.C2SVision.enter_obj_uuid)
  return enter_obj_uuid_.Add();
}
void C2SVision::add_enter_obj_uuid(const ::std::string& value) {
  enter_obj_uuid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:NetProto.CS.C2SVision.enter_obj_uuid)
}
#if LANG_CXX11
void C2SVision::add_enter_obj_uuid(::std::string&& value) {
  enter_obj_uuid_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:NetProto.CS.C2SVision.enter_obj_uuid)
}
#endif
void C2SVision::add_enter_obj_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  enter_obj_uuid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:NetProto.CS.C2SVision.enter_obj_uuid)
}
void C2SVision::add_enter_obj_uuid(const char* value, size_t size) {
  enter_obj_uuid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:NetProto.CS.C2SVision.enter_obj_uuid)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
C2SVision::enter_obj_uuid() const {
  // @@protoc_insertion_point(field_list:NetProto.CS.C2SVision.enter_obj_uuid)
  return enter_obj_uuid_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
C2SVision::mutable_enter_obj_uuid() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.CS.C2SVision.enter_obj_uuid)
  return &enter_obj_uuid_;
}

// repeated .NetProto.ObjPosRelation enter_obj_relation = 3;
int C2SVision::enter_obj_relation_size() const {
  return enter_obj_relation_.size();
}
void C2SVision::clear_enter_obj_relation() {
  enter_obj_relation_.Clear();
}
const ::NetProto::ObjPosRelation& C2SVision::enter_obj_relation(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SVision.enter_obj_relation)
  return enter_obj_relation_.Get(index);
}
::NetProto::ObjPosRelation* C2SVision::mutable_enter_obj_relation(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SVision.enter_obj_relation)
  return enter_obj_relation_.Mutable(index);
}
::NetProto::ObjPosRelation* C2SVision::add_enter_obj_relation() {
  // @@protoc_insertion_point(field_add:NetProto.CS.C2SVision.enter_obj_relation)
  return enter_obj_relation_.Add();
}
::google::protobuf::RepeatedPtrField< ::NetProto::ObjPosRelation >*
C2SVision::mutable_enter_obj_relation() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.CS.C2SVision.enter_obj_relation)
  return &enter_obj_relation_;
}
const ::google::protobuf::RepeatedPtrField< ::NetProto::ObjPosRelation >&
C2SVision::enter_obj_relation() const {
  // @@protoc_insertion_point(field_list:NetProto.CS.C2SVision.enter_obj_relation)
  return enter_obj_relation_;
}

// repeated string leave_obj_uuid = 4;
int C2SVision::leave_obj_uuid_size() const {
  return leave_obj_uuid_.size();
}
void C2SVision::clear_leave_obj_uuid() {
  leave_obj_uuid_.Clear();
}
const ::std::string& C2SVision::leave_obj_uuid(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SVision.leave_obj_uuid)
  return leave_obj_uuid_.Get(index);
}
::std::string* C2SVision::mutable_leave_obj_uuid(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SVision.leave_obj_uuid)
  return leave_obj_uuid_.Mutable(index);
}
void C2SVision::set_leave_obj_uuid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:NetProto.CS.C2SVision.leave_obj_uuid)
  leave_obj_uuid_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void C2SVision::set_leave_obj_uuid(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:NetProto.CS.C2SVision.leave_obj_uuid)
  leave_obj_uuid_.Mutable(index)->assign(std::move(value));
}
#endif
void C2SVision::set_leave_obj_uuid(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  leave_obj_uuid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:NetProto.CS.C2SVision.leave_obj_uuid)
}
void C2SVision::set_leave_obj_uuid(int index, const char* value, size_t size) {
  leave_obj_uuid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:NetProto.CS.C2SVision.leave_obj_uuid)
}
::std::string* C2SVision::add_leave_obj_uuid() {
  // @@protoc_insertion_point(field_add_mutable:NetProto.CS.C2SVision.leave_obj_uuid)
  return leave_obj_uuid_.Add();
}
void C2SVision::add_leave_obj_uuid(const ::std::string& value) {
  leave_obj_uuid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:NetProto.CS.C2SVision.leave_obj_uuid)
}
#if LANG_CXX11
void C2SVision::add_leave_obj_uuid(::std::string&& value) {
  leave_obj_uuid_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:NetProto.CS.C2SVision.leave_obj_uuid)
}
#endif
void C2SVision::add_leave_obj_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  leave_obj_uuid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:NetProto.CS.C2SVision.leave_obj_uuid)
}
void C2SVision::add_leave_obj_uuid(const char* value, size_t size) {
  leave_obj_uuid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:NetProto.CS.C2SVision.leave_obj_uuid)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
C2SVision::leave_obj_uuid() const {
  // @@protoc_insertion_point(field_list:NetProto.CS.C2SVision.leave_obj_uuid)
  return leave_obj_uuid_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
C2SVision::mutable_leave_obj_uuid() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.CS.C2SVision.leave_obj_uuid)
  return &leave_obj_uuid_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SVoice::kVoiceTypeFieldNumber;
const int C2SVoice::kVoiceStatusFieldNumber;
const int C2SVoice::kVolumeLevelFieldNumber;
const int C2SVoice::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SVoice::C2SVoice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.CS.C2SVoice)
}
C2SVoice::C2SVoice(const C2SVoice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.params().size() > 0) {
    params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.params_);
  }
  ::memcpy(&voice_type_, &from.voice_type_,
    reinterpret_cast<char*>(&volume_level_) -
    reinterpret_cast<char*>(&voice_type_) + sizeof(volume_level_));
  // @@protoc_insertion_point(copy_constructor:NetProto.CS.C2SVoice)
}

void C2SVoice::SharedCtor() {
  params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&voice_type_, 0, reinterpret_cast<char*>(&volume_level_) -
    reinterpret_cast<char*>(&voice_type_) + sizeof(volume_level_));
  _cached_size_ = 0;
}

C2SVoice::~C2SVoice() {
  // @@protoc_insertion_point(destructor:NetProto.CS.C2SVoice)
  SharedDtor();
}

void C2SVoice::SharedDtor() {
  params_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void C2SVoice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SVoice::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C2SVoice& C2SVoice::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

C2SVoice* C2SVoice::New(::google::protobuf::Arena* arena) const {
  C2SVoice* n = new C2SVoice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SVoice::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.CS.C2SVoice)
  params_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&voice_type_, 0, reinterpret_cast<char*>(&volume_level_) -
    reinterpret_cast<char*>(&voice_type_) + sizeof(volume_level_));
}

bool C2SVoice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.CS.C2SVoice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.CS.C2SVoice.VoiceType voice_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_voice_type(static_cast< ::NetProto::CS::C2SVoice_VoiceType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.CS.C2SVoice.VoiceStatus voice_status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_voice_status(static_cast< ::NetProto::CS::C2SVoice_VoiceStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.CS.C2SVoice.VolumeLevel volume_level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_volume_level(static_cast< ::NetProto::CS::C2SVoice_VolumeLevel >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string params = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_params()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->params().data(), this->params().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.CS.C2SVoice.params"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.CS.C2SVoice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.CS.C2SVoice)
  return false;
#undef DO_
}

void C2SVoice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.CS.C2SVoice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.CS.C2SVoice.VoiceType voice_type = 1;
  if (this->voice_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->voice_type(), output);
  }

  // .NetProto.CS.C2SVoice.VoiceStatus voice_status = 2;
  if (this->voice_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->voice_status(), output);
  }

  // .NetProto.CS.C2SVoice.VolumeLevel volume_level = 3;
  if (this->volume_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->volume_level(), output);
  }

  // string params = 4;
  if (this->params().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->params().data(), this->params().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SVoice.params");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->params(), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.CS.C2SVoice)
}

::google::protobuf::uint8* C2SVoice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.CS.C2SVoice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.CS.C2SVoice.VoiceType voice_type = 1;
  if (this->voice_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->voice_type(), target);
  }

  // .NetProto.CS.C2SVoice.VoiceStatus voice_status = 2;
  if (this->voice_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->voice_status(), target);
  }

  // .NetProto.CS.C2SVoice.VolumeLevel volume_level = 3;
  if (this->volume_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->volume_level(), target);
  }

  // string params = 4;
  if (this->params().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->params().data(), this->params().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SVoice.params");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->params(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.CS.C2SVoice)
  return target;
}

size_t C2SVoice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.CS.C2SVoice)
  size_t total_size = 0;

  // string params = 4;
  if (this->params().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->params());
  }

  // .NetProto.CS.C2SVoice.VoiceType voice_type = 1;
  if (this->voice_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->voice_type());
  }

  // .NetProto.CS.C2SVoice.VoiceStatus voice_status = 2;
  if (this->voice_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->voice_status());
  }

  // .NetProto.CS.C2SVoice.VolumeLevel volume_level = 3;
  if (this->volume_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->volume_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SVoice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.CS.C2SVoice)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SVoice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SVoice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.CS.C2SVoice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.CS.C2SVoice)
    MergeFrom(*source);
  }
}

void C2SVoice::MergeFrom(const C2SVoice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.CS.C2SVoice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.params().size() > 0) {

    params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.params_);
  }
  if (from.voice_type() != 0) {
    set_voice_type(from.voice_type());
  }
  if (from.voice_status() != 0) {
    set_voice_status(from.voice_status());
  }
  if (from.volume_level() != 0) {
    set_volume_level(from.volume_level());
  }
}

void C2SVoice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.CS.C2SVoice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SVoice::CopyFrom(const C2SVoice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.CS.C2SVoice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SVoice::IsInitialized() const {
  return true;
}

void C2SVoice::Swap(C2SVoice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SVoice::InternalSwap(C2SVoice* other) {
  params_.Swap(&other->params_);
  std::swap(voice_type_, other->voice_type_);
  std::swap(voice_status_, other->voice_status_);
  std::swap(volume_level_, other->volume_level_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SVoice::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SVoice

// .NetProto.CS.C2SVoice.VoiceType voice_type = 1;
void C2SVoice::clear_voice_type() {
  voice_type_ = 0;
}
::NetProto::CS::C2SVoice_VoiceType C2SVoice::voice_type() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SVoice.voice_type)
  return static_cast< ::NetProto::CS::C2SVoice_VoiceType >(voice_type_);
}
void C2SVoice::set_voice_type(::NetProto::CS::C2SVoice_VoiceType value) {
  
  voice_type_ = value;
  // @@protoc_insertion_point(field_set:NetProto.CS.C2SVoice.voice_type)
}

// .NetProto.CS.C2SVoice.VoiceStatus voice_status = 2;
void C2SVoice::clear_voice_status() {
  voice_status_ = 0;
}
::NetProto::CS::C2SVoice_VoiceStatus C2SVoice::voice_status() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SVoice.voice_status)
  return static_cast< ::NetProto::CS::C2SVoice_VoiceStatus >(voice_status_);
}
void C2SVoice::set_voice_status(::NetProto::CS::C2SVoice_VoiceStatus value) {
  
  voice_status_ = value;
  // @@protoc_insertion_point(field_set:NetProto.CS.C2SVoice.voice_status)
}

// .NetProto.CS.C2SVoice.VolumeLevel volume_level = 3;
void C2SVoice::clear_volume_level() {
  volume_level_ = 0;
}
::NetProto::CS::C2SVoice_VolumeLevel C2SVoice::volume_level() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SVoice.volume_level)
  return static_cast< ::NetProto::CS::C2SVoice_VolumeLevel >(volume_level_);
}
void C2SVoice::set_volume_level(::NetProto::CS::C2SVoice_VolumeLevel value) {
  
  volume_level_ = value;
  // @@protoc_insertion_point(field_set:NetProto.CS.C2SVoice.volume_level)
}

// string params = 4;
void C2SVoice::clear_params() {
  params_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& C2SVoice::params() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SVoice.params)
  return params_.GetNoArena();
}
void C2SVoice::set_params(const ::std::string& value) {
  
  params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.CS.C2SVoice.params)
}
#if LANG_CXX11
void C2SVoice::set_params(::std::string&& value) {
  
  params_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.CS.C2SVoice.params)
}
#endif
void C2SVoice::set_params(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.CS.C2SVoice.params)
}
void C2SVoice::set_params(const char* value, size_t size) {
  
  params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.CS.C2SVoice.params)
}
::std::string* C2SVoice::mutable_params() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SVoice.params)
  return params_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* C2SVoice::release_params() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2SVoice.params)
  
  return params_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void C2SVoice::set_allocated_params(::std::string* params) {
  if (params != NULL) {
    
  } else {
    
  }
  params_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), params);
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2SVoice.params)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SVoiceSpeech::kMsgHeadFieldNumber;
const int C2SVoiceSpeech::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SVoiceSpeech::C2SVoiceSpeech()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.CS.C2SVoiceSpeech)
}
C2SVoiceSpeech::C2SVoiceSpeech(const C2SVoiceSpeech& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.has_msg_head()) {
    msg_head_ = new ::NetProto::MsgHead(*from.msg_head_);
  } else {
    msg_head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NetProto.CS.C2SVoiceSpeech)
}

void C2SVoiceSpeech::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_head_ = NULL;
  _cached_size_ = 0;
}

C2SVoiceSpeech::~C2SVoiceSpeech() {
  // @@protoc_insertion_point(destructor:NetProto.CS.C2SVoiceSpeech)
  SharedDtor();
}

void C2SVoiceSpeech::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete msg_head_;
  }
}

void C2SVoiceSpeech::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SVoiceSpeech::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C2SVoiceSpeech& C2SVoiceSpeech::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

C2SVoiceSpeech* C2SVoiceSpeech::New(::google::protobuf::Arena* arena) const {
  C2SVoiceSpeech* n = new C2SVoiceSpeech;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SVoiceSpeech::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.CS.C2SVoiceSpeech)
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) {
    delete msg_head_;
  }
  msg_head_ = NULL;
}

bool C2SVoiceSpeech::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.CS.C2SVoiceSpeech)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.MsgHead msg_head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.CS.C2SVoiceSpeech.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.CS.C2SVoiceSpeech)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.CS.C2SVoiceSpeech)
  return false;
#undef DO_
}

void C2SVoiceSpeech::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.CS.C2SVoiceSpeech)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msg_head_, output);
  }

  // string text = 3;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SVoiceSpeech.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->text(), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.CS.C2SVoiceSpeech)
}

::google::protobuf::uint8* C2SVoiceSpeech::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.CS.C2SVoiceSpeech)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msg_head_, deterministic, target);
  }

  // string text = 3;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SVoiceSpeech.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->text(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.CS.C2SVoiceSpeech)
  return target;
}

size_t C2SVoiceSpeech::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.CS.C2SVoiceSpeech)
  size_t total_size = 0;

  // string text = 3;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SVoiceSpeech::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.CS.C2SVoiceSpeech)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SVoiceSpeech* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SVoiceSpeech>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.CS.C2SVoiceSpeech)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.CS.C2SVoiceSpeech)
    MergeFrom(*source);
  }
}

void C2SVoiceSpeech::MergeFrom(const C2SVoiceSpeech& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.CS.C2SVoiceSpeech)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.has_msg_head()) {
    mutable_msg_head()->::NetProto::MsgHead::MergeFrom(from.msg_head());
  }
}

void C2SVoiceSpeech::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.CS.C2SVoiceSpeech)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SVoiceSpeech::CopyFrom(const C2SVoiceSpeech& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.CS.C2SVoiceSpeech)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SVoiceSpeech::IsInitialized() const {
  return true;
}

void C2SVoiceSpeech::Swap(C2SVoiceSpeech* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SVoiceSpeech::InternalSwap(C2SVoiceSpeech* other) {
  text_.Swap(&other->text_);
  std::swap(msg_head_, other->msg_head_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SVoiceSpeech::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SVoiceSpeech

// .NetProto.MsgHead msg_head = 1;
bool C2SVoiceSpeech::has_msg_head() const {
  return this != internal_default_instance() && msg_head_ != NULL;
}
void C2SVoiceSpeech::clear_msg_head() {
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) delete msg_head_;
  msg_head_ = NULL;
}
const ::NetProto::MsgHead& C2SVoiceSpeech::msg_head() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SVoiceSpeech.msg_head)
  return msg_head_ != NULL ? *msg_head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
::NetProto::MsgHead* C2SVoiceSpeech::mutable_msg_head() {
  
  if (msg_head_ == NULL) {
    msg_head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SVoiceSpeech.msg_head)
  return msg_head_;
}
::NetProto::MsgHead* C2SVoiceSpeech::release_msg_head() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2SVoiceSpeech.msg_head)
  
  ::NetProto::MsgHead* temp = msg_head_;
  msg_head_ = NULL;
  return temp;
}
void C2SVoiceSpeech::set_allocated_msg_head(::NetProto::MsgHead* msg_head) {
  delete msg_head_;
  msg_head_ = msg_head;
  if (msg_head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2SVoiceSpeech.msg_head)
}

// string text = 3;
void C2SVoiceSpeech::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& C2SVoiceSpeech::text() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SVoiceSpeech.text)
  return text_.GetNoArena();
}
void C2SVoiceSpeech::set_text(const ::std::string& value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.CS.C2SVoiceSpeech.text)
}
#if LANG_CXX11
void C2SVoiceSpeech::set_text(::std::string&& value) {
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.CS.C2SVoiceSpeech.text)
}
#endif
void C2SVoiceSpeech::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.CS.C2SVoiceSpeech.text)
}
void C2SVoiceSpeech::set_text(const char* value, size_t size) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.CS.C2SVoiceSpeech.text)
}
::std::string* C2SVoiceSpeech::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SVoiceSpeech.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* C2SVoiceSpeech::release_text() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2SVoiceSpeech.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void C2SVoiceSpeech::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2SVoiceSpeech.text)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SAddObject::kMsgHeadFieldNumber;
const int C2SAddObject::kConfigIdFieldNumber;
const int C2SAddObject::kObjUuidFieldNumber;
const int C2SAddObject::kClassIdFieldNumber;
const int C2SAddObject::kItemIdFieldNumber;
const int C2SAddObject::kPosRotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SAddObject::C2SAddObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.CS.C2SAddObject)
}
C2SAddObject::C2SAddObject(const C2SAddObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  obj_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.obj_uuid().size() > 0) {
    obj_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_uuid_);
  }
  if (from.has_msg_head()) {
    msg_head_ = new ::NetProto::MsgHead(*from.msg_head_);
  } else {
    msg_head_ = NULL;
  }
  if (from.has_pos_rot()) {
    pos_rot_ = new ::NetProto::PosRot(*from.pos_rot_);
  } else {
    pos_rot_ = NULL;
  }
  ::memcpy(&config_id_, &from.config_id_,
    reinterpret_cast<char*>(&item_id_) -
    reinterpret_cast<char*>(&config_id_) + sizeof(item_id_));
  // @@protoc_insertion_point(copy_constructor:NetProto.CS.C2SAddObject)
}

void C2SAddObject::SharedCtor() {
  obj_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msg_head_, 0, reinterpret_cast<char*>(&item_id_) -
    reinterpret_cast<char*>(&msg_head_) + sizeof(item_id_));
  _cached_size_ = 0;
}

C2SAddObject::~C2SAddObject() {
  // @@protoc_insertion_point(destructor:NetProto.CS.C2SAddObject)
  SharedDtor();
}

void C2SAddObject::SharedDtor() {
  obj_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete msg_head_;
  }
  if (this != internal_default_instance()) {
    delete pos_rot_;
  }
}

void C2SAddObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SAddObject::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C2SAddObject& C2SAddObject::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

C2SAddObject* C2SAddObject::New(::google::protobuf::Arena* arena) const {
  C2SAddObject* n = new C2SAddObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SAddObject::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.CS.C2SAddObject)
  obj_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) {
    delete msg_head_;
  }
  msg_head_ = NULL;
  if (GetArenaNoVirtual() == NULL && pos_rot_ != NULL) {
    delete pos_rot_;
  }
  pos_rot_ = NULL;
  ::memset(&config_id_, 0, reinterpret_cast<char*>(&item_id_) -
    reinterpret_cast<char*>(&config_id_) + sizeof(item_id_));
}

bool C2SAddObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.CS.C2SAddObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.MsgHead msg_head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 config_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string obj_uuid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->obj_uuid().data(), this->obj_uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.CS.C2SAddObject.obj_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 class_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &class_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 item_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.PosRot pos_rot = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos_rot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.CS.C2SAddObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.CS.C2SAddObject)
  return false;
#undef DO_
}

void C2SAddObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.CS.C2SAddObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msg_head_, output);
  }

  // uint32 config_id = 2;
  if (this->config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->config_id(), output);
  }

  // string obj_uuid = 3;
  if (this->obj_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->obj_uuid().data(), this->obj_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SAddObject.obj_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->obj_uuid(), output);
  }

  // uint32 class_id = 4;
  if (this->class_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->class_id(), output);
  }

  // uint32 item_id = 5;
  if (this->item_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->item_id(), output);
  }

  // .NetProto.PosRot pos_rot = 6;
  if (this->has_pos_rot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->pos_rot_, output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.CS.C2SAddObject)
}

::google::protobuf::uint8* C2SAddObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.CS.C2SAddObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msg_head_, deterministic, target);
  }

  // uint32 config_id = 2;
  if (this->config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->config_id(), target);
  }

  // string obj_uuid = 3;
  if (this->obj_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->obj_uuid().data(), this->obj_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SAddObject.obj_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->obj_uuid(), target);
  }

  // uint32 class_id = 4;
  if (this->class_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->class_id(), target);
  }

  // uint32 item_id = 5;
  if (this->item_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->item_id(), target);
  }

  // .NetProto.PosRot pos_rot = 6;
  if (this->has_pos_rot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->pos_rot_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.CS.C2SAddObject)
  return target;
}

size_t C2SAddObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.CS.C2SAddObject)
  size_t total_size = 0;

  // string obj_uuid = 3;
  if (this->obj_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj_uuid());
  }

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_head_);
  }

  // .NetProto.PosRot pos_rot = 6;
  if (this->has_pos_rot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_rot_);
  }

  // uint32 config_id = 2;
  if (this->config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->config_id());
  }

  // uint32 class_id = 4;
  if (this->class_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->class_id());
  }

  // uint32 item_id = 5;
  if (this->item_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->item_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SAddObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.CS.C2SAddObject)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SAddObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SAddObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.CS.C2SAddObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.CS.C2SAddObject)
    MergeFrom(*source);
  }
}

void C2SAddObject::MergeFrom(const C2SAddObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.CS.C2SAddObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_uuid().size() > 0) {

    obj_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_uuid_);
  }
  if (from.has_msg_head()) {
    mutable_msg_head()->::NetProto::MsgHead::MergeFrom(from.msg_head());
  }
  if (from.has_pos_rot()) {
    mutable_pos_rot()->::NetProto::PosRot::MergeFrom(from.pos_rot());
  }
  if (from.config_id() != 0) {
    set_config_id(from.config_id());
  }
  if (from.class_id() != 0) {
    set_class_id(from.class_id());
  }
  if (from.item_id() != 0) {
    set_item_id(from.item_id());
  }
}

void C2SAddObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.CS.C2SAddObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SAddObject::CopyFrom(const C2SAddObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.CS.C2SAddObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SAddObject::IsInitialized() const {
  return true;
}

void C2SAddObject::Swap(C2SAddObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SAddObject::InternalSwap(C2SAddObject* other) {
  obj_uuid_.Swap(&other->obj_uuid_);
  std::swap(msg_head_, other->msg_head_);
  std::swap(pos_rot_, other->pos_rot_);
  std::swap(config_id_, other->config_id_);
  std::swap(class_id_, other->class_id_);
  std::swap(item_id_, other->item_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SAddObject::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SAddObject

// .NetProto.MsgHead msg_head = 1;
bool C2SAddObject::has_msg_head() const {
  return this != internal_default_instance() && msg_head_ != NULL;
}
void C2SAddObject::clear_msg_head() {
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) delete msg_head_;
  msg_head_ = NULL;
}
const ::NetProto::MsgHead& C2SAddObject::msg_head() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SAddObject.msg_head)
  return msg_head_ != NULL ? *msg_head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
::NetProto::MsgHead* C2SAddObject::mutable_msg_head() {
  
  if (msg_head_ == NULL) {
    msg_head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SAddObject.msg_head)
  return msg_head_;
}
::NetProto::MsgHead* C2SAddObject::release_msg_head() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2SAddObject.msg_head)
  
  ::NetProto::MsgHead* temp = msg_head_;
  msg_head_ = NULL;
  return temp;
}
void C2SAddObject::set_allocated_msg_head(::NetProto::MsgHead* msg_head) {
  delete msg_head_;
  msg_head_ = msg_head;
  if (msg_head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2SAddObject.msg_head)
}

// uint32 config_id = 2;
void C2SAddObject::clear_config_id() {
  config_id_ = 0u;
}
::google::protobuf::uint32 C2SAddObject::config_id() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SAddObject.config_id)
  return config_id_;
}
void C2SAddObject::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.CS.C2SAddObject.config_id)
}

// string obj_uuid = 3;
void C2SAddObject::clear_obj_uuid() {
  obj_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& C2SAddObject::obj_uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SAddObject.obj_uuid)
  return obj_uuid_.GetNoArena();
}
void C2SAddObject::set_obj_uuid(const ::std::string& value) {
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.CS.C2SAddObject.obj_uuid)
}
#if LANG_CXX11
void C2SAddObject::set_obj_uuid(::std::string&& value) {
  
  obj_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.CS.C2SAddObject.obj_uuid)
}
#endif
void C2SAddObject::set_obj_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.CS.C2SAddObject.obj_uuid)
}
void C2SAddObject::set_obj_uuid(const char* value, size_t size) {
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.CS.C2SAddObject.obj_uuid)
}
::std::string* C2SAddObject::mutable_obj_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SAddObject.obj_uuid)
  return obj_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* C2SAddObject::release_obj_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2SAddObject.obj_uuid)
  
  return obj_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void C2SAddObject::set_allocated_obj_uuid(::std::string* obj_uuid) {
  if (obj_uuid != NULL) {
    
  } else {
    
  }
  obj_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj_uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2SAddObject.obj_uuid)
}

// uint32 class_id = 4;
void C2SAddObject::clear_class_id() {
  class_id_ = 0u;
}
::google::protobuf::uint32 C2SAddObject::class_id() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SAddObject.class_id)
  return class_id_;
}
void C2SAddObject::set_class_id(::google::protobuf::uint32 value) {
  
  class_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.CS.C2SAddObject.class_id)
}

// uint32 item_id = 5;
void C2SAddObject::clear_item_id() {
  item_id_ = 0u;
}
::google::protobuf::uint32 C2SAddObject::item_id() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SAddObject.item_id)
  return item_id_;
}
void C2SAddObject::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.CS.C2SAddObject.item_id)
}

// .NetProto.PosRot pos_rot = 6;
bool C2SAddObject::has_pos_rot() const {
  return this != internal_default_instance() && pos_rot_ != NULL;
}
void C2SAddObject::clear_pos_rot() {
  if (GetArenaNoVirtual() == NULL && pos_rot_ != NULL) delete pos_rot_;
  pos_rot_ = NULL;
}
const ::NetProto::PosRot& C2SAddObject::pos_rot() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SAddObject.pos_rot)
  return pos_rot_ != NULL ? *pos_rot_
                         : *::NetProto::PosRot::internal_default_instance();
}
::NetProto::PosRot* C2SAddObject::mutable_pos_rot() {
  
  if (pos_rot_ == NULL) {
    pos_rot_ = new ::NetProto::PosRot;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SAddObject.pos_rot)
  return pos_rot_;
}
::NetProto::PosRot* C2SAddObject::release_pos_rot() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2SAddObject.pos_rot)
  
  ::NetProto::PosRot* temp = pos_rot_;
  pos_rot_ = NULL;
  return temp;
}
void C2SAddObject::set_allocated_pos_rot(::NetProto::PosRot* pos_rot) {
  delete pos_rot_;
  pos_rot_ = pos_rot;
  if (pos_rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2SAddObject.pos_rot)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SReplaceObject::kMsgHeadFieldNumber;
const int C2SReplaceObject::kOldObjUuidFieldNumber;
const int C2SReplaceObject::kNewObjUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SReplaceObject::C2SReplaceObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.CS.C2SReplaceObject)
}
C2SReplaceObject::C2SReplaceObject(const C2SReplaceObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  old_obj_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.old_obj_uuid().size() > 0) {
    old_obj_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.old_obj_uuid_);
  }
  new_obj_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.new_obj_uuid().size() > 0) {
    new_obj_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_obj_uuid_);
  }
  if (from.has_msg_head()) {
    msg_head_ = new ::NetProto::MsgHead(*from.msg_head_);
  } else {
    msg_head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NetProto.CS.C2SReplaceObject)
}

void C2SReplaceObject::SharedCtor() {
  old_obj_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_obj_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_head_ = NULL;
  _cached_size_ = 0;
}

C2SReplaceObject::~C2SReplaceObject() {
  // @@protoc_insertion_point(destructor:NetProto.CS.C2SReplaceObject)
  SharedDtor();
}

void C2SReplaceObject::SharedDtor() {
  old_obj_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_obj_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete msg_head_;
  }
}

void C2SReplaceObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SReplaceObject::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C2SReplaceObject& C2SReplaceObject::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

C2SReplaceObject* C2SReplaceObject::New(::google::protobuf::Arena* arena) const {
  C2SReplaceObject* n = new C2SReplaceObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SReplaceObject::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.CS.C2SReplaceObject)
  old_obj_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_obj_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) {
    delete msg_head_;
  }
  msg_head_ = NULL;
}

bool C2SReplaceObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.CS.C2SReplaceObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.MsgHead msg_head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string old_obj_uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_old_obj_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->old_obj_uuid().data(), this->old_obj_uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.CS.C2SReplaceObject.old_obj_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string new_obj_uuid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_new_obj_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->new_obj_uuid().data(), this->new_obj_uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.CS.C2SReplaceObject.new_obj_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.CS.C2SReplaceObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.CS.C2SReplaceObject)
  return false;
#undef DO_
}

void C2SReplaceObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.CS.C2SReplaceObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msg_head_, output);
  }

  // string old_obj_uuid = 2;
  if (this->old_obj_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->old_obj_uuid().data(), this->old_obj_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SReplaceObject.old_obj_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->old_obj_uuid(), output);
  }

  // string new_obj_uuid = 3;
  if (this->new_obj_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->new_obj_uuid().data(), this->new_obj_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SReplaceObject.new_obj_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->new_obj_uuid(), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.CS.C2SReplaceObject)
}

::google::protobuf::uint8* C2SReplaceObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.CS.C2SReplaceObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msg_head_, deterministic, target);
  }

  // string old_obj_uuid = 2;
  if (this->old_obj_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->old_obj_uuid().data(), this->old_obj_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SReplaceObject.old_obj_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->old_obj_uuid(), target);
  }

  // string new_obj_uuid = 3;
  if (this->new_obj_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->new_obj_uuid().data(), this->new_obj_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SReplaceObject.new_obj_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->new_obj_uuid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.CS.C2SReplaceObject)
  return target;
}

size_t C2SReplaceObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.CS.C2SReplaceObject)
  size_t total_size = 0;

  // string old_obj_uuid = 2;
  if (this->old_obj_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->old_obj_uuid());
  }

  // string new_obj_uuid = 3;
  if (this->new_obj_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->new_obj_uuid());
  }

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SReplaceObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.CS.C2SReplaceObject)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SReplaceObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SReplaceObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.CS.C2SReplaceObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.CS.C2SReplaceObject)
    MergeFrom(*source);
  }
}

void C2SReplaceObject::MergeFrom(const C2SReplaceObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.CS.C2SReplaceObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.old_obj_uuid().size() > 0) {

    old_obj_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.old_obj_uuid_);
  }
  if (from.new_obj_uuid().size() > 0) {

    new_obj_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_obj_uuid_);
  }
  if (from.has_msg_head()) {
    mutable_msg_head()->::NetProto::MsgHead::MergeFrom(from.msg_head());
  }
}

void C2SReplaceObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.CS.C2SReplaceObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SReplaceObject::CopyFrom(const C2SReplaceObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.CS.C2SReplaceObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SReplaceObject::IsInitialized() const {
  return true;
}

void C2SReplaceObject::Swap(C2SReplaceObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SReplaceObject::InternalSwap(C2SReplaceObject* other) {
  old_obj_uuid_.Swap(&other->old_obj_uuid_);
  new_obj_uuid_.Swap(&other->new_obj_uuid_);
  std::swap(msg_head_, other->msg_head_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SReplaceObject::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SReplaceObject

// .NetProto.MsgHead msg_head = 1;
bool C2SReplaceObject::has_msg_head() const {
  return this != internal_default_instance() && msg_head_ != NULL;
}
void C2SReplaceObject::clear_msg_head() {
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) delete msg_head_;
  msg_head_ = NULL;
}
const ::NetProto::MsgHead& C2SReplaceObject::msg_head() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SReplaceObject.msg_head)
  return msg_head_ != NULL ? *msg_head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
::NetProto::MsgHead* C2SReplaceObject::mutable_msg_head() {
  
  if (msg_head_ == NULL) {
    msg_head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SReplaceObject.msg_head)
  return msg_head_;
}
::NetProto::MsgHead* C2SReplaceObject::release_msg_head() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2SReplaceObject.msg_head)
  
  ::NetProto::MsgHead* temp = msg_head_;
  msg_head_ = NULL;
  return temp;
}
void C2SReplaceObject::set_allocated_msg_head(::NetProto::MsgHead* msg_head) {
  delete msg_head_;
  msg_head_ = msg_head;
  if (msg_head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2SReplaceObject.msg_head)
}

// string old_obj_uuid = 2;
void C2SReplaceObject::clear_old_obj_uuid() {
  old_obj_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& C2SReplaceObject::old_obj_uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SReplaceObject.old_obj_uuid)
  return old_obj_uuid_.GetNoArena();
}
void C2SReplaceObject::set_old_obj_uuid(const ::std::string& value) {
  
  old_obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.CS.C2SReplaceObject.old_obj_uuid)
}
#if LANG_CXX11
void C2SReplaceObject::set_old_obj_uuid(::std::string&& value) {
  
  old_obj_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.CS.C2SReplaceObject.old_obj_uuid)
}
#endif
void C2SReplaceObject::set_old_obj_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  old_obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.CS.C2SReplaceObject.old_obj_uuid)
}
void C2SReplaceObject::set_old_obj_uuid(const char* value, size_t size) {
  
  old_obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.CS.C2SReplaceObject.old_obj_uuid)
}
::std::string* C2SReplaceObject::mutable_old_obj_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SReplaceObject.old_obj_uuid)
  return old_obj_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* C2SReplaceObject::release_old_obj_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2SReplaceObject.old_obj_uuid)
  
  return old_obj_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void C2SReplaceObject::set_allocated_old_obj_uuid(::std::string* old_obj_uuid) {
  if (old_obj_uuid != NULL) {
    
  } else {
    
  }
  old_obj_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), old_obj_uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2SReplaceObject.old_obj_uuid)
}

// string new_obj_uuid = 3;
void C2SReplaceObject::clear_new_obj_uuid() {
  new_obj_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& C2SReplaceObject::new_obj_uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SReplaceObject.new_obj_uuid)
  return new_obj_uuid_.GetNoArena();
}
void C2SReplaceObject::set_new_obj_uuid(const ::std::string& value) {
  
  new_obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.CS.C2SReplaceObject.new_obj_uuid)
}
#if LANG_CXX11
void C2SReplaceObject::set_new_obj_uuid(::std::string&& value) {
  
  new_obj_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.CS.C2SReplaceObject.new_obj_uuid)
}
#endif
void C2SReplaceObject::set_new_obj_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  new_obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.CS.C2SReplaceObject.new_obj_uuid)
}
void C2SReplaceObject::set_new_obj_uuid(const char* value, size_t size) {
  
  new_obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.CS.C2SReplaceObject.new_obj_uuid)
}
::std::string* C2SReplaceObject::mutable_new_obj_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SReplaceObject.new_obj_uuid)
  return new_obj_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* C2SReplaceObject::release_new_obj_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2SReplaceObject.new_obj_uuid)
  
  return new_obj_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void C2SReplaceObject::set_allocated_new_obj_uuid(::std::string* new_obj_uuid) {
  if (new_obj_uuid != NULL) {
    
  } else {
    
  }
  new_obj_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), new_obj_uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2SReplaceObject.new_obj_uuid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SDeleteObject::kMsgHeadFieldNumber;
const int C2SDeleteObject::kObjUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SDeleteObject::C2SDeleteObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.CS.C2SDeleteObject)
}
C2SDeleteObject::C2SDeleteObject(const C2SDeleteObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  obj_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.obj_uuid().size() > 0) {
    obj_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_uuid_);
  }
  if (from.has_msg_head()) {
    msg_head_ = new ::NetProto::MsgHead(*from.msg_head_);
  } else {
    msg_head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NetProto.CS.C2SDeleteObject)
}

void C2SDeleteObject::SharedCtor() {
  obj_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_head_ = NULL;
  _cached_size_ = 0;
}

C2SDeleteObject::~C2SDeleteObject() {
  // @@protoc_insertion_point(destructor:NetProto.CS.C2SDeleteObject)
  SharedDtor();
}

void C2SDeleteObject::SharedDtor() {
  obj_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete msg_head_;
  }
}

void C2SDeleteObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SDeleteObject::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C2SDeleteObject& C2SDeleteObject::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

C2SDeleteObject* C2SDeleteObject::New(::google::protobuf::Arena* arena) const {
  C2SDeleteObject* n = new C2SDeleteObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SDeleteObject::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.CS.C2SDeleteObject)
  obj_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) {
    delete msg_head_;
  }
  msg_head_ = NULL;
}

bool C2SDeleteObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.CS.C2SDeleteObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.MsgHead msg_head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string obj_uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->obj_uuid().data(), this->obj_uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.CS.C2SDeleteObject.obj_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.CS.C2SDeleteObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.CS.C2SDeleteObject)
  return false;
#undef DO_
}

void C2SDeleteObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.CS.C2SDeleteObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msg_head_, output);
  }

  // string obj_uuid = 2;
  if (this->obj_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->obj_uuid().data(), this->obj_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SDeleteObject.obj_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->obj_uuid(), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.CS.C2SDeleteObject)
}

::google::protobuf::uint8* C2SDeleteObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.CS.C2SDeleteObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msg_head_, deterministic, target);
  }

  // string obj_uuid = 2;
  if (this->obj_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->obj_uuid().data(), this->obj_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SDeleteObject.obj_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->obj_uuid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.CS.C2SDeleteObject)
  return target;
}

size_t C2SDeleteObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.CS.C2SDeleteObject)
  size_t total_size = 0;

  // string obj_uuid = 2;
  if (this->obj_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj_uuid());
  }

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SDeleteObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.CS.C2SDeleteObject)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SDeleteObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SDeleteObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.CS.C2SDeleteObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.CS.C2SDeleteObject)
    MergeFrom(*source);
  }
}

void C2SDeleteObject::MergeFrom(const C2SDeleteObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.CS.C2SDeleteObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_uuid().size() > 0) {

    obj_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_uuid_);
  }
  if (from.has_msg_head()) {
    mutable_msg_head()->::NetProto::MsgHead::MergeFrom(from.msg_head());
  }
}

void C2SDeleteObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.CS.C2SDeleteObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SDeleteObject::CopyFrom(const C2SDeleteObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.CS.C2SDeleteObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SDeleteObject::IsInitialized() const {
  return true;
}

void C2SDeleteObject::Swap(C2SDeleteObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SDeleteObject::InternalSwap(C2SDeleteObject* other) {
  obj_uuid_.Swap(&other->obj_uuid_);
  std::swap(msg_head_, other->msg_head_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SDeleteObject::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SDeleteObject

// .NetProto.MsgHead msg_head = 1;
bool C2SDeleteObject::has_msg_head() const {
  return this != internal_default_instance() && msg_head_ != NULL;
}
void C2SDeleteObject::clear_msg_head() {
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) delete msg_head_;
  msg_head_ = NULL;
}
const ::NetProto::MsgHead& C2SDeleteObject::msg_head() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SDeleteObject.msg_head)
  return msg_head_ != NULL ? *msg_head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
::NetProto::MsgHead* C2SDeleteObject::mutable_msg_head() {
  
  if (msg_head_ == NULL) {
    msg_head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SDeleteObject.msg_head)
  return msg_head_;
}
::NetProto::MsgHead* C2SDeleteObject::release_msg_head() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2SDeleteObject.msg_head)
  
  ::NetProto::MsgHead* temp = msg_head_;
  msg_head_ = NULL;
  return temp;
}
void C2SDeleteObject::set_allocated_msg_head(::NetProto::MsgHead* msg_head) {
  delete msg_head_;
  msg_head_ = msg_head;
  if (msg_head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2SDeleteObject.msg_head)
}

// string obj_uuid = 2;
void C2SDeleteObject::clear_obj_uuid() {
  obj_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& C2SDeleteObject::obj_uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SDeleteObject.obj_uuid)
  return obj_uuid_.GetNoArena();
}
void C2SDeleteObject::set_obj_uuid(const ::std::string& value) {
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.CS.C2SDeleteObject.obj_uuid)
}
#if LANG_CXX11
void C2SDeleteObject::set_obj_uuid(::std::string&& value) {
  
  obj_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.CS.C2SDeleteObject.obj_uuid)
}
#endif
void C2SDeleteObject::set_obj_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.CS.C2SDeleteObject.obj_uuid)
}
void C2SDeleteObject::set_obj_uuid(const char* value, size_t size) {
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.CS.C2SDeleteObject.obj_uuid)
}
::std::string* C2SDeleteObject::mutable_obj_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SDeleteObject.obj_uuid)
  return obj_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* C2SDeleteObject::release_obj_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2SDeleteObject.obj_uuid)
  
  return obj_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void C2SDeleteObject::set_allocated_obj_uuid(::std::string* obj_uuid) {
  if (obj_uuid != NULL) {
    
  } else {
    
  }
  obj_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj_uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2SDeleteObject.obj_uuid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SDebugAction::kMsgHeadFieldNumber;
const int C2SDebugAction::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SDebugAction::C2SDebugAction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.CS.C2SDebugAction)
}
C2SDebugAction::C2SDebugAction(const C2SDebugAction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.action().size() > 0) {
    action_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.action_);
  }
  if (from.has_msg_head()) {
    msg_head_ = new ::NetProto::MsgHead(*from.msg_head_);
  } else {
    msg_head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NetProto.CS.C2SDebugAction)
}

void C2SDebugAction::SharedCtor() {
  action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_head_ = NULL;
  _cached_size_ = 0;
}

C2SDebugAction::~C2SDebugAction() {
  // @@protoc_insertion_point(destructor:NetProto.CS.C2SDebugAction)
  SharedDtor();
}

void C2SDebugAction::SharedDtor() {
  action_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete msg_head_;
  }
}

void C2SDebugAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SDebugAction::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C2SDebugAction& C2SDebugAction::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

C2SDebugAction* C2SDebugAction::New(::google::protobuf::Arena* arena) const {
  C2SDebugAction* n = new C2SDebugAction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SDebugAction::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.CS.C2SDebugAction)
  action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) {
    delete msg_head_;
  }
  msg_head_ = NULL;
}

bool C2SDebugAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.CS.C2SDebugAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.MsgHead msg_head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string action = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_action()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->action().data(), this->action().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.CS.C2SDebugAction.action"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.CS.C2SDebugAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.CS.C2SDebugAction)
  return false;
#undef DO_
}

void C2SDebugAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.CS.C2SDebugAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msg_head_, output);
  }

  // string action = 2;
  if (this->action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action().data(), this->action().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SDebugAction.action");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->action(), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.CS.C2SDebugAction)
}

::google::protobuf::uint8* C2SDebugAction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.CS.C2SDebugAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msg_head_, deterministic, target);
  }

  // string action = 2;
  if (this->action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action().data(), this->action().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.C2SDebugAction.action");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->action(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.CS.C2SDebugAction)
  return target;
}

size_t C2SDebugAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.CS.C2SDebugAction)
  size_t total_size = 0;

  // string action = 2;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->action());
  }

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SDebugAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.CS.C2SDebugAction)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SDebugAction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SDebugAction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.CS.C2SDebugAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.CS.C2SDebugAction)
    MergeFrom(*source);
  }
}

void C2SDebugAction::MergeFrom(const C2SDebugAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.CS.C2SDebugAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.action().size() > 0) {

    action_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.action_);
  }
  if (from.has_msg_head()) {
    mutable_msg_head()->::NetProto::MsgHead::MergeFrom(from.msg_head());
  }
}

void C2SDebugAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.CS.C2SDebugAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SDebugAction::CopyFrom(const C2SDebugAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.CS.C2SDebugAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SDebugAction::IsInitialized() const {
  return true;
}

void C2SDebugAction::Swap(C2SDebugAction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SDebugAction::InternalSwap(C2SDebugAction* other) {
  action_.Swap(&other->action_);
  std::swap(msg_head_, other->msg_head_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SDebugAction::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SDebugAction

// .NetProto.MsgHead msg_head = 1;
bool C2SDebugAction::has_msg_head() const {
  return this != internal_default_instance() && msg_head_ != NULL;
}
void C2SDebugAction::clear_msg_head() {
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) delete msg_head_;
  msg_head_ = NULL;
}
const ::NetProto::MsgHead& C2SDebugAction::msg_head() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SDebugAction.msg_head)
  return msg_head_ != NULL ? *msg_head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
::NetProto::MsgHead* C2SDebugAction::mutable_msg_head() {
  
  if (msg_head_ == NULL) {
    msg_head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SDebugAction.msg_head)
  return msg_head_;
}
::NetProto::MsgHead* C2SDebugAction::release_msg_head() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2SDebugAction.msg_head)
  
  ::NetProto::MsgHead* temp = msg_head_;
  msg_head_ = NULL;
  return temp;
}
void C2SDebugAction::set_allocated_msg_head(::NetProto::MsgHead* msg_head) {
  delete msg_head_;
  msg_head_ = msg_head;
  if (msg_head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2SDebugAction.msg_head)
}

// string action = 2;
void C2SDebugAction::clear_action() {
  action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& C2SDebugAction::action() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.C2SDebugAction.action)
  return action_.GetNoArena();
}
void C2SDebugAction::set_action(const ::std::string& value) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.CS.C2SDebugAction.action)
}
#if LANG_CXX11
void C2SDebugAction::set_action(::std::string&& value) {
  
  action_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.CS.C2SDebugAction.action)
}
#endif
void C2SDebugAction::set_action(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.CS.C2SDebugAction.action)
}
void C2SDebugAction::set_action(const char* value, size_t size) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.CS.C2SDebugAction.action)
}
::std::string* C2SDebugAction::mutable_action() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.CS.C2SDebugAction.action)
  return action_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* C2SDebugAction::release_action() {
  // @@protoc_insertion_point(field_release:NetProto.CS.C2SDebugAction.action)
  
  return action_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void C2SDebugAction::set_allocated_action(::std::string* action) {
  if (action != NULL) {
    
  } else {
    
  }
  action_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), action);
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.C2SDebugAction.action)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjPosRotChange::kObjUuidFieldNumber;
const int ObjPosRotChange::kBecomeMovingFieldNumber;
const int ObjPosRotChange::kObjPosRotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjPosRotChange::ObjPosRotChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.CS.ObjPosRotChange)
}
ObjPosRotChange::ObjPosRotChange(const ObjPosRotChange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  obj_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.obj_uuid().size() > 0) {
    obj_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_uuid_);
  }
  if (from.has_obj_pos_rot()) {
    obj_pos_rot_ = new ::NetProto::PosRot(*from.obj_pos_rot_);
  } else {
    obj_pos_rot_ = NULL;
  }
  become_moving_ = from.become_moving_;
  // @@protoc_insertion_point(copy_constructor:NetProto.CS.ObjPosRotChange)
}

void ObjPosRotChange::SharedCtor() {
  obj_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&obj_pos_rot_, 0, reinterpret_cast<char*>(&become_moving_) -
    reinterpret_cast<char*>(&obj_pos_rot_) + sizeof(become_moving_));
  _cached_size_ = 0;
}

ObjPosRotChange::~ObjPosRotChange() {
  // @@protoc_insertion_point(destructor:NetProto.CS.ObjPosRotChange)
  SharedDtor();
}

void ObjPosRotChange::SharedDtor() {
  obj_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete obj_pos_rot_;
  }
}

void ObjPosRotChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjPosRotChange::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjPosRotChange& ObjPosRotChange::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

ObjPosRotChange* ObjPosRotChange::New(::google::protobuf::Arena* arena) const {
  ObjPosRotChange* n = new ObjPosRotChange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjPosRotChange::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.CS.ObjPosRotChange)
  obj_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && obj_pos_rot_ != NULL) {
    delete obj_pos_rot_;
  }
  obj_pos_rot_ = NULL;
  become_moving_ = false;
}

bool ObjPosRotChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.CS.ObjPosRotChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string obj_uuid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->obj_uuid().data(), this->obj_uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.CS.ObjPosRotChange.obj_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool become_moving = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &become_moving_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.PosRot obj_pos_rot = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_obj_pos_rot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.CS.ObjPosRotChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.CS.ObjPosRotChange)
  return false;
#undef DO_
}

void ObjPosRotChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.CS.ObjPosRotChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string obj_uuid = 3;
  if (this->obj_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->obj_uuid().data(), this->obj_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.ObjPosRotChange.obj_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->obj_uuid(), output);
  }

  // bool become_moving = 4;
  if (this->become_moving() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->become_moving(), output);
  }

  // .NetProto.PosRot obj_pos_rot = 5;
  if (this->has_obj_pos_rot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->obj_pos_rot_, output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.CS.ObjPosRotChange)
}

::google::protobuf::uint8* ObjPosRotChange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.CS.ObjPosRotChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string obj_uuid = 3;
  if (this->obj_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->obj_uuid().data(), this->obj_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.ObjPosRotChange.obj_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->obj_uuid(), target);
  }

  // bool become_moving = 4;
  if (this->become_moving() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->become_moving(), target);
  }

  // .NetProto.PosRot obj_pos_rot = 5;
  if (this->has_obj_pos_rot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->obj_pos_rot_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.CS.ObjPosRotChange)
  return target;
}

size_t ObjPosRotChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.CS.ObjPosRotChange)
  size_t total_size = 0;

  // string obj_uuid = 3;
  if (this->obj_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj_uuid());
  }

  // .NetProto.PosRot obj_pos_rot = 5;
  if (this->has_obj_pos_rot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->obj_pos_rot_);
  }

  // bool become_moving = 4;
  if (this->become_moving() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjPosRotChange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.CS.ObjPosRotChange)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjPosRotChange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjPosRotChange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.CS.ObjPosRotChange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.CS.ObjPosRotChange)
    MergeFrom(*source);
  }
}

void ObjPosRotChange::MergeFrom(const ObjPosRotChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.CS.ObjPosRotChange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_uuid().size() > 0) {

    obj_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_uuid_);
  }
  if (from.has_obj_pos_rot()) {
    mutable_obj_pos_rot()->::NetProto::PosRot::MergeFrom(from.obj_pos_rot());
  }
  if (from.become_moving() != 0) {
    set_become_moving(from.become_moving());
  }
}

void ObjPosRotChange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.CS.ObjPosRotChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjPosRotChange::CopyFrom(const ObjPosRotChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.CS.ObjPosRotChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjPosRotChange::IsInitialized() const {
  return true;
}

void ObjPosRotChange::Swap(ObjPosRotChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjPosRotChange::InternalSwap(ObjPosRotChange* other) {
  obj_uuid_.Swap(&other->obj_uuid_);
  std::swap(obj_pos_rot_, other->obj_pos_rot_);
  std::swap(become_moving_, other->become_moving_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjPosRotChange::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ObjPosRotChange

// string obj_uuid = 3;
void ObjPosRotChange::clear_obj_uuid() {
  obj_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ObjPosRotChange::obj_uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.ObjPosRotChange.obj_uuid)
  return obj_uuid_.GetNoArena();
}
void ObjPosRotChange::set_obj_uuid(const ::std::string& value) {
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.CS.ObjPosRotChange.obj_uuid)
}
#if LANG_CXX11
void ObjPosRotChange::set_obj_uuid(::std::string&& value) {
  
  obj_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.CS.ObjPosRotChange.obj_uuid)
}
#endif
void ObjPosRotChange::set_obj_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.CS.ObjPosRotChange.obj_uuid)
}
void ObjPosRotChange::set_obj_uuid(const char* value, size_t size) {
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.CS.ObjPosRotChange.obj_uuid)
}
::std::string* ObjPosRotChange::mutable_obj_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.CS.ObjPosRotChange.obj_uuid)
  return obj_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ObjPosRotChange::release_obj_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.CS.ObjPosRotChange.obj_uuid)
  
  return obj_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ObjPosRotChange::set_allocated_obj_uuid(::std::string* obj_uuid) {
  if (obj_uuid != NULL) {
    
  } else {
    
  }
  obj_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj_uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.ObjPosRotChange.obj_uuid)
}

// bool become_moving = 4;
void ObjPosRotChange::clear_become_moving() {
  become_moving_ = false;
}
bool ObjPosRotChange::become_moving() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.ObjPosRotChange.become_moving)
  return become_moving_;
}
void ObjPosRotChange::set_become_moving(bool value) {
  
  become_moving_ = value;
  // @@protoc_insertion_point(field_set:NetProto.CS.ObjPosRotChange.become_moving)
}

// .NetProto.PosRot obj_pos_rot = 5;
bool ObjPosRotChange::has_obj_pos_rot() const {
  return this != internal_default_instance() && obj_pos_rot_ != NULL;
}
void ObjPosRotChange::clear_obj_pos_rot() {
  if (GetArenaNoVirtual() == NULL && obj_pos_rot_ != NULL) delete obj_pos_rot_;
  obj_pos_rot_ = NULL;
}
const ::NetProto::PosRot& ObjPosRotChange::obj_pos_rot() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.ObjPosRotChange.obj_pos_rot)
  return obj_pos_rot_ != NULL ? *obj_pos_rot_
                         : *::NetProto::PosRot::internal_default_instance();
}
::NetProto::PosRot* ObjPosRotChange::mutable_obj_pos_rot() {
  
  if (obj_pos_rot_ == NULL) {
    obj_pos_rot_ = new ::NetProto::PosRot;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.CS.ObjPosRotChange.obj_pos_rot)
  return obj_pos_rot_;
}
::NetProto::PosRot* ObjPosRotChange::release_obj_pos_rot() {
  // @@protoc_insertion_point(field_release:NetProto.CS.ObjPosRotChange.obj_pos_rot)
  
  ::NetProto::PosRot* temp = obj_pos_rot_;
  obj_pos_rot_ = NULL;
  return temp;
}
void ObjPosRotChange::set_allocated_obj_pos_rot(::NetProto::PosRot* obj_pos_rot) {
  delete obj_pos_rot_;
  obj_pos_rot_ = obj_pos_rot;
  if (obj_pos_rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.ObjPosRotChange.obj_pos_rot)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FetchObj::kObjUuidFieldNumber;
const int FetchObj::kLocationUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FetchObj::FetchObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.CS.FetchObj)
}
FetchObj::FetchObj(const FetchObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  obj_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.obj_uuid().size() > 0) {
    obj_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_uuid_);
  }
  location_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.location_uuid().size() > 0) {
    location_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_uuid_);
  }
  // @@protoc_insertion_point(copy_constructor:NetProto.CS.FetchObj)
}

void FetchObj::SharedCtor() {
  obj_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

FetchObj::~FetchObj() {
  // @@protoc_insertion_point(destructor:NetProto.CS.FetchObj)
  SharedDtor();
}

void FetchObj::SharedDtor() {
  obj_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FetchObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FetchObj::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FetchObj& FetchObj::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

FetchObj* FetchObj::New(::google::protobuf::Arena* arena) const {
  FetchObj* n = new FetchObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FetchObj::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.CS.FetchObj)
  obj_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool FetchObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.CS.FetchObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string obj_uuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->obj_uuid().data(), this->obj_uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.CS.FetchObj.obj_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string location_uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location_uuid().data(), this->location_uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.CS.FetchObj.location_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.CS.FetchObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.CS.FetchObj)
  return false;
#undef DO_
}

void FetchObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.CS.FetchObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string obj_uuid = 1;
  if (this->obj_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->obj_uuid().data(), this->obj_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.FetchObj.obj_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->obj_uuid(), output);
  }

  // string location_uuid = 2;
  if (this->location_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location_uuid().data(), this->location_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.FetchObj.location_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->location_uuid(), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.CS.FetchObj)
}

::google::protobuf::uint8* FetchObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.CS.FetchObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string obj_uuid = 1;
  if (this->obj_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->obj_uuid().data(), this->obj_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.FetchObj.obj_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->obj_uuid(), target);
  }

  // string location_uuid = 2;
  if (this->location_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location_uuid().data(), this->location_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.FetchObj.location_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->location_uuid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.CS.FetchObj)
  return target;
}

size_t FetchObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.CS.FetchObj)
  size_t total_size = 0;

  // string obj_uuid = 1;
  if (this->obj_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj_uuid());
  }

  // string location_uuid = 2;
  if (this->location_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location_uuid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FetchObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.CS.FetchObj)
  GOOGLE_DCHECK_NE(&from, this);
  const FetchObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FetchObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.CS.FetchObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.CS.FetchObj)
    MergeFrom(*source);
  }
}

void FetchObj::MergeFrom(const FetchObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.CS.FetchObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_uuid().size() > 0) {

    obj_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_uuid_);
  }
  if (from.location_uuid().size() > 0) {

    location_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_uuid_);
  }
}

void FetchObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.CS.FetchObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FetchObj::CopyFrom(const FetchObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.CS.FetchObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FetchObj::IsInitialized() const {
  return true;
}

void FetchObj::Swap(FetchObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FetchObj::InternalSwap(FetchObj* other) {
  obj_uuid_.Swap(&other->obj_uuid_);
  location_uuid_.Swap(&other->location_uuid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FetchObj::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FetchObj

// string obj_uuid = 1;
void FetchObj::clear_obj_uuid() {
  obj_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FetchObj::obj_uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.FetchObj.obj_uuid)
  return obj_uuid_.GetNoArena();
}
void FetchObj::set_obj_uuid(const ::std::string& value) {
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.CS.FetchObj.obj_uuid)
}
#if LANG_CXX11
void FetchObj::set_obj_uuid(::std::string&& value) {
  
  obj_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.CS.FetchObj.obj_uuid)
}
#endif
void FetchObj::set_obj_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.CS.FetchObj.obj_uuid)
}
void FetchObj::set_obj_uuid(const char* value, size_t size) {
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.CS.FetchObj.obj_uuid)
}
::std::string* FetchObj::mutable_obj_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.CS.FetchObj.obj_uuid)
  return obj_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FetchObj::release_obj_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.CS.FetchObj.obj_uuid)
  
  return obj_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FetchObj::set_allocated_obj_uuid(::std::string* obj_uuid) {
  if (obj_uuid != NULL) {
    
  } else {
    
  }
  obj_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj_uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.FetchObj.obj_uuid)
}

// string location_uuid = 2;
void FetchObj::clear_location_uuid() {
  location_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FetchObj::location_uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.FetchObj.location_uuid)
  return location_uuid_.GetNoArena();
}
void FetchObj::set_location_uuid(const ::std::string& value) {
  
  location_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.CS.FetchObj.location_uuid)
}
#if LANG_CXX11
void FetchObj::set_location_uuid(::std::string&& value) {
  
  location_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.CS.FetchObj.location_uuid)
}
#endif
void FetchObj::set_location_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  location_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.CS.FetchObj.location_uuid)
}
void FetchObj::set_location_uuid(const char* value, size_t size) {
  
  location_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.CS.FetchObj.location_uuid)
}
::std::string* FetchObj::mutable_location_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.CS.FetchObj.location_uuid)
  return location_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FetchObj::release_location_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.CS.FetchObj.location_uuid)
  
  return location_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FetchObj::set_allocated_location_uuid(::std::string* location_uuid) {
  if (location_uuid != NULL) {
    
  } else {
    
  }
  location_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location_uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.FetchObj.location_uuid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PutObj::kObjUuidFieldNumber;
const int PutObj::kLocationUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PutObj::PutObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.CS.PutObj)
}
PutObj::PutObj(const PutObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  obj_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.obj_uuid().size() > 0) {
    obj_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_uuid_);
  }
  location_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.location_uuid().size() > 0) {
    location_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_uuid_);
  }
  // @@protoc_insertion_point(copy_constructor:NetProto.CS.PutObj)
}

void PutObj::SharedCtor() {
  obj_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PutObj::~PutObj() {
  // @@protoc_insertion_point(destructor:NetProto.CS.PutObj)
  SharedDtor();
}

void PutObj::SharedDtor() {
  obj_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PutObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PutObj::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PutObj& PutObj::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

PutObj* PutObj::New(::google::protobuf::Arena* arena) const {
  PutObj* n = new PutObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PutObj::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.CS.PutObj)
  obj_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PutObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.CS.PutObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string obj_uuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->obj_uuid().data(), this->obj_uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.CS.PutObj.obj_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string location_uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location_uuid().data(), this->location_uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.CS.PutObj.location_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.CS.PutObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.CS.PutObj)
  return false;
#undef DO_
}

void PutObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.CS.PutObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string obj_uuid = 1;
  if (this->obj_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->obj_uuid().data(), this->obj_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.PutObj.obj_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->obj_uuid(), output);
  }

  // string location_uuid = 2;
  if (this->location_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location_uuid().data(), this->location_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.PutObj.location_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->location_uuid(), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.CS.PutObj)
}

::google::protobuf::uint8* PutObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.CS.PutObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string obj_uuid = 1;
  if (this->obj_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->obj_uuid().data(), this->obj_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.PutObj.obj_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->obj_uuid(), target);
  }

  // string location_uuid = 2;
  if (this->location_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location_uuid().data(), this->location_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.PutObj.location_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->location_uuid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.CS.PutObj)
  return target;
}

size_t PutObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.CS.PutObj)
  size_t total_size = 0;

  // string obj_uuid = 1;
  if (this->obj_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj_uuid());
  }

  // string location_uuid = 2;
  if (this->location_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location_uuid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PutObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.CS.PutObj)
  GOOGLE_DCHECK_NE(&from, this);
  const PutObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PutObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.CS.PutObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.CS.PutObj)
    MergeFrom(*source);
  }
}

void PutObj::MergeFrom(const PutObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.CS.PutObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_uuid().size() > 0) {

    obj_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_uuid_);
  }
  if (from.location_uuid().size() > 0) {

    location_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_uuid_);
  }
}

void PutObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.CS.PutObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PutObj::CopyFrom(const PutObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.CS.PutObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutObj::IsInitialized() const {
  return true;
}

void PutObj::Swap(PutObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PutObj::InternalSwap(PutObj* other) {
  obj_uuid_.Swap(&other->obj_uuid_);
  location_uuid_.Swap(&other->location_uuid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PutObj::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PutObj

// string obj_uuid = 1;
void PutObj::clear_obj_uuid() {
  obj_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PutObj::obj_uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.PutObj.obj_uuid)
  return obj_uuid_.GetNoArena();
}
void PutObj::set_obj_uuid(const ::std::string& value) {
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.CS.PutObj.obj_uuid)
}
#if LANG_CXX11
void PutObj::set_obj_uuid(::std::string&& value) {
  
  obj_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.CS.PutObj.obj_uuid)
}
#endif
void PutObj::set_obj_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.CS.PutObj.obj_uuid)
}
void PutObj::set_obj_uuid(const char* value, size_t size) {
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.CS.PutObj.obj_uuid)
}
::std::string* PutObj::mutable_obj_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.CS.PutObj.obj_uuid)
  return obj_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PutObj::release_obj_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.CS.PutObj.obj_uuid)
  
  return obj_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PutObj::set_allocated_obj_uuid(::std::string* obj_uuid) {
  if (obj_uuid != NULL) {
    
  } else {
    
  }
  obj_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj_uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.PutObj.obj_uuid)
}

// string location_uuid = 2;
void PutObj::clear_location_uuid() {
  location_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PutObj::location_uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.PutObj.location_uuid)
  return location_uuid_.GetNoArena();
}
void PutObj::set_location_uuid(const ::std::string& value) {
  
  location_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.CS.PutObj.location_uuid)
}
#if LANG_CXX11
void PutObj::set_location_uuid(::std::string&& value) {
  
  location_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.CS.PutObj.location_uuid)
}
#endif
void PutObj::set_location_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  location_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.CS.PutObj.location_uuid)
}
void PutObj::set_location_uuid(const char* value, size_t size) {
  
  location_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.CS.PutObj.location_uuid)
}
::std::string* PutObj::mutable_location_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.CS.PutObj.location_uuid)
  return location_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PutObj::release_location_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.CS.PutObj.location_uuid)
  
  return location_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PutObj::set_allocated_location_uuid(::std::string* location_uuid) {
  if (location_uuid != NULL) {
    
  } else {
    
  }
  location_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location_uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.PutObj.location_uuid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperateObj::kOperTypeFieldNumber;
const int OperateObj::kObjUuidFieldNumber;
const int OperateObj::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperateObj::OperateObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.CS.OperateObj)
}
OperateObj::OperateObj(const OperateObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      params_(from.params_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oper_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.oper_type().size() > 0) {
    oper_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oper_type_);
  }
  obj_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.obj_uuid().size() > 0) {
    obj_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_uuid_);
  }
  // @@protoc_insertion_point(copy_constructor:NetProto.CS.OperateObj)
}

void OperateObj::SharedCtor() {
  oper_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  obj_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

OperateObj::~OperateObj() {
  // @@protoc_insertion_point(destructor:NetProto.CS.OperateObj)
  SharedDtor();
}

void OperateObj::SharedDtor() {
  oper_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  obj_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OperateObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OperateObj::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OperateObj& OperateObj::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

OperateObj* OperateObj::New(::google::protobuf::Arena* arena) const {
  OperateObj* n = new OperateObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OperateObj::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.CS.OperateObj)
  params_.Clear();
  oper_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  obj_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool OperateObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.CS.OperateObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string oper_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oper_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oper_type().data(), this->oper_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.CS.OperateObj.oper_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string obj_uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->obj_uuid().data(), this->obj_uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.CS.OperateObj.obj_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NetProto.KeyValuePair params = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.CS.OperateObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.CS.OperateObj)
  return false;
#undef DO_
}

void OperateObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.CS.OperateObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string oper_type = 1;
  if (this->oper_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oper_type().data(), this->oper_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.OperateObj.oper_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->oper_type(), output);
  }

  // string obj_uuid = 2;
  if (this->obj_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->obj_uuid().data(), this->obj_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.OperateObj.obj_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->obj_uuid(), output);
  }

  // repeated .NetProto.KeyValuePair params = 3;
  for (unsigned int i = 0, n = this->params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->params(i), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.CS.OperateObj)
}

::google::protobuf::uint8* OperateObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.CS.OperateObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string oper_type = 1;
  if (this->oper_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oper_type().data(), this->oper_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.OperateObj.oper_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->oper_type(), target);
  }

  // string obj_uuid = 2;
  if (this->obj_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->obj_uuid().data(), this->obj_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.OperateObj.obj_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->obj_uuid(), target);
  }

  // repeated .NetProto.KeyValuePair params = 3;
  for (unsigned int i = 0, n = this->params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->params(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.CS.OperateObj)
  return target;
}

size_t OperateObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.CS.OperateObj)
  size_t total_size = 0;

  // repeated .NetProto.KeyValuePair params = 3;
  {
    unsigned int count = this->params_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->params(i));
    }
  }

  // string oper_type = 1;
  if (this->oper_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oper_type());
  }

  // string obj_uuid = 2;
  if (this->obj_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj_uuid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OperateObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.CS.OperateObj)
  GOOGLE_DCHECK_NE(&from, this);
  const OperateObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OperateObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.CS.OperateObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.CS.OperateObj)
    MergeFrom(*source);
  }
}

void OperateObj::MergeFrom(const OperateObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.CS.OperateObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  if (from.oper_type().size() > 0) {

    oper_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oper_type_);
  }
  if (from.obj_uuid().size() > 0) {

    obj_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_uuid_);
  }
}

void OperateObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.CS.OperateObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperateObj::CopyFrom(const OperateObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.CS.OperateObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperateObj::IsInitialized() const {
  return true;
}

void OperateObj::Swap(OperateObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OperateObj::InternalSwap(OperateObj* other) {
  params_.InternalSwap(&other->params_);
  oper_type_.Swap(&other->oper_type_);
  obj_uuid_.Swap(&other->obj_uuid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OperateObj::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OperateObj

// string oper_type = 1;
void OperateObj::clear_oper_type() {
  oper_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OperateObj::oper_type() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.OperateObj.oper_type)
  return oper_type_.GetNoArena();
}
void OperateObj::set_oper_type(const ::std::string& value) {
  
  oper_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.CS.OperateObj.oper_type)
}
#if LANG_CXX11
void OperateObj::set_oper_type(::std::string&& value) {
  
  oper_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.CS.OperateObj.oper_type)
}
#endif
void OperateObj::set_oper_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  oper_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.CS.OperateObj.oper_type)
}
void OperateObj::set_oper_type(const char* value, size_t size) {
  
  oper_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.CS.OperateObj.oper_type)
}
::std::string* OperateObj::mutable_oper_type() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.CS.OperateObj.oper_type)
  return oper_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OperateObj::release_oper_type() {
  // @@protoc_insertion_point(field_release:NetProto.CS.OperateObj.oper_type)
  
  return oper_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OperateObj::set_allocated_oper_type(::std::string* oper_type) {
  if (oper_type != NULL) {
    
  } else {
    
  }
  oper_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oper_type);
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.OperateObj.oper_type)
}

// string obj_uuid = 2;
void OperateObj::clear_obj_uuid() {
  obj_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OperateObj::obj_uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.OperateObj.obj_uuid)
  return obj_uuid_.GetNoArena();
}
void OperateObj::set_obj_uuid(const ::std::string& value) {
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.CS.OperateObj.obj_uuid)
}
#if LANG_CXX11
void OperateObj::set_obj_uuid(::std::string&& value) {
  
  obj_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.CS.OperateObj.obj_uuid)
}
#endif
void OperateObj::set_obj_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.CS.OperateObj.obj_uuid)
}
void OperateObj::set_obj_uuid(const char* value, size_t size) {
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.CS.OperateObj.obj_uuid)
}
::std::string* OperateObj::mutable_obj_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.CS.OperateObj.obj_uuid)
  return obj_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OperateObj::release_obj_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.CS.OperateObj.obj_uuid)
  
  return obj_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OperateObj::set_allocated_obj_uuid(::std::string* obj_uuid) {
  if (obj_uuid != NULL) {
    
  } else {
    
  }
  obj_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj_uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.OperateObj.obj_uuid)
}

// repeated .NetProto.KeyValuePair params = 3;
int OperateObj::params_size() const {
  return params_.size();
}
void OperateObj::clear_params() {
  params_.Clear();
}
const ::NetProto::KeyValuePair& OperateObj::params(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.CS.OperateObj.params)
  return params_.Get(index);
}
::NetProto::KeyValuePair* OperateObj::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.CS.OperateObj.params)
  return params_.Mutable(index);
}
::NetProto::KeyValuePair* OperateObj::add_params() {
  // @@protoc_insertion_point(field_add:NetProto.CS.OperateObj.params)
  return params_.Add();
}
::google::protobuf::RepeatedPtrField< ::NetProto::KeyValuePair >*
OperateObj::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.CS.OperateObj.params)
  return &params_;
}
const ::google::protobuf::RepeatedPtrField< ::NetProto::KeyValuePair >&
OperateObj::params() const {
  // @@protoc_insertion_point(field_list:NetProto.CS.OperateObj.params)
  return params_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SelfAction::kActionFieldNumber;
const int SelfAction::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SelfAction::SelfAction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.CS.SelfAction)
}
SelfAction::SelfAction(const SelfAction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      params_(from.params_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.action().size() > 0) {
    action_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.action_);
  }
  // @@protoc_insertion_point(copy_constructor:NetProto.CS.SelfAction)
}

void SelfAction::SharedCtor() {
  action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SelfAction::~SelfAction() {
  // @@protoc_insertion_point(destructor:NetProto.CS.SelfAction)
  SharedDtor();
}

void SelfAction::SharedDtor() {
  action_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SelfAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SelfAction::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SelfAction& SelfAction::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

SelfAction* SelfAction::New(::google::protobuf::Arena* arena) const {
  SelfAction* n = new SelfAction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SelfAction::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.CS.SelfAction)
  params_.Clear();
  action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SelfAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.CS.SelfAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string action = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_action()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->action().data(), this->action().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.CS.SelfAction.action"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NetProto.KeyValuePair params = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.CS.SelfAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.CS.SelfAction)
  return false;
#undef DO_
}

void SelfAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.CS.SelfAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string action = 1;
  if (this->action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action().data(), this->action().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.SelfAction.action");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->action(), output);
  }

  // repeated .NetProto.KeyValuePair params = 2;
  for (unsigned int i = 0, n = this->params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->params(i), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.CS.SelfAction)
}

::google::protobuf::uint8* SelfAction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.CS.SelfAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string action = 1;
  if (this->action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action().data(), this->action().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.SelfAction.action");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->action(), target);
  }

  // repeated .NetProto.KeyValuePair params = 2;
  for (unsigned int i = 0, n = this->params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->params(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.CS.SelfAction)
  return target;
}

size_t SelfAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.CS.SelfAction)
  size_t total_size = 0;

  // repeated .NetProto.KeyValuePair params = 2;
  {
    unsigned int count = this->params_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->params(i));
    }
  }

  // string action = 1;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->action());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SelfAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.CS.SelfAction)
  GOOGLE_DCHECK_NE(&from, this);
  const SelfAction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SelfAction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.CS.SelfAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.CS.SelfAction)
    MergeFrom(*source);
  }
}

void SelfAction::MergeFrom(const SelfAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.CS.SelfAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  if (from.action().size() > 0) {

    action_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.action_);
  }
}

void SelfAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.CS.SelfAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelfAction::CopyFrom(const SelfAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.CS.SelfAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelfAction::IsInitialized() const {
  return true;
}

void SelfAction::Swap(SelfAction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SelfAction::InternalSwap(SelfAction* other) {
  params_.InternalSwap(&other->params_);
  action_.Swap(&other->action_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SelfAction::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SelfAction

// string action = 1;
void SelfAction::clear_action() {
  action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SelfAction::action() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.SelfAction.action)
  return action_.GetNoArena();
}
void SelfAction::set_action(const ::std::string& value) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.CS.SelfAction.action)
}
#if LANG_CXX11
void SelfAction::set_action(::std::string&& value) {
  
  action_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.CS.SelfAction.action)
}
#endif
void SelfAction::set_action(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.CS.SelfAction.action)
}
void SelfAction::set_action(const char* value, size_t size) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.CS.SelfAction.action)
}
::std::string* SelfAction::mutable_action() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.CS.SelfAction.action)
  return action_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SelfAction::release_action() {
  // @@protoc_insertion_point(field_release:NetProto.CS.SelfAction.action)
  
  return action_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SelfAction::set_allocated_action(::std::string* action) {
  if (action != NULL) {
    
  } else {
    
  }
  action_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), action);
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.SelfAction.action)
}

// repeated .NetProto.KeyValuePair params = 2;
int SelfAction::params_size() const {
  return params_.size();
}
void SelfAction::clear_params() {
  params_.Clear();
}
const ::NetProto::KeyValuePair& SelfAction::params(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.CS.SelfAction.params)
  return params_.Get(index);
}
::NetProto::KeyValuePair* SelfAction::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.CS.SelfAction.params)
  return params_.Mutable(index);
}
::NetProto::KeyValuePair* SelfAction::add_params() {
  // @@protoc_insertion_point(field_add:NetProto.CS.SelfAction.params)
  return params_.Add();
}
::google::protobuf::RepeatedPtrField< ::NetProto::KeyValuePair >*
SelfAction::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.CS.SelfAction.params)
  return &params_;
}
const ::google::protobuf::RepeatedPtrField< ::NetProto::KeyValuePair >&
SelfAction::params() const {
  // @@protoc_insertion_point(field_list:NetProto.CS.SelfAction.params)
  return params_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace CS
}  // namespace NetProto

// @@protoc_insertion_point(global_scope)
