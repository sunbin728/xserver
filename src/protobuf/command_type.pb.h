// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: command_type.proto

#ifndef PROTOBUF_command_5ftype_2eproto__INCLUDED
#define PROTOBUF_command_5ftype_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)
namespace NetProto {
}  // namespace NetProto

namespace NetProto {

namespace protobuf_command_5ftype_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_command_5ftype_2eproto

enum CommandType {
  NONE = 0,
  C2S_CHECK_LOGIN = 1000,
  C2S_GET_ROBOT_MAP_DATA = 1001,
  C2S_USER_REGISTER = 1002,
  C2S_USER_LOGIN = 1003,
  C2S_WALK_FINISH = 5000,
  C2S_ACTION_STATUS = 5010,
  C2S_TOUCH_EVENT = 5020,
  C2S_FETCH_EVENT = 5025,
  C2S_PLACE_EVENT = 5030,
  C2S_OBJ_POS_ROT_EVENT = 5040,
  C2S_SPECIAL_EVENT = 5045,
  C2S_VISION = 5050,
  C2S_VOICE_SPEECH = 5060,
  C2S_ADD_OBJECT = 5070,
  C2S_WORLD_EVENT_RESPONSE = 5075,
  C2S_DELETE_OBJECT = 5090,
  C2S_TEST_START = 9999,
  C2S_DEBUG_ACTION = 19998,
  C2S_KEEP_ALIVE = 19999,
  S2C_ROLE_ACTION = 20010,
  S2C_VOICE_SPEECH = 20020,
  GS2PW_Keep_Alive = 30001,
  GS2PW_Notify_Robot_Online = 30002,
  GS2PW_Notify_Robot_Offline = 30003,
  GS2PW_Notify_Robot_All_World_Data = 30004,
  GS2PW_Get_PW_Data = 30011,
  GS2MTS_Notify_Robot_Online = 40002,
  GS2MTS_Notify_Robot_Offline = 40003,
  GS2MTS_Create_New_Robot_Req = 40004,
  GS2MTS_Pw_Time_Sync = 40005,
  GS2MTS_Create_New_Scene = 40006,
  WG2Login_Keep_Alive = 40010,
  PW2GS_Command_Start = 50001,
  PW2GS_Notify_Robot_Change_Attr = 50002,
  PW2GS_Notify_Natural_Action_Status = 50005,
  PW2GS_Notify_Weather = 50008,
  PW2GS_NOTIFY_WORLD_EVENT = 50009,
  PW2GS_Notify_PW_Data = 50010,
  PW2GS_Notify_Weather_2MTS = 50011,
  CommandType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CommandType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CommandType_IsValid(int value);
const CommandType CommandType_MIN = NONE;
const CommandType CommandType_MAX = PW2GS_Notify_Weather_2MTS;
const int CommandType_ARRAYSIZE = CommandType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CommandType_descriptor();
inline const ::std::string& CommandType_Name(CommandType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CommandType_descriptor(), value);
}
inline bool CommandType_Parse(
    const ::std::string& name, CommandType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CommandType>(
    CommandType_descriptor(), name, value);
}
enum MessageTransferTarget {
  MessageTransferTarget_Default = 0,
  MessageTransferTarget_Client = 1,
  MessageTransferTarget_PW = 2,
  MessageTransferTarget_MTS = 4,
  MessageTransferTarget_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MessageTransferTarget_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MessageTransferTarget_IsValid(int value);
const MessageTransferTarget MessageTransferTarget_MIN = MessageTransferTarget_Default;
const MessageTransferTarget MessageTransferTarget_MAX = MessageTransferTarget_MTS;
const int MessageTransferTarget_ARRAYSIZE = MessageTransferTarget_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageTransferTarget_descriptor();
inline const ::std::string& MessageTransferTarget_Name(MessageTransferTarget value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageTransferTarget_descriptor(), value);
}
inline bool MessageTransferTarget_Parse(
    const ::std::string& name, MessageTransferTarget* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageTransferTarget>(
    MessageTransferTarget_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace NetProto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::NetProto::CommandType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetProto::CommandType>() {
  return ::NetProto::CommandType_descriptor();
}
template <> struct is_proto_enum< ::NetProto::MessageTransferTarget> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetProto::MessageTransferTarget>() {
  return ::NetProto::MessageTransferTarget_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_command_5ftype_2eproto__INCLUDED
