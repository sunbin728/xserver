// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: player_login.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "player_login.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace NetProto {
namespace CS {
class OnlineLoginReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OnlineLoginReq> {
} _OnlineLoginReq_default_instance_;
class OnlineLoginRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OnlineLoginResp> {
} _OnlineLoginResp_default_instance_;
class GetRobotSceneMapDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetRobotSceneMapData> {
} _GetRobotSceneMapData_default_instance_;

namespace protobuf_player_5flogin_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlineLoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlineLoginReq, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlineLoginReq, session_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlineLoginResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlineLoginResp, robot_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRobotSceneMapData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRobotSceneMapData, msg_head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRobotSceneMapData, map_id_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(OnlineLoginReq)},
  { 7, -1, sizeof(OnlineLoginResp)},
  { 13, -1, sizeof(GetRobotSceneMapData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_OnlineLoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OnlineLoginResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetRobotSceneMapData_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "player_login.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _OnlineLoginReq_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _OnlineLoginResp_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _GetRobotSceneMapData_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::NetProto::protobuf_robot_5finfo_2eproto::InitDefaults();
  ::NetProto::protobuf_msg_5fhead_2eproto::InitDefaults();
  _OnlineLoginReq_default_instance_.DefaultConstruct();
  _OnlineLoginResp_default_instance_.DefaultConstruct();
  _GetRobotSceneMapData_default_instance_.DefaultConstruct();
  _GetRobotSceneMapData_default_instance_.get_mutable()->msg_head_ = const_cast< ::NetProto::MsgHead*>(
      ::NetProto::MsgHead::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\022player_login.proto\022\013NetProto.CS\032\020robot"
      "_info.proto\032\016msg_head.proto\"5\n\016OnlineLog"
      "inReq\022\017\n\007user_id\030\n \001(\r\022\022\n\nsession_id\030\024 \001"
      "(\t\":\n\017OnlineLoginResp\022\'\n\nrobot_list\030\001 \003("
      "\0132\023.NetProto.RobotInfo\"K\n\024GetRobotSceneM"
      "apData\022#\n\010msg_head\030\001 \001(\0132\021.NetProto.MsgH"
      "ead\022\016\n\006map_id\030\002 \001(\rb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 267);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "player_login.proto", &protobuf_RegisterTypes);
  ::NetProto::protobuf_robot_5finfo_2eproto::AddDescriptors();
  ::NetProto::protobuf_msg_5fhead_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_player_5flogin_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OnlineLoginReq::kUserIdFieldNumber;
const int OnlineLoginReq::kSessionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OnlineLoginReq::OnlineLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_player_5flogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.CS.OnlineLoginReq)
}
OnlineLoginReq::OnlineLoginReq(const OnlineLoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.session_id().size() > 0) {
    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:NetProto.CS.OnlineLoginReq)
}

void OnlineLoginReq::SharedCtor() {
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
  _cached_size_ = 0;
}

OnlineLoginReq::~OnlineLoginReq() {
  // @@protoc_insertion_point(destructor:NetProto.CS.OnlineLoginReq)
  SharedDtor();
}

void OnlineLoginReq::SharedDtor() {
  session_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OnlineLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OnlineLoginReq::descriptor() {
  protobuf_player_5flogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5flogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OnlineLoginReq& OnlineLoginReq::default_instance() {
  protobuf_player_5flogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

OnlineLoginReq* OnlineLoginReq::New(::google::protobuf::Arena* arena) const {
  OnlineLoginReq* n = new OnlineLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OnlineLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.CS.OnlineLoginReq)
  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
}

bool OnlineLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.CS.OnlineLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string session_id = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->session_id().data(), this->session_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.CS.OnlineLoginReq.session_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.CS.OnlineLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.CS.OnlineLoginReq)
  return false;
#undef DO_
}

void OnlineLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.CS.OnlineLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 10;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->user_id(), output);
  }

  // string session_id = 20;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), this->session_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.OnlineLoginReq.session_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->session_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.CS.OnlineLoginReq)
}

::google::protobuf::uint8* OnlineLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.CS.OnlineLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 10;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->user_id(), target);
  }

  // string session_id = 20;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), this->session_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.CS.OnlineLoginReq.session_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->session_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.CS.OnlineLoginReq)
  return target;
}

size_t OnlineLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.CS.OnlineLoginReq)
  size_t total_size = 0;

  // string session_id = 20;
  if (this->session_id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session_id());
  }

  // uint32 user_id = 10;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OnlineLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.CS.OnlineLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const OnlineLoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OnlineLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.CS.OnlineLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.CS.OnlineLoginReq)
    MergeFrom(*source);
  }
}

void OnlineLoginReq::MergeFrom(const OnlineLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.CS.OnlineLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.session_id().size() > 0) {

    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void OnlineLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.CS.OnlineLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnlineLoginReq::CopyFrom(const OnlineLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.CS.OnlineLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnlineLoginReq::IsInitialized() const {
  return true;
}

void OnlineLoginReq::Swap(OnlineLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OnlineLoginReq::InternalSwap(OnlineLoginReq* other) {
  session_id_.Swap(&other->session_id_);
  std::swap(user_id_, other->user_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OnlineLoginReq::GetMetadata() const {
  protobuf_player_5flogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5flogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OnlineLoginReq

// uint32 user_id = 10;
void OnlineLoginReq::clear_user_id() {
  user_id_ = 0u;
}
::google::protobuf::uint32 OnlineLoginReq::user_id() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.OnlineLoginReq.user_id)
  return user_id_;
}
void OnlineLoginReq::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.CS.OnlineLoginReq.user_id)
}

// string session_id = 20;
void OnlineLoginReq::clear_session_id() {
  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OnlineLoginReq::session_id() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.OnlineLoginReq.session_id)
  return session_id_.GetNoArena();
}
void OnlineLoginReq::set_session_id(const ::std::string& value) {
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.CS.OnlineLoginReq.session_id)
}
#if LANG_CXX11
void OnlineLoginReq::set_session_id(::std::string&& value) {
  
  session_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.CS.OnlineLoginReq.session_id)
}
#endif
void OnlineLoginReq::set_session_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.CS.OnlineLoginReq.session_id)
}
void OnlineLoginReq::set_session_id(const char* value, size_t size) {
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.CS.OnlineLoginReq.session_id)
}
::std::string* OnlineLoginReq::mutable_session_id() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.CS.OnlineLoginReq.session_id)
  return session_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OnlineLoginReq::release_session_id() {
  // @@protoc_insertion_point(field_release:NetProto.CS.OnlineLoginReq.session_id)
  
  return session_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OnlineLoginReq::set_allocated_session_id(::std::string* session_id) {
  if (session_id != NULL) {
    
  } else {
    
  }
  session_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session_id);
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.OnlineLoginReq.session_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OnlineLoginResp::kRobotListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OnlineLoginResp::OnlineLoginResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_player_5flogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.CS.OnlineLoginResp)
}
OnlineLoginResp::OnlineLoginResp(const OnlineLoginResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      robot_list_(from.robot_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NetProto.CS.OnlineLoginResp)
}

void OnlineLoginResp::SharedCtor() {
  _cached_size_ = 0;
}

OnlineLoginResp::~OnlineLoginResp() {
  // @@protoc_insertion_point(destructor:NetProto.CS.OnlineLoginResp)
  SharedDtor();
}

void OnlineLoginResp::SharedDtor() {
}

void OnlineLoginResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OnlineLoginResp::descriptor() {
  protobuf_player_5flogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5flogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OnlineLoginResp& OnlineLoginResp::default_instance() {
  protobuf_player_5flogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

OnlineLoginResp* OnlineLoginResp::New(::google::protobuf::Arena* arena) const {
  OnlineLoginResp* n = new OnlineLoginResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OnlineLoginResp::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.CS.OnlineLoginResp)
  robot_list_.Clear();
}

bool OnlineLoginResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.CS.OnlineLoginResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .NetProto.RobotInfo robot_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_robot_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.CS.OnlineLoginResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.CS.OnlineLoginResp)
  return false;
#undef DO_
}

void OnlineLoginResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.CS.OnlineLoginResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NetProto.RobotInfo robot_list = 1;
  for (unsigned int i = 0, n = this->robot_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->robot_list(i), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.CS.OnlineLoginResp)
}

::google::protobuf::uint8* OnlineLoginResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.CS.OnlineLoginResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NetProto.RobotInfo robot_list = 1;
  for (unsigned int i = 0, n = this->robot_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->robot_list(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.CS.OnlineLoginResp)
  return target;
}

size_t OnlineLoginResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.CS.OnlineLoginResp)
  size_t total_size = 0;

  // repeated .NetProto.RobotInfo robot_list = 1;
  {
    unsigned int count = this->robot_list_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->robot_list(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OnlineLoginResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.CS.OnlineLoginResp)
  GOOGLE_DCHECK_NE(&from, this);
  const OnlineLoginResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OnlineLoginResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.CS.OnlineLoginResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.CS.OnlineLoginResp)
    MergeFrom(*source);
  }
}

void OnlineLoginResp::MergeFrom(const OnlineLoginResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.CS.OnlineLoginResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  robot_list_.MergeFrom(from.robot_list_);
}

void OnlineLoginResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.CS.OnlineLoginResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnlineLoginResp::CopyFrom(const OnlineLoginResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.CS.OnlineLoginResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnlineLoginResp::IsInitialized() const {
  return true;
}

void OnlineLoginResp::Swap(OnlineLoginResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OnlineLoginResp::InternalSwap(OnlineLoginResp* other) {
  robot_list_.InternalSwap(&other->robot_list_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OnlineLoginResp::GetMetadata() const {
  protobuf_player_5flogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5flogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OnlineLoginResp

// repeated .NetProto.RobotInfo robot_list = 1;
int OnlineLoginResp::robot_list_size() const {
  return robot_list_.size();
}
void OnlineLoginResp::clear_robot_list() {
  robot_list_.Clear();
}
const ::NetProto::RobotInfo& OnlineLoginResp::robot_list(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.CS.OnlineLoginResp.robot_list)
  return robot_list_.Get(index);
}
::NetProto::RobotInfo* OnlineLoginResp::mutable_robot_list(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.CS.OnlineLoginResp.robot_list)
  return robot_list_.Mutable(index);
}
::NetProto::RobotInfo* OnlineLoginResp::add_robot_list() {
  // @@protoc_insertion_point(field_add:NetProto.CS.OnlineLoginResp.robot_list)
  return robot_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::NetProto::RobotInfo >*
OnlineLoginResp::mutable_robot_list() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.CS.OnlineLoginResp.robot_list)
  return &robot_list_;
}
const ::google::protobuf::RepeatedPtrField< ::NetProto::RobotInfo >&
OnlineLoginResp::robot_list() const {
  // @@protoc_insertion_point(field_list:NetProto.CS.OnlineLoginResp.robot_list)
  return robot_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRobotSceneMapData::kMsgHeadFieldNumber;
const int GetRobotSceneMapData::kMapIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRobotSceneMapData::GetRobotSceneMapData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_player_5flogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.CS.GetRobotSceneMapData)
}
GetRobotSceneMapData::GetRobotSceneMapData(const GetRobotSceneMapData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_msg_head()) {
    msg_head_ = new ::NetProto::MsgHead(*from.msg_head_);
  } else {
    msg_head_ = NULL;
  }
  map_id_ = from.map_id_;
  // @@protoc_insertion_point(copy_constructor:NetProto.CS.GetRobotSceneMapData)
}

void GetRobotSceneMapData::SharedCtor() {
  ::memset(&msg_head_, 0, reinterpret_cast<char*>(&map_id_) -
    reinterpret_cast<char*>(&msg_head_) + sizeof(map_id_));
  _cached_size_ = 0;
}

GetRobotSceneMapData::~GetRobotSceneMapData() {
  // @@protoc_insertion_point(destructor:NetProto.CS.GetRobotSceneMapData)
  SharedDtor();
}

void GetRobotSceneMapData::SharedDtor() {
  if (this != internal_default_instance()) {
    delete msg_head_;
  }
}

void GetRobotSceneMapData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRobotSceneMapData::descriptor() {
  protobuf_player_5flogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5flogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRobotSceneMapData& GetRobotSceneMapData::default_instance() {
  protobuf_player_5flogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetRobotSceneMapData* GetRobotSceneMapData::New(::google::protobuf::Arena* arena) const {
  GetRobotSceneMapData* n = new GetRobotSceneMapData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetRobotSceneMapData::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.CS.GetRobotSceneMapData)
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) {
    delete msg_head_;
  }
  msg_head_ = NULL;
  map_id_ = 0u;
}

bool GetRobotSceneMapData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.CS.GetRobotSceneMapData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.MsgHead msg_head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 map_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &map_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.CS.GetRobotSceneMapData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.CS.GetRobotSceneMapData)
  return false;
#undef DO_
}

void GetRobotSceneMapData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.CS.GetRobotSceneMapData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msg_head_, output);
  }

  // uint32 map_id = 2;
  if (this->map_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->map_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.CS.GetRobotSceneMapData)
}

::google::protobuf::uint8* GetRobotSceneMapData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.CS.GetRobotSceneMapData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msg_head_, deterministic, target);
  }

  // uint32 map_id = 2;
  if (this->map_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->map_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.CS.GetRobotSceneMapData)
  return target;
}

size_t GetRobotSceneMapData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.CS.GetRobotSceneMapData)
  size_t total_size = 0;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_head_);
  }

  // uint32 map_id = 2;
  if (this->map_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->map_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRobotSceneMapData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.CS.GetRobotSceneMapData)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRobotSceneMapData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRobotSceneMapData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.CS.GetRobotSceneMapData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.CS.GetRobotSceneMapData)
    MergeFrom(*source);
  }
}

void GetRobotSceneMapData::MergeFrom(const GetRobotSceneMapData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.CS.GetRobotSceneMapData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_msg_head()) {
    mutable_msg_head()->::NetProto::MsgHead::MergeFrom(from.msg_head());
  }
  if (from.map_id() != 0) {
    set_map_id(from.map_id());
  }
}

void GetRobotSceneMapData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.CS.GetRobotSceneMapData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRobotSceneMapData::CopyFrom(const GetRobotSceneMapData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.CS.GetRobotSceneMapData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRobotSceneMapData::IsInitialized() const {
  return true;
}

void GetRobotSceneMapData::Swap(GetRobotSceneMapData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRobotSceneMapData::InternalSwap(GetRobotSceneMapData* other) {
  std::swap(msg_head_, other->msg_head_);
  std::swap(map_id_, other->map_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetRobotSceneMapData::GetMetadata() const {
  protobuf_player_5flogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5flogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetRobotSceneMapData

// .NetProto.MsgHead msg_head = 1;
bool GetRobotSceneMapData::has_msg_head() const {
  return this != internal_default_instance() && msg_head_ != NULL;
}
void GetRobotSceneMapData::clear_msg_head() {
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) delete msg_head_;
  msg_head_ = NULL;
}
const ::NetProto::MsgHead& GetRobotSceneMapData::msg_head() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.GetRobotSceneMapData.msg_head)
  return msg_head_ != NULL ? *msg_head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
::NetProto::MsgHead* GetRobotSceneMapData::mutable_msg_head() {
  
  if (msg_head_ == NULL) {
    msg_head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.CS.GetRobotSceneMapData.msg_head)
  return msg_head_;
}
::NetProto::MsgHead* GetRobotSceneMapData::release_msg_head() {
  // @@protoc_insertion_point(field_release:NetProto.CS.GetRobotSceneMapData.msg_head)
  
  ::NetProto::MsgHead* temp = msg_head_;
  msg_head_ = NULL;
  return temp;
}
void GetRobotSceneMapData::set_allocated_msg_head(::NetProto::MsgHead* msg_head) {
  delete msg_head_;
  msg_head_ = msg_head;
  if (msg_head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.CS.GetRobotSceneMapData.msg_head)
}

// uint32 map_id = 2;
void GetRobotSceneMapData::clear_map_id() {
  map_id_ = 0u;
}
::google::protobuf::uint32 GetRobotSceneMapData::map_id() const {
  // @@protoc_insertion_point(field_get:NetProto.CS.GetRobotSceneMapData.map_id)
  return map_id_;
}
void GetRobotSceneMapData::set_map_id(::google::protobuf::uint32 value) {
  
  map_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.CS.GetRobotSceneMapData.map_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace CS
}  // namespace NetProto

// @@protoc_insertion_point(global_scope)
