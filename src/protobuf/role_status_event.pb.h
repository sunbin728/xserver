// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: role_status_event.proto

#ifndef PROTOBUF_role_5fstatus_5fevent_2eproto__INCLUDED
#define PROTOBUF_role_5fstatus_5fevent_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)
namespace NetProto {
}  // namespace NetProto

namespace NetProto {

namespace protobuf_role_5fstatus_5fevent_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_role_5fstatus_5fevent_2eproto

enum RoleStatusEvent {
  Open = 0,
  Close = 1,
  Ignite = 2,
  Put_out = 3,
  Drink = 4,
  NoDrink = 5,
  Eat = 6,
  NoEat = 7,
  Taste = 8,
  NoTaste = 9,
  Sit = 10,
  NoSit = 11,
  SitEdge = 12,
  NoSitEdge = 13,
  LyingOn = 14,
  NoLyingOn = 15,
  Taking = 16,
  NoTaking = 17,
  See = 18,
  NoSee = 19,
  Internet = 20,
  NoInternet = 21,
  Listening = 22,
  NoListening = 23,
  Bathing = 24,
  NoBathing = 25,
  Daze = 26,
  NoDaze = 27,
  RestMind = 28,
  NoRestMind = 29,
  Sleep = 30,
  NoSleep = 31,
  Stand = 32,
  NoStand = 33,
  Follow = 34,
  NoFollow = 35,
  Stare = 36,
  NoStare = 37,
  Emotion = 38,
  Changing = 39,
  Changed = 40,
  Dress = 41,
  Recharge = 42,
  NoRecharge = 43,
  RandomWalk = 44,
  NoRandomWalk = 45,
  RoleStatusEvent_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RoleStatusEvent_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RoleStatusEvent_IsValid(int value);
const RoleStatusEvent RoleStatusEvent_MIN = Open;
const RoleStatusEvent RoleStatusEvent_MAX = NoRandomWalk;
const int RoleStatusEvent_ARRAYSIZE = RoleStatusEvent_MAX + 1;

const ::google::protobuf::EnumDescriptor* RoleStatusEvent_descriptor();
inline const ::std::string& RoleStatusEvent_Name(RoleStatusEvent value) {
  return ::google::protobuf::internal::NameOfEnum(
    RoleStatusEvent_descriptor(), value);
}
inline bool RoleStatusEvent_Parse(
    const ::std::string& name, RoleStatusEvent* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RoleStatusEvent>(
    RoleStatusEvent_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace NetProto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::NetProto::RoleStatusEvent> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetProto::RoleStatusEvent>() {
  return ::NetProto::RoleStatusEvent_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_role_5fstatus_5fevent_2eproto__INCLUDED
