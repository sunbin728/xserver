// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pw_data.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "pw_data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace NetProto {
class PWDataSceneIDParamDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PWDataSceneIDParam> {
} _PWDataSceneIDParam_default_instance_;
class PWDataRobotInfoParamDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PWDataRobotInfoParam> {
} _PWDataRobotInfoParam_default_instance_;
class PWDataSceneMapParamDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PWDataSceneMapParam> {
} _PWDataSceneMapParam_default_instance_;
class GS2PWGetPWDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GS2PWGetPWData> {
} _GS2PWGetPWData_default_instance_;
class RobotSceneIDDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RobotSceneID> {
} _RobotSceneID_default_instance_;
class PW2GSNotifyPWDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PW2GSNotifyPWData> {
} _PW2GSNotifyPWData_default_instance_;

namespace protobuf_pw_5fdata_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[6];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PWDataSceneIDParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PWDataSceneIDParam, robot_uuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PWDataRobotInfoParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PWDataRobotInfoParam, robot_uuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PWDataSceneMapParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PWDataSceneMapParam, scene_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GS2PWGetPWData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GS2PWGetPWData, msg_head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GS2PWGetPWData, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GS2PWGetPWData, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotSceneID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotSceneID, robot_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotSceneID, scene_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PW2GSNotifyPWData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PW2GSNotifyPWData, msg_head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PW2GSNotifyPWData, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PW2GSNotifyPWData, data_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(PWDataSceneIDParam)},
  { 6, -1, sizeof(PWDataRobotInfoParam)},
  { 12, -1, sizeof(PWDataSceneMapParam)},
  { 18, -1, sizeof(GS2PWGetPWData)},
  { 26, -1, sizeof(RobotSceneID)},
  { 33, -1, sizeof(PW2GSNotifyPWData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_PWDataSceneIDParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PWDataRobotInfoParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PWDataSceneMapParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GS2PWGetPWData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RobotSceneID_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PW2GSNotifyPWData_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "pw_data.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

}  // namespace

void TableStruct::Shutdown() {
  _PWDataSceneIDParam_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _PWDataRobotInfoParam_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _PWDataSceneMapParam_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _GS2PWGetPWData_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _RobotSceneID_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _PW2GSNotifyPWData_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::NetProto::protobuf_msg_5fhead_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fany_2eproto::InitDefaults();
  _PWDataSceneIDParam_default_instance_.DefaultConstruct();
  _PWDataRobotInfoParam_default_instance_.DefaultConstruct();
  _PWDataSceneMapParam_default_instance_.DefaultConstruct();
  _GS2PWGetPWData_default_instance_.DefaultConstruct();
  _RobotSceneID_default_instance_.DefaultConstruct();
  _PW2GSNotifyPWData_default_instance_.DefaultConstruct();
  _GS2PWGetPWData_default_instance_.get_mutable()->msg_head_ = const_cast< ::NetProto::MsgHead*>(
      ::NetProto::MsgHead::internal_default_instance());
  _GS2PWGetPWData_default_instance_.get_mutable()->data_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
  _PW2GSNotifyPWData_default_instance_.get_mutable()->msg_head_ = const_cast< ::NetProto::MsgHead*>(
      ::NetProto::MsgHead::internal_default_instance());
  _PW2GSNotifyPWData_default_instance_.get_mutable()->data_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rpw_data.proto\022\010NetProto\032\016msg_head.prot"
      "o\032\031google/protobuf/any.proto\"(\n\022PWDataSc"
      "eneIDParam\022\022\n\nrobot_uuid\030\001 \001(\t\"*\n\024PWData"
      "RobotInfoParam\022\022\n\nrobot_uuid\030\001 \001(\t\"\'\n\023PW"
      "DataSceneMapParam\022\020\n\010scene_id\030\001 \001(\t\"}\n\016G"
      "S2PWGetPWData\022#\n\010msg_head\030\001 \001(\0132\021.NetPro"
      "to.MsgHead\022\"\n\004type\030\002 \001(\0162\024.NetProto.PWDa"
      "taType\022\"\n\004data\030\003 \001(\0132\024.google.protobuf.A"
      "ny\"4\n\014RobotSceneID\022\022\n\nrobot_uuid\030\001 \001(\t\022\020"
      "\n\010scene_id\030\002 \001(\t\"\200\001\n\021PW2GSNotifyPWData\022#"
      "\n\010msg_head\030\001 \001(\0132\021.NetProto.MsgHead\022\"\n\004t"
      "ype\030\002 \001(\0162\024.NetProto.PWDataType\022\"\n\004data\030"
      "\003 \001(\0132\024.google.protobuf.Any*z\n\nPWDataTyp"
      "e\022\030\n\024PW_DATA_TYPE_UNKNOWN\020\000\022\031\n\025PW_DATA_T"
      "YPE_SCENE_ID\020\001\022\033\n\027PW_DATA_TYPE_ROBOT_INF"
      "O\020\002\022\032\n\026PW_DATA_TYPE_SCENE_MAP\020\003b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 639);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "pw_data.proto", &protobuf_RegisterTypes);
  ::NetProto::protobuf_msg_5fhead_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_pw_5fdata_2eproto

const ::google::protobuf::EnumDescriptor* PWDataType_descriptor() {
  protobuf_pw_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pw_5fdata_2eproto::file_level_enum_descriptors[0];
}
bool PWDataType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PWDataSceneIDParam::kRobotUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PWDataSceneIDParam::PWDataSceneIDParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pw_5fdata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.PWDataSceneIDParam)
}
PWDataSceneIDParam::PWDataSceneIDParam(const PWDataSceneIDParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  robot_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.robot_uuid().size() > 0) {
    robot_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.robot_uuid_);
  }
  // @@protoc_insertion_point(copy_constructor:NetProto.PWDataSceneIDParam)
}

void PWDataSceneIDParam::SharedCtor() {
  robot_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PWDataSceneIDParam::~PWDataSceneIDParam() {
  // @@protoc_insertion_point(destructor:NetProto.PWDataSceneIDParam)
  SharedDtor();
}

void PWDataSceneIDParam::SharedDtor() {
  robot_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PWDataSceneIDParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PWDataSceneIDParam::descriptor() {
  protobuf_pw_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pw_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PWDataSceneIDParam& PWDataSceneIDParam::default_instance() {
  protobuf_pw_5fdata_2eproto::InitDefaults();
  return *internal_default_instance();
}

PWDataSceneIDParam* PWDataSceneIDParam::New(::google::protobuf::Arena* arena) const {
  PWDataSceneIDParam* n = new PWDataSceneIDParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PWDataSceneIDParam::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.PWDataSceneIDParam)
  robot_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PWDataSceneIDParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.PWDataSceneIDParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string robot_uuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_robot_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->robot_uuid().data(), this->robot_uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.PWDataSceneIDParam.robot_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.PWDataSceneIDParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.PWDataSceneIDParam)
  return false;
#undef DO_
}

void PWDataSceneIDParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.PWDataSceneIDParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string robot_uuid = 1;
  if (this->robot_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->robot_uuid().data(), this->robot_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.PWDataSceneIDParam.robot_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->robot_uuid(), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.PWDataSceneIDParam)
}

::google::protobuf::uint8* PWDataSceneIDParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.PWDataSceneIDParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string robot_uuid = 1;
  if (this->robot_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->robot_uuid().data(), this->robot_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.PWDataSceneIDParam.robot_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->robot_uuid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.PWDataSceneIDParam)
  return target;
}

size_t PWDataSceneIDParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.PWDataSceneIDParam)
  size_t total_size = 0;

  // string robot_uuid = 1;
  if (this->robot_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->robot_uuid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PWDataSceneIDParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.PWDataSceneIDParam)
  GOOGLE_DCHECK_NE(&from, this);
  const PWDataSceneIDParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PWDataSceneIDParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.PWDataSceneIDParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.PWDataSceneIDParam)
    MergeFrom(*source);
  }
}

void PWDataSceneIDParam::MergeFrom(const PWDataSceneIDParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.PWDataSceneIDParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.robot_uuid().size() > 0) {

    robot_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.robot_uuid_);
  }
}

void PWDataSceneIDParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.PWDataSceneIDParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PWDataSceneIDParam::CopyFrom(const PWDataSceneIDParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.PWDataSceneIDParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PWDataSceneIDParam::IsInitialized() const {
  return true;
}

void PWDataSceneIDParam::Swap(PWDataSceneIDParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PWDataSceneIDParam::InternalSwap(PWDataSceneIDParam* other) {
  robot_uuid_.Swap(&other->robot_uuid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PWDataSceneIDParam::GetMetadata() const {
  protobuf_pw_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pw_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PWDataSceneIDParam

// string robot_uuid = 1;
void PWDataSceneIDParam::clear_robot_uuid() {
  robot_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PWDataSceneIDParam::robot_uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.PWDataSceneIDParam.robot_uuid)
  return robot_uuid_.GetNoArena();
}
void PWDataSceneIDParam::set_robot_uuid(const ::std::string& value) {
  
  robot_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.PWDataSceneIDParam.robot_uuid)
}
#if LANG_CXX11
void PWDataSceneIDParam::set_robot_uuid(::std::string&& value) {
  
  robot_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.PWDataSceneIDParam.robot_uuid)
}
#endif
void PWDataSceneIDParam::set_robot_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  robot_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.PWDataSceneIDParam.robot_uuid)
}
void PWDataSceneIDParam::set_robot_uuid(const char* value, size_t size) {
  
  robot_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.PWDataSceneIDParam.robot_uuid)
}
::std::string* PWDataSceneIDParam::mutable_robot_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.PWDataSceneIDParam.robot_uuid)
  return robot_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PWDataSceneIDParam::release_robot_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.PWDataSceneIDParam.robot_uuid)
  
  return robot_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PWDataSceneIDParam::set_allocated_robot_uuid(::std::string* robot_uuid) {
  if (robot_uuid != NULL) {
    
  } else {
    
  }
  robot_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), robot_uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.PWDataSceneIDParam.robot_uuid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PWDataRobotInfoParam::kRobotUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PWDataRobotInfoParam::PWDataRobotInfoParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pw_5fdata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.PWDataRobotInfoParam)
}
PWDataRobotInfoParam::PWDataRobotInfoParam(const PWDataRobotInfoParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  robot_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.robot_uuid().size() > 0) {
    robot_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.robot_uuid_);
  }
  // @@protoc_insertion_point(copy_constructor:NetProto.PWDataRobotInfoParam)
}

void PWDataRobotInfoParam::SharedCtor() {
  robot_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PWDataRobotInfoParam::~PWDataRobotInfoParam() {
  // @@protoc_insertion_point(destructor:NetProto.PWDataRobotInfoParam)
  SharedDtor();
}

void PWDataRobotInfoParam::SharedDtor() {
  robot_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PWDataRobotInfoParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PWDataRobotInfoParam::descriptor() {
  protobuf_pw_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pw_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PWDataRobotInfoParam& PWDataRobotInfoParam::default_instance() {
  protobuf_pw_5fdata_2eproto::InitDefaults();
  return *internal_default_instance();
}

PWDataRobotInfoParam* PWDataRobotInfoParam::New(::google::protobuf::Arena* arena) const {
  PWDataRobotInfoParam* n = new PWDataRobotInfoParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PWDataRobotInfoParam::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.PWDataRobotInfoParam)
  robot_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PWDataRobotInfoParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.PWDataRobotInfoParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string robot_uuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_robot_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->robot_uuid().data(), this->robot_uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.PWDataRobotInfoParam.robot_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.PWDataRobotInfoParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.PWDataRobotInfoParam)
  return false;
#undef DO_
}

void PWDataRobotInfoParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.PWDataRobotInfoParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string robot_uuid = 1;
  if (this->robot_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->robot_uuid().data(), this->robot_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.PWDataRobotInfoParam.robot_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->robot_uuid(), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.PWDataRobotInfoParam)
}

::google::protobuf::uint8* PWDataRobotInfoParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.PWDataRobotInfoParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string robot_uuid = 1;
  if (this->robot_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->robot_uuid().data(), this->robot_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.PWDataRobotInfoParam.robot_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->robot_uuid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.PWDataRobotInfoParam)
  return target;
}

size_t PWDataRobotInfoParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.PWDataRobotInfoParam)
  size_t total_size = 0;

  // string robot_uuid = 1;
  if (this->robot_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->robot_uuid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PWDataRobotInfoParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.PWDataRobotInfoParam)
  GOOGLE_DCHECK_NE(&from, this);
  const PWDataRobotInfoParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PWDataRobotInfoParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.PWDataRobotInfoParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.PWDataRobotInfoParam)
    MergeFrom(*source);
  }
}

void PWDataRobotInfoParam::MergeFrom(const PWDataRobotInfoParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.PWDataRobotInfoParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.robot_uuid().size() > 0) {

    robot_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.robot_uuid_);
  }
}

void PWDataRobotInfoParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.PWDataRobotInfoParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PWDataRobotInfoParam::CopyFrom(const PWDataRobotInfoParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.PWDataRobotInfoParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PWDataRobotInfoParam::IsInitialized() const {
  return true;
}

void PWDataRobotInfoParam::Swap(PWDataRobotInfoParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PWDataRobotInfoParam::InternalSwap(PWDataRobotInfoParam* other) {
  robot_uuid_.Swap(&other->robot_uuid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PWDataRobotInfoParam::GetMetadata() const {
  protobuf_pw_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pw_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PWDataRobotInfoParam

// string robot_uuid = 1;
void PWDataRobotInfoParam::clear_robot_uuid() {
  robot_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PWDataRobotInfoParam::robot_uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.PWDataRobotInfoParam.robot_uuid)
  return robot_uuid_.GetNoArena();
}
void PWDataRobotInfoParam::set_robot_uuid(const ::std::string& value) {
  
  robot_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.PWDataRobotInfoParam.robot_uuid)
}
#if LANG_CXX11
void PWDataRobotInfoParam::set_robot_uuid(::std::string&& value) {
  
  robot_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.PWDataRobotInfoParam.robot_uuid)
}
#endif
void PWDataRobotInfoParam::set_robot_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  robot_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.PWDataRobotInfoParam.robot_uuid)
}
void PWDataRobotInfoParam::set_robot_uuid(const char* value, size_t size) {
  
  robot_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.PWDataRobotInfoParam.robot_uuid)
}
::std::string* PWDataRobotInfoParam::mutable_robot_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.PWDataRobotInfoParam.robot_uuid)
  return robot_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PWDataRobotInfoParam::release_robot_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.PWDataRobotInfoParam.robot_uuid)
  
  return robot_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PWDataRobotInfoParam::set_allocated_robot_uuid(::std::string* robot_uuid) {
  if (robot_uuid != NULL) {
    
  } else {
    
  }
  robot_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), robot_uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.PWDataRobotInfoParam.robot_uuid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PWDataSceneMapParam::kSceneIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PWDataSceneMapParam::PWDataSceneMapParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pw_5fdata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.PWDataSceneMapParam)
}
PWDataSceneMapParam::PWDataSceneMapParam(const PWDataSceneMapParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  scene_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scene_id().size() > 0) {
    scene_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scene_id_);
  }
  // @@protoc_insertion_point(copy_constructor:NetProto.PWDataSceneMapParam)
}

void PWDataSceneMapParam::SharedCtor() {
  scene_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PWDataSceneMapParam::~PWDataSceneMapParam() {
  // @@protoc_insertion_point(destructor:NetProto.PWDataSceneMapParam)
  SharedDtor();
}

void PWDataSceneMapParam::SharedDtor() {
  scene_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PWDataSceneMapParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PWDataSceneMapParam::descriptor() {
  protobuf_pw_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pw_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PWDataSceneMapParam& PWDataSceneMapParam::default_instance() {
  protobuf_pw_5fdata_2eproto::InitDefaults();
  return *internal_default_instance();
}

PWDataSceneMapParam* PWDataSceneMapParam::New(::google::protobuf::Arena* arena) const {
  PWDataSceneMapParam* n = new PWDataSceneMapParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PWDataSceneMapParam::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.PWDataSceneMapParam)
  scene_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PWDataSceneMapParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.PWDataSceneMapParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scene_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scene_id().data(), this->scene_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.PWDataSceneMapParam.scene_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.PWDataSceneMapParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.PWDataSceneMapParam)
  return false;
#undef DO_
}

void PWDataSceneMapParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.PWDataSceneMapParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string scene_id = 1;
  if (this->scene_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scene_id().data(), this->scene_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.PWDataSceneMapParam.scene_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->scene_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.PWDataSceneMapParam)
}

::google::protobuf::uint8* PWDataSceneMapParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.PWDataSceneMapParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string scene_id = 1;
  if (this->scene_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scene_id().data(), this->scene_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.PWDataSceneMapParam.scene_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->scene_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.PWDataSceneMapParam)
  return target;
}

size_t PWDataSceneMapParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.PWDataSceneMapParam)
  size_t total_size = 0;

  // string scene_id = 1;
  if (this->scene_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PWDataSceneMapParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.PWDataSceneMapParam)
  GOOGLE_DCHECK_NE(&from, this);
  const PWDataSceneMapParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PWDataSceneMapParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.PWDataSceneMapParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.PWDataSceneMapParam)
    MergeFrom(*source);
  }
}

void PWDataSceneMapParam::MergeFrom(const PWDataSceneMapParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.PWDataSceneMapParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scene_id().size() > 0) {

    scene_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scene_id_);
  }
}

void PWDataSceneMapParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.PWDataSceneMapParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PWDataSceneMapParam::CopyFrom(const PWDataSceneMapParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.PWDataSceneMapParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PWDataSceneMapParam::IsInitialized() const {
  return true;
}

void PWDataSceneMapParam::Swap(PWDataSceneMapParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PWDataSceneMapParam::InternalSwap(PWDataSceneMapParam* other) {
  scene_id_.Swap(&other->scene_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PWDataSceneMapParam::GetMetadata() const {
  protobuf_pw_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pw_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PWDataSceneMapParam

// string scene_id = 1;
void PWDataSceneMapParam::clear_scene_id() {
  scene_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PWDataSceneMapParam::scene_id() const {
  // @@protoc_insertion_point(field_get:NetProto.PWDataSceneMapParam.scene_id)
  return scene_id_.GetNoArena();
}
void PWDataSceneMapParam::set_scene_id(const ::std::string& value) {
  
  scene_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.PWDataSceneMapParam.scene_id)
}
#if LANG_CXX11
void PWDataSceneMapParam::set_scene_id(::std::string&& value) {
  
  scene_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.PWDataSceneMapParam.scene_id)
}
#endif
void PWDataSceneMapParam::set_scene_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  scene_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.PWDataSceneMapParam.scene_id)
}
void PWDataSceneMapParam::set_scene_id(const char* value, size_t size) {
  
  scene_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.PWDataSceneMapParam.scene_id)
}
::std::string* PWDataSceneMapParam::mutable_scene_id() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.PWDataSceneMapParam.scene_id)
  return scene_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PWDataSceneMapParam::release_scene_id() {
  // @@protoc_insertion_point(field_release:NetProto.PWDataSceneMapParam.scene_id)
  
  return scene_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PWDataSceneMapParam::set_allocated_scene_id(::std::string* scene_id) {
  if (scene_id != NULL) {
    
  } else {
    
  }
  scene_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scene_id);
  // @@protoc_insertion_point(field_set_allocated:NetProto.PWDataSceneMapParam.scene_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GS2PWGetPWData::kMsgHeadFieldNumber;
const int GS2PWGetPWData::kTypeFieldNumber;
const int GS2PWGetPWData::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GS2PWGetPWData::GS2PWGetPWData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pw_5fdata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.GS2PWGetPWData)
}
GS2PWGetPWData::GS2PWGetPWData(const GS2PWGetPWData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_msg_head()) {
    msg_head_ = new ::NetProto::MsgHead(*from.msg_head_);
  } else {
    msg_head_ = NULL;
  }
  if (from.has_data()) {
    data_ = new ::google::protobuf::Any(*from.data_);
  } else {
    data_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:NetProto.GS2PWGetPWData)
}

void GS2PWGetPWData::SharedCtor() {
  ::memset(&msg_head_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&msg_head_) + sizeof(type_));
  _cached_size_ = 0;
}

GS2PWGetPWData::~GS2PWGetPWData() {
  // @@protoc_insertion_point(destructor:NetProto.GS2PWGetPWData)
  SharedDtor();
}

void GS2PWGetPWData::SharedDtor() {
  if (this != internal_default_instance()) {
    delete msg_head_;
  }
  if (this != internal_default_instance()) {
    delete data_;
  }
}

void GS2PWGetPWData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GS2PWGetPWData::descriptor() {
  protobuf_pw_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pw_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GS2PWGetPWData& GS2PWGetPWData::default_instance() {
  protobuf_pw_5fdata_2eproto::InitDefaults();
  return *internal_default_instance();
}

GS2PWGetPWData* GS2PWGetPWData::New(::google::protobuf::Arena* arena) const {
  GS2PWGetPWData* n = new GS2PWGetPWData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GS2PWGetPWData::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.GS2PWGetPWData)
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) {
    delete msg_head_;
  }
  msg_head_ = NULL;
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  type_ = 0;
}

bool GS2PWGetPWData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.GS2PWGetPWData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.MsgHead msg_head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.PWDataType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::NetProto::PWDataType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.GS2PWGetPWData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.GS2PWGetPWData)
  return false;
#undef DO_
}

void GS2PWGetPWData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.GS2PWGetPWData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msg_head_, output);
  }

  // .NetProto.PWDataType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // .google.protobuf.Any data = 3;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->data_, output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.GS2PWGetPWData)
}

::google::protobuf::uint8* GS2PWGetPWData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.GS2PWGetPWData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msg_head_, deterministic, target);
  }

  // .NetProto.PWDataType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // .google.protobuf.Any data = 3;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->data_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.GS2PWGetPWData)
  return target;
}

size_t GS2PWGetPWData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.GS2PWGetPWData)
  size_t total_size = 0;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_head_);
  }

  // .google.protobuf.Any data = 3;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  // .NetProto.PWDataType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GS2PWGetPWData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.GS2PWGetPWData)
  GOOGLE_DCHECK_NE(&from, this);
  const GS2PWGetPWData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GS2PWGetPWData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.GS2PWGetPWData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.GS2PWGetPWData)
    MergeFrom(*source);
  }
}

void GS2PWGetPWData::MergeFrom(const GS2PWGetPWData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.GS2PWGetPWData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_msg_head()) {
    mutable_msg_head()->::NetProto::MsgHead::MergeFrom(from.msg_head());
  }
  if (from.has_data()) {
    mutable_data()->::google::protobuf::Any::MergeFrom(from.data());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void GS2PWGetPWData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.GS2PWGetPWData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GS2PWGetPWData::CopyFrom(const GS2PWGetPWData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.GS2PWGetPWData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GS2PWGetPWData::IsInitialized() const {
  return true;
}

void GS2PWGetPWData::Swap(GS2PWGetPWData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GS2PWGetPWData::InternalSwap(GS2PWGetPWData* other) {
  std::swap(msg_head_, other->msg_head_);
  std::swap(data_, other->data_);
  std::swap(type_, other->type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GS2PWGetPWData::GetMetadata() const {
  protobuf_pw_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pw_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GS2PWGetPWData

// .NetProto.MsgHead msg_head = 1;
bool GS2PWGetPWData::has_msg_head() const {
  return this != internal_default_instance() && msg_head_ != NULL;
}
void GS2PWGetPWData::clear_msg_head() {
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) delete msg_head_;
  msg_head_ = NULL;
}
const ::NetProto::MsgHead& GS2PWGetPWData::msg_head() const {
  // @@protoc_insertion_point(field_get:NetProto.GS2PWGetPWData.msg_head)
  return msg_head_ != NULL ? *msg_head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
::NetProto::MsgHead* GS2PWGetPWData::mutable_msg_head() {
  
  if (msg_head_ == NULL) {
    msg_head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.GS2PWGetPWData.msg_head)
  return msg_head_;
}
::NetProto::MsgHead* GS2PWGetPWData::release_msg_head() {
  // @@protoc_insertion_point(field_release:NetProto.GS2PWGetPWData.msg_head)
  
  ::NetProto::MsgHead* temp = msg_head_;
  msg_head_ = NULL;
  return temp;
}
void GS2PWGetPWData::set_allocated_msg_head(::NetProto::MsgHead* msg_head) {
  delete msg_head_;
  msg_head_ = msg_head;
  if (msg_head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.GS2PWGetPWData.msg_head)
}

// .NetProto.PWDataType type = 2;
void GS2PWGetPWData::clear_type() {
  type_ = 0;
}
::NetProto::PWDataType GS2PWGetPWData::type() const {
  // @@protoc_insertion_point(field_get:NetProto.GS2PWGetPWData.type)
  return static_cast< ::NetProto::PWDataType >(type_);
}
void GS2PWGetPWData::set_type(::NetProto::PWDataType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetProto.GS2PWGetPWData.type)
}

// .google.protobuf.Any data = 3;
bool GS2PWGetPWData::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
void GS2PWGetPWData::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
const ::google::protobuf::Any& GS2PWGetPWData::data() const {
  // @@protoc_insertion_point(field_get:NetProto.GS2PWGetPWData.data)
  return data_ != NULL ? *data_
                         : *::google::protobuf::Any::internal_default_instance();
}
::google::protobuf::Any* GS2PWGetPWData::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.GS2PWGetPWData.data)
  return data_;
}
::google::protobuf::Any* GS2PWGetPWData::release_data() {
  // @@protoc_insertion_point(field_release:NetProto.GS2PWGetPWData.data)
  
  ::google::protobuf::Any* temp = data_;
  data_ = NULL;
  return temp;
}
void GS2PWGetPWData::set_allocated_data(::google::protobuf::Any* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.GS2PWGetPWData.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotSceneID::kRobotUuidFieldNumber;
const int RobotSceneID::kSceneIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotSceneID::RobotSceneID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pw_5fdata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.RobotSceneID)
}
RobotSceneID::RobotSceneID(const RobotSceneID& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  robot_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.robot_uuid().size() > 0) {
    robot_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.robot_uuid_);
  }
  scene_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scene_id().size() > 0) {
    scene_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scene_id_);
  }
  // @@protoc_insertion_point(copy_constructor:NetProto.RobotSceneID)
}

void RobotSceneID::SharedCtor() {
  robot_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scene_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RobotSceneID::~RobotSceneID() {
  // @@protoc_insertion_point(destructor:NetProto.RobotSceneID)
  SharedDtor();
}

void RobotSceneID::SharedDtor() {
  robot_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scene_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RobotSceneID::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RobotSceneID::descriptor() {
  protobuf_pw_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pw_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RobotSceneID& RobotSceneID::default_instance() {
  protobuf_pw_5fdata_2eproto::InitDefaults();
  return *internal_default_instance();
}

RobotSceneID* RobotSceneID::New(::google::protobuf::Arena* arena) const {
  RobotSceneID* n = new RobotSceneID;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RobotSceneID::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.RobotSceneID)
  robot_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scene_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RobotSceneID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.RobotSceneID)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string robot_uuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_robot_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->robot_uuid().data(), this->robot_uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.RobotSceneID.robot_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string scene_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scene_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scene_id().data(), this->scene_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.RobotSceneID.scene_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.RobotSceneID)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.RobotSceneID)
  return false;
#undef DO_
}

void RobotSceneID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.RobotSceneID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string robot_uuid = 1;
  if (this->robot_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->robot_uuid().data(), this->robot_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.RobotSceneID.robot_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->robot_uuid(), output);
  }

  // string scene_id = 2;
  if (this->scene_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scene_id().data(), this->scene_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.RobotSceneID.scene_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->scene_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.RobotSceneID)
}

::google::protobuf::uint8* RobotSceneID::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.RobotSceneID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string robot_uuid = 1;
  if (this->robot_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->robot_uuid().data(), this->robot_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.RobotSceneID.robot_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->robot_uuid(), target);
  }

  // string scene_id = 2;
  if (this->scene_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scene_id().data(), this->scene_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.RobotSceneID.scene_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->scene_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.RobotSceneID)
  return target;
}

size_t RobotSceneID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.RobotSceneID)
  size_t total_size = 0;

  // string robot_uuid = 1;
  if (this->robot_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->robot_uuid());
  }

  // string scene_id = 2;
  if (this->scene_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RobotSceneID::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.RobotSceneID)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotSceneID* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RobotSceneID>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.RobotSceneID)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.RobotSceneID)
    MergeFrom(*source);
  }
}

void RobotSceneID::MergeFrom(const RobotSceneID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.RobotSceneID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.robot_uuid().size() > 0) {

    robot_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.robot_uuid_);
  }
  if (from.scene_id().size() > 0) {

    scene_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scene_id_);
  }
}

void RobotSceneID::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.RobotSceneID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotSceneID::CopyFrom(const RobotSceneID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.RobotSceneID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotSceneID::IsInitialized() const {
  return true;
}

void RobotSceneID::Swap(RobotSceneID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotSceneID::InternalSwap(RobotSceneID* other) {
  robot_uuid_.Swap(&other->robot_uuid_);
  scene_id_.Swap(&other->scene_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RobotSceneID::GetMetadata() const {
  protobuf_pw_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pw_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RobotSceneID

// string robot_uuid = 1;
void RobotSceneID::clear_robot_uuid() {
  robot_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RobotSceneID::robot_uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotSceneID.robot_uuid)
  return robot_uuid_.GetNoArena();
}
void RobotSceneID::set_robot_uuid(const ::std::string& value) {
  
  robot_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.RobotSceneID.robot_uuid)
}
#if LANG_CXX11
void RobotSceneID::set_robot_uuid(::std::string&& value) {
  
  robot_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.RobotSceneID.robot_uuid)
}
#endif
void RobotSceneID::set_robot_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  robot_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.RobotSceneID.robot_uuid)
}
void RobotSceneID::set_robot_uuid(const char* value, size_t size) {
  
  robot_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.RobotSceneID.robot_uuid)
}
::std::string* RobotSceneID::mutable_robot_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.RobotSceneID.robot_uuid)
  return robot_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RobotSceneID::release_robot_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.RobotSceneID.robot_uuid)
  
  return robot_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RobotSceneID::set_allocated_robot_uuid(::std::string* robot_uuid) {
  if (robot_uuid != NULL) {
    
  } else {
    
  }
  robot_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), robot_uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.RobotSceneID.robot_uuid)
}

// string scene_id = 2;
void RobotSceneID::clear_scene_id() {
  scene_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RobotSceneID::scene_id() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotSceneID.scene_id)
  return scene_id_.GetNoArena();
}
void RobotSceneID::set_scene_id(const ::std::string& value) {
  
  scene_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.RobotSceneID.scene_id)
}
#if LANG_CXX11
void RobotSceneID::set_scene_id(::std::string&& value) {
  
  scene_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.RobotSceneID.scene_id)
}
#endif
void RobotSceneID::set_scene_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  scene_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.RobotSceneID.scene_id)
}
void RobotSceneID::set_scene_id(const char* value, size_t size) {
  
  scene_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.RobotSceneID.scene_id)
}
::std::string* RobotSceneID::mutable_scene_id() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.RobotSceneID.scene_id)
  return scene_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RobotSceneID::release_scene_id() {
  // @@protoc_insertion_point(field_release:NetProto.RobotSceneID.scene_id)
  
  return scene_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RobotSceneID::set_allocated_scene_id(::std::string* scene_id) {
  if (scene_id != NULL) {
    
  } else {
    
  }
  scene_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scene_id);
  // @@protoc_insertion_point(field_set_allocated:NetProto.RobotSceneID.scene_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PW2GSNotifyPWData::kMsgHeadFieldNumber;
const int PW2GSNotifyPWData::kTypeFieldNumber;
const int PW2GSNotifyPWData::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PW2GSNotifyPWData::PW2GSNotifyPWData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pw_5fdata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.PW2GSNotifyPWData)
}
PW2GSNotifyPWData::PW2GSNotifyPWData(const PW2GSNotifyPWData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_msg_head()) {
    msg_head_ = new ::NetProto::MsgHead(*from.msg_head_);
  } else {
    msg_head_ = NULL;
  }
  if (from.has_data()) {
    data_ = new ::google::protobuf::Any(*from.data_);
  } else {
    data_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:NetProto.PW2GSNotifyPWData)
}

void PW2GSNotifyPWData::SharedCtor() {
  ::memset(&msg_head_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&msg_head_) + sizeof(type_));
  _cached_size_ = 0;
}

PW2GSNotifyPWData::~PW2GSNotifyPWData() {
  // @@protoc_insertion_point(destructor:NetProto.PW2GSNotifyPWData)
  SharedDtor();
}

void PW2GSNotifyPWData::SharedDtor() {
  if (this != internal_default_instance()) {
    delete msg_head_;
  }
  if (this != internal_default_instance()) {
    delete data_;
  }
}

void PW2GSNotifyPWData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PW2GSNotifyPWData::descriptor() {
  protobuf_pw_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pw_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PW2GSNotifyPWData& PW2GSNotifyPWData::default_instance() {
  protobuf_pw_5fdata_2eproto::InitDefaults();
  return *internal_default_instance();
}

PW2GSNotifyPWData* PW2GSNotifyPWData::New(::google::protobuf::Arena* arena) const {
  PW2GSNotifyPWData* n = new PW2GSNotifyPWData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PW2GSNotifyPWData::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.PW2GSNotifyPWData)
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) {
    delete msg_head_;
  }
  msg_head_ = NULL;
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  type_ = 0;
}

bool PW2GSNotifyPWData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.PW2GSNotifyPWData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.MsgHead msg_head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.PWDataType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::NetProto::PWDataType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.PW2GSNotifyPWData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.PW2GSNotifyPWData)
  return false;
#undef DO_
}

void PW2GSNotifyPWData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.PW2GSNotifyPWData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msg_head_, output);
  }

  // .NetProto.PWDataType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // .google.protobuf.Any data = 3;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->data_, output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.PW2GSNotifyPWData)
}

::google::protobuf::uint8* PW2GSNotifyPWData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.PW2GSNotifyPWData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msg_head_, deterministic, target);
  }

  // .NetProto.PWDataType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // .google.protobuf.Any data = 3;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->data_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.PW2GSNotifyPWData)
  return target;
}

size_t PW2GSNotifyPWData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.PW2GSNotifyPWData)
  size_t total_size = 0;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_head_);
  }

  // .google.protobuf.Any data = 3;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  // .NetProto.PWDataType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PW2GSNotifyPWData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.PW2GSNotifyPWData)
  GOOGLE_DCHECK_NE(&from, this);
  const PW2GSNotifyPWData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PW2GSNotifyPWData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.PW2GSNotifyPWData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.PW2GSNotifyPWData)
    MergeFrom(*source);
  }
}

void PW2GSNotifyPWData::MergeFrom(const PW2GSNotifyPWData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.PW2GSNotifyPWData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_msg_head()) {
    mutable_msg_head()->::NetProto::MsgHead::MergeFrom(from.msg_head());
  }
  if (from.has_data()) {
    mutable_data()->::google::protobuf::Any::MergeFrom(from.data());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void PW2GSNotifyPWData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.PW2GSNotifyPWData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PW2GSNotifyPWData::CopyFrom(const PW2GSNotifyPWData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.PW2GSNotifyPWData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PW2GSNotifyPWData::IsInitialized() const {
  return true;
}

void PW2GSNotifyPWData::Swap(PW2GSNotifyPWData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PW2GSNotifyPWData::InternalSwap(PW2GSNotifyPWData* other) {
  std::swap(msg_head_, other->msg_head_);
  std::swap(data_, other->data_);
  std::swap(type_, other->type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PW2GSNotifyPWData::GetMetadata() const {
  protobuf_pw_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pw_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PW2GSNotifyPWData

// .NetProto.MsgHead msg_head = 1;
bool PW2GSNotifyPWData::has_msg_head() const {
  return this != internal_default_instance() && msg_head_ != NULL;
}
void PW2GSNotifyPWData::clear_msg_head() {
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) delete msg_head_;
  msg_head_ = NULL;
}
const ::NetProto::MsgHead& PW2GSNotifyPWData::msg_head() const {
  // @@protoc_insertion_point(field_get:NetProto.PW2GSNotifyPWData.msg_head)
  return msg_head_ != NULL ? *msg_head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
::NetProto::MsgHead* PW2GSNotifyPWData::mutable_msg_head() {
  
  if (msg_head_ == NULL) {
    msg_head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.PW2GSNotifyPWData.msg_head)
  return msg_head_;
}
::NetProto::MsgHead* PW2GSNotifyPWData::release_msg_head() {
  // @@protoc_insertion_point(field_release:NetProto.PW2GSNotifyPWData.msg_head)
  
  ::NetProto::MsgHead* temp = msg_head_;
  msg_head_ = NULL;
  return temp;
}
void PW2GSNotifyPWData::set_allocated_msg_head(::NetProto::MsgHead* msg_head) {
  delete msg_head_;
  msg_head_ = msg_head;
  if (msg_head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.PW2GSNotifyPWData.msg_head)
}

// .NetProto.PWDataType type = 2;
void PW2GSNotifyPWData::clear_type() {
  type_ = 0;
}
::NetProto::PWDataType PW2GSNotifyPWData::type() const {
  // @@protoc_insertion_point(field_get:NetProto.PW2GSNotifyPWData.type)
  return static_cast< ::NetProto::PWDataType >(type_);
}
void PW2GSNotifyPWData::set_type(::NetProto::PWDataType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetProto.PW2GSNotifyPWData.type)
}

// .google.protobuf.Any data = 3;
bool PW2GSNotifyPWData::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
void PW2GSNotifyPWData::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
const ::google::protobuf::Any& PW2GSNotifyPWData::data() const {
  // @@protoc_insertion_point(field_get:NetProto.PW2GSNotifyPWData.data)
  return data_ != NULL ? *data_
                         : *::google::protobuf::Any::internal_default_instance();
}
::google::protobuf::Any* PW2GSNotifyPWData::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.PW2GSNotifyPWData.data)
  return data_;
}
::google::protobuf::Any* PW2GSNotifyPWData::release_data() {
  // @@protoc_insertion_point(field_release:NetProto.PW2GSNotifyPWData.data)
  
  ::google::protobuf::Any* temp = data_;
  data_ = NULL;
  return temp;
}
void PW2GSNotifyPWData::set_allocated_data(::google::protobuf::Any* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.PW2GSNotifyPWData.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace NetProto

// @@protoc_insertion_point(global_scope)
