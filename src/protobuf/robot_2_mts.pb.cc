// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: robot_2_mts.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "robot_2_mts.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace NetProto {
namespace gs2mts {
class CreateNewRobotReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CreateNewRobotReq> {
} _CreateNewRobotReq_default_instance_;
class CreateNewSceneReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CreateNewSceneReq> {
} _CreateNewSceneReq_default_instance_;
class SceneItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SceneItem> {
} _SceneItem_default_instance_;
class CreateNewRobotRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CreateNewRobotResp> {
} _CreateNewRobotResp_default_instance_;
class CreateNewSceneRespRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CreateNewSceneRespResp> {
} _CreateNewSceneRespResp_default_instance_;
class PwTimeSyncDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PwTimeSync> {
} _PwTimeSync_default_instance_;

namespace protobuf_robot_5f2_5fmts_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[6];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewRobotReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewRobotReq, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewRobotReq, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewRobotReq, robot_prototype_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneReq, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneReq, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneReq, scene_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneItem, object_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneItem, item_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewRobotResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewRobotResp, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewRobotResp, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewRobotResp, robot_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewRobotResp, robot_prototype_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewRobotResp, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewRobotResp, item_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneRespResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneRespResp, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneRespResp, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneRespResp, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneRespResp, item_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PwTimeSync, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PwTimeSync, pw_ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PwTimeSync, multiple_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(CreateNewRobotReq)},
  { 8, -1, sizeof(CreateNewSceneReq)},
  { 16, -1, sizeof(SceneItem)},
  { 23, -1, sizeof(CreateNewRobotResp)},
  { 34, -1, sizeof(CreateNewSceneRespResp)},
  { 43, -1, sizeof(PwTimeSync)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateNewRobotReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateNewSceneReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateNewRobotResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateNewSceneRespResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PwTimeSync_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "robot_2_mts.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

}  // namespace

void TableStruct::Shutdown() {
  _CreateNewRobotReq_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _CreateNewSceneReq_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _SceneItem_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _CreateNewRobotResp_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _CreateNewSceneRespResp_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _PwTimeSync_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::NetProto::protobuf_robot_5finfo_2eproto::InitDefaults();
  ::NetProto::protobuf_msg_5fhead_2eproto::InitDefaults();
  _CreateNewRobotReq_default_instance_.DefaultConstruct();
  _CreateNewSceneReq_default_instance_.DefaultConstruct();
  _SceneItem_default_instance_.DefaultConstruct();
  _CreateNewRobotResp_default_instance_.DefaultConstruct();
  _CreateNewSceneRespResp_default_instance_.DefaultConstruct();
  _PwTimeSync_default_instance_.DefaultConstruct();
  _CreateNewRobotReq_default_instance_.get_mutable()->head_ = const_cast< ::NetProto::MsgHead*>(
      ::NetProto::MsgHead::internal_default_instance());
  _CreateNewSceneReq_default_instance_.get_mutable()->head_ = const_cast< ::NetProto::MsgHead*>(
      ::NetProto::MsgHead::internal_default_instance());
  _CreateNewRobotResp_default_instance_.get_mutable()->head_ = const_cast< ::NetProto::MsgHead*>(
      ::NetProto::MsgHead::internal_default_instance());
  _CreateNewSceneRespResp_default_instance_.get_mutable()->head_ = const_cast< ::NetProto::MsgHead*>(
      ::NetProto::MsgHead::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\021robot_2_mts.proto\022\017NetProto.gs2mts\032\020ro"
      "bot_info.proto\032\016msg_head.proto\"c\n\021Create"
      "NewRobotReq\022\037\n\004head\030d \001(\0132\021.NetProto.Msg"
      "Head\022\021\n\tplayer_id\030\001 \001(\004\022\032\n\022robot_prototy"
      "pe_id\030\002 \001(\r\"[\n\021CreateNewSceneReq\022\037\n\004head"
      "\030d \001(\0132\021.NetProto.MsgHead\022\021\n\tplayer_id\030\001"
      " \001(\004\022\022\n\nScene_type\030\002 \001(\r\"1\n\tSceneItem\022\023\n"
      "\013object_uuid\030\001 \001(\t\022\017\n\007item_id\030\002 \001(\r\"\267\001\n\022"
      "CreateNewRobotResp\022\037\n\004head\030d \001(\0132\021.NetPr"
      "oto.MsgHead\022\021\n\tplayer_id\030\001 \001(\004\022\020\n\010robot_"
      "id\030\002 \001(\t\022\032\n\022robot_prototype_id\030\003 \001(\r\022\020\n\010"
      "Scene_id\030\004 \001(\t\022-\n\titem_list\030\005 \003(\0132\032.NetP"
      "roto.gs2mts.SceneItem\"\215\001\n\026CreateNewScene"
      "RespResp\022\037\n\004head\030d \001(\0132\021.NetProto.MsgHea"
      "d\022\021\n\tplayer_id\030\001 \001(\004\022\020\n\010Scene_id\030\002 \001(\t\022-"
      "\n\titem_list\030\003 \003(\0132\032.NetProto.gs2mts.Scen"
      "eItem\"-\n\nPwTimeSync\022\r\n\005pw_ts\030\001 \001(\004\022\020\n\010mu"
      "ltiple\030\002 \001(\rb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 700);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "robot_2_mts.proto", &protobuf_RegisterTypes);
  ::NetProto::protobuf_robot_5finfo_2eproto::AddDescriptors();
  ::NetProto::protobuf_msg_5fhead_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_robot_5f2_5fmts_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateNewRobotReq::kHeadFieldNumber;
const int CreateNewRobotReq::kPlayerIdFieldNumber;
const int CreateNewRobotReq::kRobotPrototypeIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateNewRobotReq::CreateNewRobotReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_robot_5f2_5fmts_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.gs2mts.CreateNewRobotReq)
}
CreateNewRobotReq::CreateNewRobotReq(const CreateNewRobotReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::NetProto::MsgHead(*from.head_);
  } else {
    head_ = NULL;
  }
  ::memcpy(&player_id_, &from.player_id_,
    reinterpret_cast<char*>(&robot_prototype_id_) -
    reinterpret_cast<char*>(&player_id_) + sizeof(robot_prototype_id_));
  // @@protoc_insertion_point(copy_constructor:NetProto.gs2mts.CreateNewRobotReq)
}

void CreateNewRobotReq::SharedCtor() {
  ::memset(&head_, 0, reinterpret_cast<char*>(&robot_prototype_id_) -
    reinterpret_cast<char*>(&head_) + sizeof(robot_prototype_id_));
  _cached_size_ = 0;
}

CreateNewRobotReq::~CreateNewRobotReq() {
  // @@protoc_insertion_point(destructor:NetProto.gs2mts.CreateNewRobotReq)
  SharedDtor();
}

void CreateNewRobotReq::SharedDtor() {
  if (this != internal_default_instance()) {
    delete head_;
  }
}

void CreateNewRobotReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateNewRobotReq::descriptor() {
  protobuf_robot_5f2_5fmts_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_robot_5f2_5fmts_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateNewRobotReq& CreateNewRobotReq::default_instance() {
  protobuf_robot_5f2_5fmts_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateNewRobotReq* CreateNewRobotReq::New(::google::protobuf::Arena* arena) const {
  CreateNewRobotReq* n = new CreateNewRobotReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateNewRobotReq::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.gs2mts.CreateNewRobotReq)
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  ::memset(&player_id_, 0, reinterpret_cast<char*>(&robot_prototype_id_) -
    reinterpret_cast<char*>(&player_id_) + sizeof(robot_prototype_id_));
}

bool CreateNewRobotReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.gs2mts.CreateNewRobotReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 robot_prototype_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &robot_prototype_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.MsgHead head = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(802u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.gs2mts.CreateNewRobotReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.gs2mts.CreateNewRobotReq)
  return false;
#undef DO_
}

void CreateNewRobotReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.gs2mts.CreateNewRobotReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 player_id = 1;
  if (this->player_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_id(), output);
  }

  // uint32 robot_prototype_id = 2;
  if (this->robot_prototype_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->robot_prototype_id(), output);
  }

  // .NetProto.MsgHead head = 100;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, *this->head_, output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.gs2mts.CreateNewRobotReq)
}

::google::protobuf::uint8* CreateNewRobotReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.gs2mts.CreateNewRobotReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 player_id = 1;
  if (this->player_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_id(), target);
  }

  // uint32 robot_prototype_id = 2;
  if (this->robot_prototype_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->robot_prototype_id(), target);
  }

  // .NetProto.MsgHead head = 100;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        100, *this->head_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.gs2mts.CreateNewRobotReq)
  return target;
}

size_t CreateNewRobotReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.gs2mts.CreateNewRobotReq)
  size_t total_size = 0;

  // .NetProto.MsgHead head = 100;
  if (this->has_head()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->head_);
  }

  // uint64 player_id = 1;
  if (this->player_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_id());
  }

  // uint32 robot_prototype_id = 2;
  if (this->robot_prototype_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->robot_prototype_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateNewRobotReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.gs2mts.CreateNewRobotReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateNewRobotReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateNewRobotReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.gs2mts.CreateNewRobotReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.gs2mts.CreateNewRobotReq)
    MergeFrom(*source);
  }
}

void CreateNewRobotReq::MergeFrom(const CreateNewRobotReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.gs2mts.CreateNewRobotReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_head()) {
    mutable_head()->::NetProto::MsgHead::MergeFrom(from.head());
  }
  if (from.player_id() != 0) {
    set_player_id(from.player_id());
  }
  if (from.robot_prototype_id() != 0) {
    set_robot_prototype_id(from.robot_prototype_id());
  }
}

void CreateNewRobotReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.gs2mts.CreateNewRobotReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateNewRobotReq::CopyFrom(const CreateNewRobotReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.gs2mts.CreateNewRobotReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateNewRobotReq::IsInitialized() const {
  return true;
}

void CreateNewRobotReq::Swap(CreateNewRobotReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateNewRobotReq::InternalSwap(CreateNewRobotReq* other) {
  std::swap(head_, other->head_);
  std::swap(player_id_, other->player_id_);
  std::swap(robot_prototype_id_, other->robot_prototype_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateNewRobotReq::GetMetadata() const {
  protobuf_robot_5f2_5fmts_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_robot_5f2_5fmts_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateNewRobotReq

// .NetProto.MsgHead head = 100;
bool CreateNewRobotReq::has_head() const {
  return this != internal_default_instance() && head_ != NULL;
}
void CreateNewRobotReq::clear_head() {
  if (GetArenaNoVirtual() == NULL && head_ != NULL) delete head_;
  head_ = NULL;
}
const ::NetProto::MsgHead& CreateNewRobotReq::head() const {
  // @@protoc_insertion_point(field_get:NetProto.gs2mts.CreateNewRobotReq.head)
  return head_ != NULL ? *head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
::NetProto::MsgHead* CreateNewRobotReq::mutable_head() {
  
  if (head_ == NULL) {
    head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.gs2mts.CreateNewRobotReq.head)
  return head_;
}
::NetProto::MsgHead* CreateNewRobotReq::release_head() {
  // @@protoc_insertion_point(field_release:NetProto.gs2mts.CreateNewRobotReq.head)
  
  ::NetProto::MsgHead* temp = head_;
  head_ = NULL;
  return temp;
}
void CreateNewRobotReq::set_allocated_head(::NetProto::MsgHead* head) {
  delete head_;
  head_ = head;
  if (head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.gs2mts.CreateNewRobotReq.head)
}

// uint64 player_id = 1;
void CreateNewRobotReq::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CreateNewRobotReq::player_id() const {
  // @@protoc_insertion_point(field_get:NetProto.gs2mts.CreateNewRobotReq.player_id)
  return player_id_;
}
void CreateNewRobotReq::set_player_id(::google::protobuf::uint64 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.gs2mts.CreateNewRobotReq.player_id)
}

// uint32 robot_prototype_id = 2;
void CreateNewRobotReq::clear_robot_prototype_id() {
  robot_prototype_id_ = 0u;
}
::google::protobuf::uint32 CreateNewRobotReq::robot_prototype_id() const {
  // @@protoc_insertion_point(field_get:NetProto.gs2mts.CreateNewRobotReq.robot_prototype_id)
  return robot_prototype_id_;
}
void CreateNewRobotReq::set_robot_prototype_id(::google::protobuf::uint32 value) {
  
  robot_prototype_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.gs2mts.CreateNewRobotReq.robot_prototype_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateNewSceneReq::kHeadFieldNumber;
const int CreateNewSceneReq::kPlayerIdFieldNumber;
const int CreateNewSceneReq::kSceneTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateNewSceneReq::CreateNewSceneReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_robot_5f2_5fmts_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.gs2mts.CreateNewSceneReq)
}
CreateNewSceneReq::CreateNewSceneReq(const CreateNewSceneReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::NetProto::MsgHead(*from.head_);
  } else {
    head_ = NULL;
  }
  ::memcpy(&player_id_, &from.player_id_,
    reinterpret_cast<char*>(&scene_type_) -
    reinterpret_cast<char*>(&player_id_) + sizeof(scene_type_));
  // @@protoc_insertion_point(copy_constructor:NetProto.gs2mts.CreateNewSceneReq)
}

void CreateNewSceneReq::SharedCtor() {
  ::memset(&head_, 0, reinterpret_cast<char*>(&scene_type_) -
    reinterpret_cast<char*>(&head_) + sizeof(scene_type_));
  _cached_size_ = 0;
}

CreateNewSceneReq::~CreateNewSceneReq() {
  // @@protoc_insertion_point(destructor:NetProto.gs2mts.CreateNewSceneReq)
  SharedDtor();
}

void CreateNewSceneReq::SharedDtor() {
  if (this != internal_default_instance()) {
    delete head_;
  }
}

void CreateNewSceneReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateNewSceneReq::descriptor() {
  protobuf_robot_5f2_5fmts_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_robot_5f2_5fmts_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateNewSceneReq& CreateNewSceneReq::default_instance() {
  protobuf_robot_5f2_5fmts_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateNewSceneReq* CreateNewSceneReq::New(::google::protobuf::Arena* arena) const {
  CreateNewSceneReq* n = new CreateNewSceneReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateNewSceneReq::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.gs2mts.CreateNewSceneReq)
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  ::memset(&player_id_, 0, reinterpret_cast<char*>(&scene_type_) -
    reinterpret_cast<char*>(&player_id_) + sizeof(scene_type_));
}

bool CreateNewSceneReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.gs2mts.CreateNewSceneReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Scene_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.MsgHead head = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(802u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.gs2mts.CreateNewSceneReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.gs2mts.CreateNewSceneReq)
  return false;
#undef DO_
}

void CreateNewSceneReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.gs2mts.CreateNewSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 player_id = 1;
  if (this->player_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_id(), output);
  }

  // uint32 Scene_type = 2;
  if (this->scene_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->scene_type(), output);
  }

  // .NetProto.MsgHead head = 100;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, *this->head_, output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.gs2mts.CreateNewSceneReq)
}

::google::protobuf::uint8* CreateNewSceneReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.gs2mts.CreateNewSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 player_id = 1;
  if (this->player_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_id(), target);
  }

  // uint32 Scene_type = 2;
  if (this->scene_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->scene_type(), target);
  }

  // .NetProto.MsgHead head = 100;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        100, *this->head_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.gs2mts.CreateNewSceneReq)
  return target;
}

size_t CreateNewSceneReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.gs2mts.CreateNewSceneReq)
  size_t total_size = 0;

  // .NetProto.MsgHead head = 100;
  if (this->has_head()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->head_);
  }

  // uint64 player_id = 1;
  if (this->player_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_id());
  }

  // uint32 Scene_type = 2;
  if (this->scene_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateNewSceneReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.gs2mts.CreateNewSceneReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateNewSceneReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateNewSceneReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.gs2mts.CreateNewSceneReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.gs2mts.CreateNewSceneReq)
    MergeFrom(*source);
  }
}

void CreateNewSceneReq::MergeFrom(const CreateNewSceneReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.gs2mts.CreateNewSceneReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_head()) {
    mutable_head()->::NetProto::MsgHead::MergeFrom(from.head());
  }
  if (from.player_id() != 0) {
    set_player_id(from.player_id());
  }
  if (from.scene_type() != 0) {
    set_scene_type(from.scene_type());
  }
}

void CreateNewSceneReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.gs2mts.CreateNewSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateNewSceneReq::CopyFrom(const CreateNewSceneReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.gs2mts.CreateNewSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateNewSceneReq::IsInitialized() const {
  return true;
}

void CreateNewSceneReq::Swap(CreateNewSceneReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateNewSceneReq::InternalSwap(CreateNewSceneReq* other) {
  std::swap(head_, other->head_);
  std::swap(player_id_, other->player_id_);
  std::swap(scene_type_, other->scene_type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateNewSceneReq::GetMetadata() const {
  protobuf_robot_5f2_5fmts_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_robot_5f2_5fmts_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateNewSceneReq

// .NetProto.MsgHead head = 100;
bool CreateNewSceneReq::has_head() const {
  return this != internal_default_instance() && head_ != NULL;
}
void CreateNewSceneReq::clear_head() {
  if (GetArenaNoVirtual() == NULL && head_ != NULL) delete head_;
  head_ = NULL;
}
const ::NetProto::MsgHead& CreateNewSceneReq::head() const {
  // @@protoc_insertion_point(field_get:NetProto.gs2mts.CreateNewSceneReq.head)
  return head_ != NULL ? *head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
::NetProto::MsgHead* CreateNewSceneReq::mutable_head() {
  
  if (head_ == NULL) {
    head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.gs2mts.CreateNewSceneReq.head)
  return head_;
}
::NetProto::MsgHead* CreateNewSceneReq::release_head() {
  // @@protoc_insertion_point(field_release:NetProto.gs2mts.CreateNewSceneReq.head)
  
  ::NetProto::MsgHead* temp = head_;
  head_ = NULL;
  return temp;
}
void CreateNewSceneReq::set_allocated_head(::NetProto::MsgHead* head) {
  delete head_;
  head_ = head;
  if (head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.gs2mts.CreateNewSceneReq.head)
}

// uint64 player_id = 1;
void CreateNewSceneReq::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CreateNewSceneReq::player_id() const {
  // @@protoc_insertion_point(field_get:NetProto.gs2mts.CreateNewSceneReq.player_id)
  return player_id_;
}
void CreateNewSceneReq::set_player_id(::google::protobuf::uint64 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.gs2mts.CreateNewSceneReq.player_id)
}

// uint32 Scene_type = 2;
void CreateNewSceneReq::clear_scene_type() {
  scene_type_ = 0u;
}
::google::protobuf::uint32 CreateNewSceneReq::scene_type() const {
  // @@protoc_insertion_point(field_get:NetProto.gs2mts.CreateNewSceneReq.Scene_type)
  return scene_type_;
}
void CreateNewSceneReq::set_scene_type(::google::protobuf::uint32 value) {
  
  scene_type_ = value;
  // @@protoc_insertion_point(field_set:NetProto.gs2mts.CreateNewSceneReq.Scene_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneItem::kObjectUuidFieldNumber;
const int SceneItem::kItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneItem::SceneItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_robot_5f2_5fmts_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.gs2mts.SceneItem)
}
SceneItem::SceneItem(const SceneItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  object_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.object_uuid().size() > 0) {
    object_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_uuid_);
  }
  item_id_ = from.item_id_;
  // @@protoc_insertion_point(copy_constructor:NetProto.gs2mts.SceneItem)
}

void SceneItem::SharedCtor() {
  object_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_id_ = 0u;
  _cached_size_ = 0;
}

SceneItem::~SceneItem() {
  // @@protoc_insertion_point(destructor:NetProto.gs2mts.SceneItem)
  SharedDtor();
}

void SceneItem::SharedDtor() {
  object_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SceneItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneItem::descriptor() {
  protobuf_robot_5f2_5fmts_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_robot_5f2_5fmts_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneItem& SceneItem::default_instance() {
  protobuf_robot_5f2_5fmts_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneItem* SceneItem::New(::google::protobuf::Arena* arena) const {
  SceneItem* n = new SceneItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneItem::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.gs2mts.SceneItem)
  object_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_id_ = 0u;
}

bool SceneItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.gs2mts.SceneItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string object_uuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->object_uuid().data(), this->object_uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.gs2mts.SceneItem.object_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.gs2mts.SceneItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.gs2mts.SceneItem)
  return false;
#undef DO_
}

void SceneItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.gs2mts.SceneItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_uuid = 1;
  if (this->object_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_uuid().data(), this->object_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.gs2mts.SceneItem.object_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->object_uuid(), output);
  }

  // uint32 item_id = 2;
  if (this->item_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->item_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.gs2mts.SceneItem)
}

::google::protobuf::uint8* SceneItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.gs2mts.SceneItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string object_uuid = 1;
  if (this->object_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->object_uuid().data(), this->object_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.gs2mts.SceneItem.object_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->object_uuid(), target);
  }

  // uint32 item_id = 2;
  if (this->item_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->item_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.gs2mts.SceneItem)
  return target;
}

size_t SceneItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.gs2mts.SceneItem)
  size_t total_size = 0;

  // string object_uuid = 1;
  if (this->object_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->object_uuid());
  }

  // uint32 item_id = 2;
  if (this->item_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->item_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.gs2mts.SceneItem)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.gs2mts.SceneItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.gs2mts.SceneItem)
    MergeFrom(*source);
  }
}

void SceneItem::MergeFrom(const SceneItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.gs2mts.SceneItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.object_uuid().size() > 0) {

    object_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_uuid_);
  }
  if (from.item_id() != 0) {
    set_item_id(from.item_id());
  }
}

void SceneItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.gs2mts.SceneItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneItem::CopyFrom(const SceneItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.gs2mts.SceneItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneItem::IsInitialized() const {
  return true;
}

void SceneItem::Swap(SceneItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneItem::InternalSwap(SceneItem* other) {
  object_uuid_.Swap(&other->object_uuid_);
  std::swap(item_id_, other->item_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneItem::GetMetadata() const {
  protobuf_robot_5f2_5fmts_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_robot_5f2_5fmts_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneItem

// string object_uuid = 1;
void SceneItem::clear_object_uuid() {
  object_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SceneItem::object_uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.gs2mts.SceneItem.object_uuid)
  return object_uuid_.GetNoArena();
}
void SceneItem::set_object_uuid(const ::std::string& value) {
  
  object_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.gs2mts.SceneItem.object_uuid)
}
#if LANG_CXX11
void SceneItem::set_object_uuid(::std::string&& value) {
  
  object_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.gs2mts.SceneItem.object_uuid)
}
#endif
void SceneItem::set_object_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  object_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.gs2mts.SceneItem.object_uuid)
}
void SceneItem::set_object_uuid(const char* value, size_t size) {
  
  object_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.gs2mts.SceneItem.object_uuid)
}
::std::string* SceneItem::mutable_object_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.gs2mts.SceneItem.object_uuid)
  return object_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SceneItem::release_object_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.gs2mts.SceneItem.object_uuid)
  
  return object_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SceneItem::set_allocated_object_uuid(::std::string* object_uuid) {
  if (object_uuid != NULL) {
    
  } else {
    
  }
  object_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), object_uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.gs2mts.SceneItem.object_uuid)
}

// uint32 item_id = 2;
void SceneItem::clear_item_id() {
  item_id_ = 0u;
}
::google::protobuf::uint32 SceneItem::item_id() const {
  // @@protoc_insertion_point(field_get:NetProto.gs2mts.SceneItem.item_id)
  return item_id_;
}
void SceneItem::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.gs2mts.SceneItem.item_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateNewRobotResp::kHeadFieldNumber;
const int CreateNewRobotResp::kPlayerIdFieldNumber;
const int CreateNewRobotResp::kRobotIdFieldNumber;
const int CreateNewRobotResp::kRobotPrototypeIdFieldNumber;
const int CreateNewRobotResp::kSceneIdFieldNumber;
const int CreateNewRobotResp::kItemListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateNewRobotResp::CreateNewRobotResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_robot_5f2_5fmts_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.gs2mts.CreateNewRobotResp)
}
CreateNewRobotResp::CreateNewRobotResp(const CreateNewRobotResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      item_list_(from.item_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  robot_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.robot_id().size() > 0) {
    robot_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.robot_id_);
  }
  scene_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scene_id().size() > 0) {
    scene_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scene_id_);
  }
  if (from.has_head()) {
    head_ = new ::NetProto::MsgHead(*from.head_);
  } else {
    head_ = NULL;
  }
  ::memcpy(&player_id_, &from.player_id_,
    reinterpret_cast<char*>(&robot_prototype_id_) -
    reinterpret_cast<char*>(&player_id_) + sizeof(robot_prototype_id_));
  // @@protoc_insertion_point(copy_constructor:NetProto.gs2mts.CreateNewRobotResp)
}

void CreateNewRobotResp::SharedCtor() {
  robot_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scene_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&head_, 0, reinterpret_cast<char*>(&robot_prototype_id_) -
    reinterpret_cast<char*>(&head_) + sizeof(robot_prototype_id_));
  _cached_size_ = 0;
}

CreateNewRobotResp::~CreateNewRobotResp() {
  // @@protoc_insertion_point(destructor:NetProto.gs2mts.CreateNewRobotResp)
  SharedDtor();
}

void CreateNewRobotResp::SharedDtor() {
  robot_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scene_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete head_;
  }
}

void CreateNewRobotResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateNewRobotResp::descriptor() {
  protobuf_robot_5f2_5fmts_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_robot_5f2_5fmts_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateNewRobotResp& CreateNewRobotResp::default_instance() {
  protobuf_robot_5f2_5fmts_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateNewRobotResp* CreateNewRobotResp::New(::google::protobuf::Arena* arena) const {
  CreateNewRobotResp* n = new CreateNewRobotResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateNewRobotResp::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.gs2mts.CreateNewRobotResp)
  item_list_.Clear();
  robot_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scene_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  ::memset(&player_id_, 0, reinterpret_cast<char*>(&robot_prototype_id_) -
    reinterpret_cast<char*>(&player_id_) + sizeof(robot_prototype_id_));
}

bool CreateNewRobotResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.gs2mts.CreateNewRobotResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string robot_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_robot_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->robot_id().data(), this->robot_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.gs2mts.CreateNewRobotResp.robot_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 robot_prototype_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &robot_prototype_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Scene_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scene_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scene_id().data(), this->scene_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.gs2mts.CreateNewRobotResp.Scene_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NetProto.gs2mts.SceneItem item_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.MsgHead head = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(802u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.gs2mts.CreateNewRobotResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.gs2mts.CreateNewRobotResp)
  return false;
#undef DO_
}

void CreateNewRobotResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.gs2mts.CreateNewRobotResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 player_id = 1;
  if (this->player_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_id(), output);
  }

  // string robot_id = 2;
  if (this->robot_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->robot_id().data(), this->robot_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.gs2mts.CreateNewRobotResp.robot_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->robot_id(), output);
  }

  // uint32 robot_prototype_id = 3;
  if (this->robot_prototype_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->robot_prototype_id(), output);
  }

  // string Scene_id = 4;
  if (this->scene_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scene_id().data(), this->scene_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.gs2mts.CreateNewRobotResp.Scene_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->scene_id(), output);
  }

  // repeated .NetProto.gs2mts.SceneItem item_list = 5;
  for (unsigned int i = 0, n = this->item_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->item_list(i), output);
  }

  // .NetProto.MsgHead head = 100;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, *this->head_, output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.gs2mts.CreateNewRobotResp)
}

::google::protobuf::uint8* CreateNewRobotResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.gs2mts.CreateNewRobotResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 player_id = 1;
  if (this->player_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_id(), target);
  }

  // string robot_id = 2;
  if (this->robot_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->robot_id().data(), this->robot_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.gs2mts.CreateNewRobotResp.robot_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->robot_id(), target);
  }

  // uint32 robot_prototype_id = 3;
  if (this->robot_prototype_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->robot_prototype_id(), target);
  }

  // string Scene_id = 4;
  if (this->scene_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scene_id().data(), this->scene_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.gs2mts.CreateNewRobotResp.Scene_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->scene_id(), target);
  }

  // repeated .NetProto.gs2mts.SceneItem item_list = 5;
  for (unsigned int i = 0, n = this->item_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->item_list(i), deterministic, target);
  }

  // .NetProto.MsgHead head = 100;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        100, *this->head_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.gs2mts.CreateNewRobotResp)
  return target;
}

size_t CreateNewRobotResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.gs2mts.CreateNewRobotResp)
  size_t total_size = 0;

  // repeated .NetProto.gs2mts.SceneItem item_list = 5;
  {
    unsigned int count = this->item_list_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item_list(i));
    }
  }

  // string robot_id = 2;
  if (this->robot_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->robot_id());
  }

  // string Scene_id = 4;
  if (this->scene_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scene_id());
  }

  // .NetProto.MsgHead head = 100;
  if (this->has_head()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->head_);
  }

  // uint64 player_id = 1;
  if (this->player_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_id());
  }

  // uint32 robot_prototype_id = 3;
  if (this->robot_prototype_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->robot_prototype_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateNewRobotResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.gs2mts.CreateNewRobotResp)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateNewRobotResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateNewRobotResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.gs2mts.CreateNewRobotResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.gs2mts.CreateNewRobotResp)
    MergeFrom(*source);
  }
}

void CreateNewRobotResp::MergeFrom(const CreateNewRobotResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.gs2mts.CreateNewRobotResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_list_.MergeFrom(from.item_list_);
  if (from.robot_id().size() > 0) {

    robot_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.robot_id_);
  }
  if (from.scene_id().size() > 0) {

    scene_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scene_id_);
  }
  if (from.has_head()) {
    mutable_head()->::NetProto::MsgHead::MergeFrom(from.head());
  }
  if (from.player_id() != 0) {
    set_player_id(from.player_id());
  }
  if (from.robot_prototype_id() != 0) {
    set_robot_prototype_id(from.robot_prototype_id());
  }
}

void CreateNewRobotResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.gs2mts.CreateNewRobotResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateNewRobotResp::CopyFrom(const CreateNewRobotResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.gs2mts.CreateNewRobotResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateNewRobotResp::IsInitialized() const {
  return true;
}

void CreateNewRobotResp::Swap(CreateNewRobotResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateNewRobotResp::InternalSwap(CreateNewRobotResp* other) {
  item_list_.InternalSwap(&other->item_list_);
  robot_id_.Swap(&other->robot_id_);
  scene_id_.Swap(&other->scene_id_);
  std::swap(head_, other->head_);
  std::swap(player_id_, other->player_id_);
  std::swap(robot_prototype_id_, other->robot_prototype_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateNewRobotResp::GetMetadata() const {
  protobuf_robot_5f2_5fmts_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_robot_5f2_5fmts_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateNewRobotResp

// .NetProto.MsgHead head = 100;
bool CreateNewRobotResp::has_head() const {
  return this != internal_default_instance() && head_ != NULL;
}
void CreateNewRobotResp::clear_head() {
  if (GetArenaNoVirtual() == NULL && head_ != NULL) delete head_;
  head_ = NULL;
}
const ::NetProto::MsgHead& CreateNewRobotResp::head() const {
  // @@protoc_insertion_point(field_get:NetProto.gs2mts.CreateNewRobotResp.head)
  return head_ != NULL ? *head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
::NetProto::MsgHead* CreateNewRobotResp::mutable_head() {
  
  if (head_ == NULL) {
    head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.gs2mts.CreateNewRobotResp.head)
  return head_;
}
::NetProto::MsgHead* CreateNewRobotResp::release_head() {
  // @@protoc_insertion_point(field_release:NetProto.gs2mts.CreateNewRobotResp.head)
  
  ::NetProto::MsgHead* temp = head_;
  head_ = NULL;
  return temp;
}
void CreateNewRobotResp::set_allocated_head(::NetProto::MsgHead* head) {
  delete head_;
  head_ = head;
  if (head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.gs2mts.CreateNewRobotResp.head)
}

// uint64 player_id = 1;
void CreateNewRobotResp::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CreateNewRobotResp::player_id() const {
  // @@protoc_insertion_point(field_get:NetProto.gs2mts.CreateNewRobotResp.player_id)
  return player_id_;
}
void CreateNewRobotResp::set_player_id(::google::protobuf::uint64 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.gs2mts.CreateNewRobotResp.player_id)
}

// string robot_id = 2;
void CreateNewRobotResp::clear_robot_id() {
  robot_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateNewRobotResp::robot_id() const {
  // @@protoc_insertion_point(field_get:NetProto.gs2mts.CreateNewRobotResp.robot_id)
  return robot_id_.GetNoArena();
}
void CreateNewRobotResp::set_robot_id(const ::std::string& value) {
  
  robot_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.gs2mts.CreateNewRobotResp.robot_id)
}
#if LANG_CXX11
void CreateNewRobotResp::set_robot_id(::std::string&& value) {
  
  robot_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.gs2mts.CreateNewRobotResp.robot_id)
}
#endif
void CreateNewRobotResp::set_robot_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  robot_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.gs2mts.CreateNewRobotResp.robot_id)
}
void CreateNewRobotResp::set_robot_id(const char* value, size_t size) {
  
  robot_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.gs2mts.CreateNewRobotResp.robot_id)
}
::std::string* CreateNewRobotResp::mutable_robot_id() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.gs2mts.CreateNewRobotResp.robot_id)
  return robot_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateNewRobotResp::release_robot_id() {
  // @@protoc_insertion_point(field_release:NetProto.gs2mts.CreateNewRobotResp.robot_id)
  
  return robot_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateNewRobotResp::set_allocated_robot_id(::std::string* robot_id) {
  if (robot_id != NULL) {
    
  } else {
    
  }
  robot_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), robot_id);
  // @@protoc_insertion_point(field_set_allocated:NetProto.gs2mts.CreateNewRobotResp.robot_id)
}

// uint32 robot_prototype_id = 3;
void CreateNewRobotResp::clear_robot_prototype_id() {
  robot_prototype_id_ = 0u;
}
::google::protobuf::uint32 CreateNewRobotResp::robot_prototype_id() const {
  // @@protoc_insertion_point(field_get:NetProto.gs2mts.CreateNewRobotResp.robot_prototype_id)
  return robot_prototype_id_;
}
void CreateNewRobotResp::set_robot_prototype_id(::google::protobuf::uint32 value) {
  
  robot_prototype_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.gs2mts.CreateNewRobotResp.robot_prototype_id)
}

// string Scene_id = 4;
void CreateNewRobotResp::clear_scene_id() {
  scene_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateNewRobotResp::scene_id() const {
  // @@protoc_insertion_point(field_get:NetProto.gs2mts.CreateNewRobotResp.Scene_id)
  return scene_id_.GetNoArena();
}
void CreateNewRobotResp::set_scene_id(const ::std::string& value) {
  
  scene_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.gs2mts.CreateNewRobotResp.Scene_id)
}
#if LANG_CXX11
void CreateNewRobotResp::set_scene_id(::std::string&& value) {
  
  scene_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.gs2mts.CreateNewRobotResp.Scene_id)
}
#endif
void CreateNewRobotResp::set_scene_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  scene_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.gs2mts.CreateNewRobotResp.Scene_id)
}
void CreateNewRobotResp::set_scene_id(const char* value, size_t size) {
  
  scene_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.gs2mts.CreateNewRobotResp.Scene_id)
}
::std::string* CreateNewRobotResp::mutable_scene_id() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.gs2mts.CreateNewRobotResp.Scene_id)
  return scene_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateNewRobotResp::release_scene_id() {
  // @@protoc_insertion_point(field_release:NetProto.gs2mts.CreateNewRobotResp.Scene_id)
  
  return scene_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateNewRobotResp::set_allocated_scene_id(::std::string* scene_id) {
  if (scene_id != NULL) {
    
  } else {
    
  }
  scene_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scene_id);
  // @@protoc_insertion_point(field_set_allocated:NetProto.gs2mts.CreateNewRobotResp.Scene_id)
}

// repeated .NetProto.gs2mts.SceneItem item_list = 5;
int CreateNewRobotResp::item_list_size() const {
  return item_list_.size();
}
void CreateNewRobotResp::clear_item_list() {
  item_list_.Clear();
}
const ::NetProto::gs2mts::SceneItem& CreateNewRobotResp::item_list(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.gs2mts.CreateNewRobotResp.item_list)
  return item_list_.Get(index);
}
::NetProto::gs2mts::SceneItem* CreateNewRobotResp::mutable_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.gs2mts.CreateNewRobotResp.item_list)
  return item_list_.Mutable(index);
}
::NetProto::gs2mts::SceneItem* CreateNewRobotResp::add_item_list() {
  // @@protoc_insertion_point(field_add:NetProto.gs2mts.CreateNewRobotResp.item_list)
  return item_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::NetProto::gs2mts::SceneItem >*
CreateNewRobotResp::mutable_item_list() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.gs2mts.CreateNewRobotResp.item_list)
  return &item_list_;
}
const ::google::protobuf::RepeatedPtrField< ::NetProto::gs2mts::SceneItem >&
CreateNewRobotResp::item_list() const {
  // @@protoc_insertion_point(field_list:NetProto.gs2mts.CreateNewRobotResp.item_list)
  return item_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateNewSceneRespResp::kHeadFieldNumber;
const int CreateNewSceneRespResp::kPlayerIdFieldNumber;
const int CreateNewSceneRespResp::kSceneIdFieldNumber;
const int CreateNewSceneRespResp::kItemListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateNewSceneRespResp::CreateNewSceneRespResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_robot_5f2_5fmts_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.gs2mts.CreateNewSceneRespResp)
}
CreateNewSceneRespResp::CreateNewSceneRespResp(const CreateNewSceneRespResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      item_list_(from.item_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  scene_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scene_id().size() > 0) {
    scene_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scene_id_);
  }
  if (from.has_head()) {
    head_ = new ::NetProto::MsgHead(*from.head_);
  } else {
    head_ = NULL;
  }
  player_id_ = from.player_id_;
  // @@protoc_insertion_point(copy_constructor:NetProto.gs2mts.CreateNewSceneRespResp)
}

void CreateNewSceneRespResp::SharedCtor() {
  scene_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&head_, 0, reinterpret_cast<char*>(&player_id_) -
    reinterpret_cast<char*>(&head_) + sizeof(player_id_));
  _cached_size_ = 0;
}

CreateNewSceneRespResp::~CreateNewSceneRespResp() {
  // @@protoc_insertion_point(destructor:NetProto.gs2mts.CreateNewSceneRespResp)
  SharedDtor();
}

void CreateNewSceneRespResp::SharedDtor() {
  scene_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete head_;
  }
}

void CreateNewSceneRespResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateNewSceneRespResp::descriptor() {
  protobuf_robot_5f2_5fmts_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_robot_5f2_5fmts_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateNewSceneRespResp& CreateNewSceneRespResp::default_instance() {
  protobuf_robot_5f2_5fmts_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateNewSceneRespResp* CreateNewSceneRespResp::New(::google::protobuf::Arena* arena) const {
  CreateNewSceneRespResp* n = new CreateNewSceneRespResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateNewSceneRespResp::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.gs2mts.CreateNewSceneRespResp)
  item_list_.Clear();
  scene_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
  player_id_ = GOOGLE_ULONGLONG(0);
}

bool CreateNewSceneRespResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.gs2mts.CreateNewSceneRespResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Scene_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scene_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scene_id().data(), this->scene_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.gs2mts.CreateNewSceneRespResp.Scene_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NetProto.gs2mts.SceneItem item_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.MsgHead head = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(802u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.gs2mts.CreateNewSceneRespResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.gs2mts.CreateNewSceneRespResp)
  return false;
#undef DO_
}

void CreateNewSceneRespResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.gs2mts.CreateNewSceneRespResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 player_id = 1;
  if (this->player_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_id(), output);
  }

  // string Scene_id = 2;
  if (this->scene_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scene_id().data(), this->scene_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.gs2mts.CreateNewSceneRespResp.Scene_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->scene_id(), output);
  }

  // repeated .NetProto.gs2mts.SceneItem item_list = 3;
  for (unsigned int i = 0, n = this->item_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->item_list(i), output);
  }

  // .NetProto.MsgHead head = 100;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, *this->head_, output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.gs2mts.CreateNewSceneRespResp)
}

::google::protobuf::uint8* CreateNewSceneRespResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.gs2mts.CreateNewSceneRespResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 player_id = 1;
  if (this->player_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_id(), target);
  }

  // string Scene_id = 2;
  if (this->scene_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scene_id().data(), this->scene_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.gs2mts.CreateNewSceneRespResp.Scene_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->scene_id(), target);
  }

  // repeated .NetProto.gs2mts.SceneItem item_list = 3;
  for (unsigned int i = 0, n = this->item_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->item_list(i), deterministic, target);
  }

  // .NetProto.MsgHead head = 100;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        100, *this->head_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.gs2mts.CreateNewSceneRespResp)
  return target;
}

size_t CreateNewSceneRespResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.gs2mts.CreateNewSceneRespResp)
  size_t total_size = 0;

  // repeated .NetProto.gs2mts.SceneItem item_list = 3;
  {
    unsigned int count = this->item_list_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item_list(i));
    }
  }

  // string Scene_id = 2;
  if (this->scene_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scene_id());
  }

  // .NetProto.MsgHead head = 100;
  if (this->has_head()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->head_);
  }

  // uint64 player_id = 1;
  if (this->player_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateNewSceneRespResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.gs2mts.CreateNewSceneRespResp)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateNewSceneRespResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateNewSceneRespResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.gs2mts.CreateNewSceneRespResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.gs2mts.CreateNewSceneRespResp)
    MergeFrom(*source);
  }
}

void CreateNewSceneRespResp::MergeFrom(const CreateNewSceneRespResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.gs2mts.CreateNewSceneRespResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_list_.MergeFrom(from.item_list_);
  if (from.scene_id().size() > 0) {

    scene_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scene_id_);
  }
  if (from.has_head()) {
    mutable_head()->::NetProto::MsgHead::MergeFrom(from.head());
  }
  if (from.player_id() != 0) {
    set_player_id(from.player_id());
  }
}

void CreateNewSceneRespResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.gs2mts.CreateNewSceneRespResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateNewSceneRespResp::CopyFrom(const CreateNewSceneRespResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.gs2mts.CreateNewSceneRespResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateNewSceneRespResp::IsInitialized() const {
  return true;
}

void CreateNewSceneRespResp::Swap(CreateNewSceneRespResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateNewSceneRespResp::InternalSwap(CreateNewSceneRespResp* other) {
  item_list_.InternalSwap(&other->item_list_);
  scene_id_.Swap(&other->scene_id_);
  std::swap(head_, other->head_);
  std::swap(player_id_, other->player_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateNewSceneRespResp::GetMetadata() const {
  protobuf_robot_5f2_5fmts_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_robot_5f2_5fmts_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateNewSceneRespResp

// .NetProto.MsgHead head = 100;
bool CreateNewSceneRespResp::has_head() const {
  return this != internal_default_instance() && head_ != NULL;
}
void CreateNewSceneRespResp::clear_head() {
  if (GetArenaNoVirtual() == NULL && head_ != NULL) delete head_;
  head_ = NULL;
}
const ::NetProto::MsgHead& CreateNewSceneRespResp::head() const {
  // @@protoc_insertion_point(field_get:NetProto.gs2mts.CreateNewSceneRespResp.head)
  return head_ != NULL ? *head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
::NetProto::MsgHead* CreateNewSceneRespResp::mutable_head() {
  
  if (head_ == NULL) {
    head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.gs2mts.CreateNewSceneRespResp.head)
  return head_;
}
::NetProto::MsgHead* CreateNewSceneRespResp::release_head() {
  // @@protoc_insertion_point(field_release:NetProto.gs2mts.CreateNewSceneRespResp.head)
  
  ::NetProto::MsgHead* temp = head_;
  head_ = NULL;
  return temp;
}
void CreateNewSceneRespResp::set_allocated_head(::NetProto::MsgHead* head) {
  delete head_;
  head_ = head;
  if (head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.gs2mts.CreateNewSceneRespResp.head)
}

// uint64 player_id = 1;
void CreateNewSceneRespResp::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CreateNewSceneRespResp::player_id() const {
  // @@protoc_insertion_point(field_get:NetProto.gs2mts.CreateNewSceneRespResp.player_id)
  return player_id_;
}
void CreateNewSceneRespResp::set_player_id(::google::protobuf::uint64 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.gs2mts.CreateNewSceneRespResp.player_id)
}

// string Scene_id = 2;
void CreateNewSceneRespResp::clear_scene_id() {
  scene_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateNewSceneRespResp::scene_id() const {
  // @@protoc_insertion_point(field_get:NetProto.gs2mts.CreateNewSceneRespResp.Scene_id)
  return scene_id_.GetNoArena();
}
void CreateNewSceneRespResp::set_scene_id(const ::std::string& value) {
  
  scene_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.gs2mts.CreateNewSceneRespResp.Scene_id)
}
#if LANG_CXX11
void CreateNewSceneRespResp::set_scene_id(::std::string&& value) {
  
  scene_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.gs2mts.CreateNewSceneRespResp.Scene_id)
}
#endif
void CreateNewSceneRespResp::set_scene_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  scene_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.gs2mts.CreateNewSceneRespResp.Scene_id)
}
void CreateNewSceneRespResp::set_scene_id(const char* value, size_t size) {
  
  scene_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.gs2mts.CreateNewSceneRespResp.Scene_id)
}
::std::string* CreateNewSceneRespResp::mutable_scene_id() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.gs2mts.CreateNewSceneRespResp.Scene_id)
  return scene_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateNewSceneRespResp::release_scene_id() {
  // @@protoc_insertion_point(field_release:NetProto.gs2mts.CreateNewSceneRespResp.Scene_id)
  
  return scene_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateNewSceneRespResp::set_allocated_scene_id(::std::string* scene_id) {
  if (scene_id != NULL) {
    
  } else {
    
  }
  scene_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scene_id);
  // @@protoc_insertion_point(field_set_allocated:NetProto.gs2mts.CreateNewSceneRespResp.Scene_id)
}

// repeated .NetProto.gs2mts.SceneItem item_list = 3;
int CreateNewSceneRespResp::item_list_size() const {
  return item_list_.size();
}
void CreateNewSceneRespResp::clear_item_list() {
  item_list_.Clear();
}
const ::NetProto::gs2mts::SceneItem& CreateNewSceneRespResp::item_list(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.gs2mts.CreateNewSceneRespResp.item_list)
  return item_list_.Get(index);
}
::NetProto::gs2mts::SceneItem* CreateNewSceneRespResp::mutable_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.gs2mts.CreateNewSceneRespResp.item_list)
  return item_list_.Mutable(index);
}
::NetProto::gs2mts::SceneItem* CreateNewSceneRespResp::add_item_list() {
  // @@protoc_insertion_point(field_add:NetProto.gs2mts.CreateNewSceneRespResp.item_list)
  return item_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::NetProto::gs2mts::SceneItem >*
CreateNewSceneRespResp::mutable_item_list() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.gs2mts.CreateNewSceneRespResp.item_list)
  return &item_list_;
}
const ::google::protobuf::RepeatedPtrField< ::NetProto::gs2mts::SceneItem >&
CreateNewSceneRespResp::item_list() const {
  // @@protoc_insertion_point(field_list:NetProto.gs2mts.CreateNewSceneRespResp.item_list)
  return item_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PwTimeSync::kPwTsFieldNumber;
const int PwTimeSync::kMultipleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PwTimeSync::PwTimeSync()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_robot_5f2_5fmts_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.gs2mts.PwTimeSync)
}
PwTimeSync::PwTimeSync(const PwTimeSync& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pw_ts_, &from.pw_ts_,
    reinterpret_cast<char*>(&multiple_) -
    reinterpret_cast<char*>(&pw_ts_) + sizeof(multiple_));
  // @@protoc_insertion_point(copy_constructor:NetProto.gs2mts.PwTimeSync)
}

void PwTimeSync::SharedCtor() {
  ::memset(&pw_ts_, 0, reinterpret_cast<char*>(&multiple_) -
    reinterpret_cast<char*>(&pw_ts_) + sizeof(multiple_));
  _cached_size_ = 0;
}

PwTimeSync::~PwTimeSync() {
  // @@protoc_insertion_point(destructor:NetProto.gs2mts.PwTimeSync)
  SharedDtor();
}

void PwTimeSync::SharedDtor() {
}

void PwTimeSync::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PwTimeSync::descriptor() {
  protobuf_robot_5f2_5fmts_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_robot_5f2_5fmts_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PwTimeSync& PwTimeSync::default_instance() {
  protobuf_robot_5f2_5fmts_2eproto::InitDefaults();
  return *internal_default_instance();
}

PwTimeSync* PwTimeSync::New(::google::protobuf::Arena* arena) const {
  PwTimeSync* n = new PwTimeSync;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PwTimeSync::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.gs2mts.PwTimeSync)
  ::memset(&pw_ts_, 0, reinterpret_cast<char*>(&multiple_) -
    reinterpret_cast<char*>(&pw_ts_) + sizeof(multiple_));
}

bool PwTimeSync::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.gs2mts.PwTimeSync)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 pw_ts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pw_ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 multiple = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &multiple_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.gs2mts.PwTimeSync)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.gs2mts.PwTimeSync)
  return false;
#undef DO_
}

void PwTimeSync::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.gs2mts.PwTimeSync)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 pw_ts = 1;
  if (this->pw_ts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->pw_ts(), output);
  }

  // uint32 multiple = 2;
  if (this->multiple() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->multiple(), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.gs2mts.PwTimeSync)
}

::google::protobuf::uint8* PwTimeSync::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.gs2mts.PwTimeSync)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 pw_ts = 1;
  if (this->pw_ts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->pw_ts(), target);
  }

  // uint32 multiple = 2;
  if (this->multiple() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->multiple(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.gs2mts.PwTimeSync)
  return target;
}

size_t PwTimeSync::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.gs2mts.PwTimeSync)
  size_t total_size = 0;

  // uint64 pw_ts = 1;
  if (this->pw_ts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->pw_ts());
  }

  // uint32 multiple = 2;
  if (this->multiple() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->multiple());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PwTimeSync::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.gs2mts.PwTimeSync)
  GOOGLE_DCHECK_NE(&from, this);
  const PwTimeSync* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PwTimeSync>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.gs2mts.PwTimeSync)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.gs2mts.PwTimeSync)
    MergeFrom(*source);
  }
}

void PwTimeSync::MergeFrom(const PwTimeSync& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.gs2mts.PwTimeSync)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pw_ts() != 0) {
    set_pw_ts(from.pw_ts());
  }
  if (from.multiple() != 0) {
    set_multiple(from.multiple());
  }
}

void PwTimeSync::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.gs2mts.PwTimeSync)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PwTimeSync::CopyFrom(const PwTimeSync& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.gs2mts.PwTimeSync)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PwTimeSync::IsInitialized() const {
  return true;
}

void PwTimeSync::Swap(PwTimeSync* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PwTimeSync::InternalSwap(PwTimeSync* other) {
  std::swap(pw_ts_, other->pw_ts_);
  std::swap(multiple_, other->multiple_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PwTimeSync::GetMetadata() const {
  protobuf_robot_5f2_5fmts_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_robot_5f2_5fmts_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PwTimeSync

// uint64 pw_ts = 1;
void PwTimeSync::clear_pw_ts() {
  pw_ts_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PwTimeSync::pw_ts() const {
  // @@protoc_insertion_point(field_get:NetProto.gs2mts.PwTimeSync.pw_ts)
  return pw_ts_;
}
void PwTimeSync::set_pw_ts(::google::protobuf::uint64 value) {
  
  pw_ts_ = value;
  // @@protoc_insertion_point(field_set:NetProto.gs2mts.PwTimeSync.pw_ts)
}

// uint32 multiple = 2;
void PwTimeSync::clear_multiple() {
  multiple_ = 0u;
}
::google::protobuf::uint32 PwTimeSync::multiple() const {
  // @@protoc_insertion_point(field_get:NetProto.gs2mts.PwTimeSync.multiple)
  return multiple_;
}
void PwTimeSync::set_multiple(::google::protobuf::uint32 value) {
  
  multiple_ = value;
  // @@protoc_insertion_point(field_set:NetProto.gs2mts.PwTimeSync.multiple)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace gs2mts
}  // namespace NetProto

// @@protoc_insertion_point(global_scope)
