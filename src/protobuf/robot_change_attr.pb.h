// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: robot_change_attr.proto

#ifndef PROTOBUF_robot_5fchange_5fattr_2eproto__INCLUDED
#define PROTOBUF_robot_5fchange_5fattr_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "msg_head.pb.h"
// @@protoc_insertion_point(includes)
namespace NetProto {
class MsgHead;
class MsgHeadDefaultTypeInternal;
extern MsgHeadDefaultTypeInternal _MsgHead_default_instance_;
class NotifyRobotAttrChanged;
class NotifyRobotAttrChangedDefaultTypeInternal;
extern NotifyRobotAttrChangedDefaultTypeInternal _NotifyRobotAttrChanged_default_instance_;
class RobotAttr;
class RobotAttrDefaultTypeInternal;
extern RobotAttrDefaultTypeInternal _RobotAttr_default_instance_;
class RobotAttrEvent;
class RobotAttrEventDefaultTypeInternal;
extern RobotAttrEventDefaultTypeInternal _RobotAttrEvent_default_instance_;
}  // namespace NetProto

namespace NetProto {

namespace protobuf_robot_5fchange_5fattr_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_robot_5fchange_5fattr_2eproto

enum RobotAttrId {
  RobotAttr_invalid = 0,
  RobotAttr_age = 1,
  RobotAttr_gender = 2,
  RobotAttr_intellectual = 3,
  RobotAttr_beautiful = 4,
  RobotAttr_lovely = 5,
  RobotAttr_skinState = 6,
  RobotAttr_longPhy = 7,
  RobotAttr_shortPhy = 8,
  RobotAttr_energy = 9,
  RobotAttr_thirsty = 10,
  RobotAttr_hunger = 11,
  RobotAttr_clean = 12,
  RobotAttr_sufaceTemperature = 13,
  RobotAttr_money = 14,
  RobotAttr_sleep = 15,
  RobotAttrId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RobotAttrId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RobotAttrId_IsValid(int value);
const RobotAttrId RobotAttrId_MIN = RobotAttr_invalid;
const RobotAttrId RobotAttrId_MAX = RobotAttr_sleep;
const int RobotAttrId_ARRAYSIZE = RobotAttrId_MAX + 1;

const ::google::protobuf::EnumDescriptor* RobotAttrId_descriptor();
inline const ::std::string& RobotAttrId_Name(RobotAttrId value) {
  return ::google::protobuf::internal::NameOfEnum(
    RobotAttrId_descriptor(), value);
}
inline bool RobotAttrId_Parse(
    const ::std::string& name, RobotAttrId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RobotAttrId>(
    RobotAttrId_descriptor(), name, value);
}
enum RobotAttrEventType {
  HUNGRY = 0,
  THIRSTY = 1,
  ENERGY = 2,
  HOT = 3,
  COOL = 4,
  RobotAttrEventType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RobotAttrEventType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RobotAttrEventType_IsValid(int value);
const RobotAttrEventType RobotAttrEventType_MIN = HUNGRY;
const RobotAttrEventType RobotAttrEventType_MAX = COOL;
const int RobotAttrEventType_ARRAYSIZE = RobotAttrEventType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RobotAttrEventType_descriptor();
inline const ::std::string& RobotAttrEventType_Name(RobotAttrEventType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RobotAttrEventType_descriptor(), value);
}
inline bool RobotAttrEventType_Parse(
    const ::std::string& name, RobotAttrEventType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RobotAttrEventType>(
    RobotAttrEventType_descriptor(), name, value);
}
// ===================================================================

class RobotAttr : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.RobotAttr) */ {
 public:
  RobotAttr();
  virtual ~RobotAttr();

  RobotAttr(const RobotAttr& from);

  inline RobotAttr& operator=(const RobotAttr& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotAttr& default_instance();

  static inline const RobotAttr* internal_default_instance() {
    return reinterpret_cast<const RobotAttr*>(
               &_RobotAttr_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RobotAttr* other);

  // implements Message ----------------------------------------------

  inline RobotAttr* New() const PROTOBUF_FINAL { return New(NULL); }

  RobotAttr* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RobotAttr& from);
  void MergeFrom(const RobotAttr& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RobotAttr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string attr_name = 2;
  void clear_attr_name();
  static const int kAttrNameFieldNumber = 2;
  const ::std::string& attr_name() const;
  void set_attr_name(const ::std::string& value);
  #if LANG_CXX11
  void set_attr_name(::std::string&& value);
  #endif
  void set_attr_name(const char* value);
  void set_attr_name(const char* value, size_t size);
  ::std::string* mutable_attr_name();
  ::std::string* release_attr_name();
  void set_allocated_attr_name(::std::string* attr_name);

  // uint32 attr_id = 3;
  void clear_attr_id();
  static const int kAttrIdFieldNumber = 3;
  ::google::protobuf::uint32 attr_id() const;
  void set_attr_id(::google::protobuf::uint32 value);

  // uint32 attr_value = 4;
  void clear_attr_value();
  static const int kAttrValueFieldNumber = 4;
  ::google::protobuf::uint32 attr_value() const;
  void set_attr_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetProto.RobotAttr)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr attr_name_;
  ::google::protobuf::uint32 attr_id_;
  ::google::protobuf::uint32 attr_value_;
  mutable int _cached_size_;
  friend struct protobuf_robot_5fchange_5fattr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NotifyRobotAttrChanged : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.NotifyRobotAttrChanged) */ {
 public:
  NotifyRobotAttrChanged();
  virtual ~NotifyRobotAttrChanged();

  NotifyRobotAttrChanged(const NotifyRobotAttrChanged& from);

  inline NotifyRobotAttrChanged& operator=(const NotifyRobotAttrChanged& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyRobotAttrChanged& default_instance();

  static inline const NotifyRobotAttrChanged* internal_default_instance() {
    return reinterpret_cast<const NotifyRobotAttrChanged*>(
               &_NotifyRobotAttrChanged_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(NotifyRobotAttrChanged* other);

  // implements Message ----------------------------------------------

  inline NotifyRobotAttrChanged* New() const PROTOBUF_FINAL { return New(NULL); }

  NotifyRobotAttrChanged* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NotifyRobotAttrChanged& from);
  void MergeFrom(const NotifyRobotAttrChanged& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NotifyRobotAttrChanged* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NetProto.RobotAttr attr = 2;
  int attr_size() const;
  void clear_attr();
  static const int kAttrFieldNumber = 2;
  const ::NetProto::RobotAttr& attr(int index) const;
  ::NetProto::RobotAttr* mutable_attr(int index);
  ::NetProto::RobotAttr* add_attr();
  ::google::protobuf::RepeatedPtrField< ::NetProto::RobotAttr >*
      mutable_attr();
  const ::google::protobuf::RepeatedPtrField< ::NetProto::RobotAttr >&
      attr() const;

  // .NetProto.MsgHead head = 1;
  bool has_head() const;
  void clear_head();
  static const int kHeadFieldNumber = 1;
  const ::NetProto::MsgHead& head() const;
  ::NetProto::MsgHead* mutable_head();
  ::NetProto::MsgHead* release_head();
  void set_allocated_head(::NetProto::MsgHead* head);

  // @@protoc_insertion_point(class_scope:NetProto.NotifyRobotAttrChanged)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetProto::RobotAttr > attr_;
  ::NetProto::MsgHead* head_;
  mutable int _cached_size_;
  friend struct protobuf_robot_5fchange_5fattr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RobotAttrEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetProto.RobotAttrEvent) */ {
 public:
  RobotAttrEvent();
  virtual ~RobotAttrEvent();

  RobotAttrEvent(const RobotAttrEvent& from);

  inline RobotAttrEvent& operator=(const RobotAttrEvent& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotAttrEvent& default_instance();

  static inline const RobotAttrEvent* internal_default_instance() {
    return reinterpret_cast<const RobotAttrEvent*>(
               &_RobotAttrEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(RobotAttrEvent* other);

  // implements Message ----------------------------------------------

  inline RobotAttrEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  RobotAttrEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RobotAttrEvent& from);
  void MergeFrom(const RobotAttrEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RobotAttrEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string robot_uuid = 1;
  void clear_robot_uuid();
  static const int kRobotUuidFieldNumber = 1;
  const ::std::string& robot_uuid() const;
  void set_robot_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_robot_uuid(::std::string&& value);
  #endif
  void set_robot_uuid(const char* value);
  void set_robot_uuid(const char* value, size_t size);
  ::std::string* mutable_robot_uuid();
  ::std::string* release_robot_uuid();
  void set_allocated_robot_uuid(::std::string* robot_uuid);

  // .NetProto.RobotAttrEvent event = 2;
  bool has_event() const;
  void clear_event();
  static const int kEventFieldNumber = 2;
  const ::NetProto::RobotAttrEvent& event() const;
  ::NetProto::RobotAttrEvent* mutable_event();
  ::NetProto::RobotAttrEvent* release_event();
  void set_allocated_event(::NetProto::RobotAttrEvent* event);

  // @@protoc_insertion_point(class_scope:NetProto.RobotAttrEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr robot_uuid_;
  ::NetProto::RobotAttrEvent* event_;
  mutable int _cached_size_;
  friend struct protobuf_robot_5fchange_5fattr_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RobotAttr

// string attr_name = 2;
inline void RobotAttr::clear_attr_name() {
  attr_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RobotAttr::attr_name() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotAttr.attr_name)
  return attr_name_.GetNoArena();
}
inline void RobotAttr::set_attr_name(const ::std::string& value) {
  
  attr_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.RobotAttr.attr_name)
}
#if LANG_CXX11
inline void RobotAttr::set_attr_name(::std::string&& value) {
  
  attr_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.RobotAttr.attr_name)
}
#endif
inline void RobotAttr::set_attr_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attr_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.RobotAttr.attr_name)
}
inline void RobotAttr::set_attr_name(const char* value, size_t size) {
  
  attr_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.RobotAttr.attr_name)
}
inline ::std::string* RobotAttr::mutable_attr_name() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.RobotAttr.attr_name)
  return attr_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RobotAttr::release_attr_name() {
  // @@protoc_insertion_point(field_release:NetProto.RobotAttr.attr_name)
  
  return attr_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RobotAttr::set_allocated_attr_name(::std::string* attr_name) {
  if (attr_name != NULL) {
    
  } else {
    
  }
  attr_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attr_name);
  // @@protoc_insertion_point(field_set_allocated:NetProto.RobotAttr.attr_name)
}

// uint32 attr_id = 3;
inline void RobotAttr::clear_attr_id() {
  attr_id_ = 0u;
}
inline ::google::protobuf::uint32 RobotAttr::attr_id() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotAttr.attr_id)
  return attr_id_;
}
inline void RobotAttr::set_attr_id(::google::protobuf::uint32 value) {
  
  attr_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.RobotAttr.attr_id)
}

// uint32 attr_value = 4;
inline void RobotAttr::clear_attr_value() {
  attr_value_ = 0u;
}
inline ::google::protobuf::uint32 RobotAttr::attr_value() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotAttr.attr_value)
  return attr_value_;
}
inline void RobotAttr::set_attr_value(::google::protobuf::uint32 value) {
  
  attr_value_ = value;
  // @@protoc_insertion_point(field_set:NetProto.RobotAttr.attr_value)
}

// -------------------------------------------------------------------

// NotifyRobotAttrChanged

// .NetProto.MsgHead head = 1;
inline bool NotifyRobotAttrChanged::has_head() const {
  return this != internal_default_instance() && head_ != NULL;
}
inline void NotifyRobotAttrChanged::clear_head() {
  if (GetArenaNoVirtual() == NULL && head_ != NULL) delete head_;
  head_ = NULL;
}
inline const ::NetProto::MsgHead& NotifyRobotAttrChanged::head() const {
  // @@protoc_insertion_point(field_get:NetProto.NotifyRobotAttrChanged.head)
  return head_ != NULL ? *head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
inline ::NetProto::MsgHead* NotifyRobotAttrChanged::mutable_head() {
  
  if (head_ == NULL) {
    head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.NotifyRobotAttrChanged.head)
  return head_;
}
inline ::NetProto::MsgHead* NotifyRobotAttrChanged::release_head() {
  // @@protoc_insertion_point(field_release:NetProto.NotifyRobotAttrChanged.head)
  
  ::NetProto::MsgHead* temp = head_;
  head_ = NULL;
  return temp;
}
inline void NotifyRobotAttrChanged::set_allocated_head(::NetProto::MsgHead* head) {
  delete head_;
  head_ = head;
  if (head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.NotifyRobotAttrChanged.head)
}

// repeated .NetProto.RobotAttr attr = 2;
inline int NotifyRobotAttrChanged::attr_size() const {
  return attr_.size();
}
inline void NotifyRobotAttrChanged::clear_attr() {
  attr_.Clear();
}
inline const ::NetProto::RobotAttr& NotifyRobotAttrChanged::attr(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.NotifyRobotAttrChanged.attr)
  return attr_.Get(index);
}
inline ::NetProto::RobotAttr* NotifyRobotAttrChanged::mutable_attr(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.NotifyRobotAttrChanged.attr)
  return attr_.Mutable(index);
}
inline ::NetProto::RobotAttr* NotifyRobotAttrChanged::add_attr() {
  // @@protoc_insertion_point(field_add:NetProto.NotifyRobotAttrChanged.attr)
  return attr_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetProto::RobotAttr >*
NotifyRobotAttrChanged::mutable_attr() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.NotifyRobotAttrChanged.attr)
  return &attr_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetProto::RobotAttr >&
NotifyRobotAttrChanged::attr() const {
  // @@protoc_insertion_point(field_list:NetProto.NotifyRobotAttrChanged.attr)
  return attr_;
}

// -------------------------------------------------------------------

// RobotAttrEvent

// string robot_uuid = 1;
inline void RobotAttrEvent::clear_robot_uuid() {
  robot_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RobotAttrEvent::robot_uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotAttrEvent.robot_uuid)
  return robot_uuid_.GetNoArena();
}
inline void RobotAttrEvent::set_robot_uuid(const ::std::string& value) {
  
  robot_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.RobotAttrEvent.robot_uuid)
}
#if LANG_CXX11
inline void RobotAttrEvent::set_robot_uuid(::std::string&& value) {
  
  robot_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.RobotAttrEvent.robot_uuid)
}
#endif
inline void RobotAttrEvent::set_robot_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  robot_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.RobotAttrEvent.robot_uuid)
}
inline void RobotAttrEvent::set_robot_uuid(const char* value, size_t size) {
  
  robot_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.RobotAttrEvent.robot_uuid)
}
inline ::std::string* RobotAttrEvent::mutable_robot_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.RobotAttrEvent.robot_uuid)
  return robot_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RobotAttrEvent::release_robot_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.RobotAttrEvent.robot_uuid)
  
  return robot_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RobotAttrEvent::set_allocated_robot_uuid(::std::string* robot_uuid) {
  if (robot_uuid != NULL) {
    
  } else {
    
  }
  robot_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), robot_uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.RobotAttrEvent.robot_uuid)
}

// .NetProto.RobotAttrEvent event = 2;
inline bool RobotAttrEvent::has_event() const {
  return this != internal_default_instance() && event_ != NULL;
}
inline void RobotAttrEvent::clear_event() {
  if (GetArenaNoVirtual() == NULL && event_ != NULL) delete event_;
  event_ = NULL;
}
inline const ::NetProto::RobotAttrEvent& RobotAttrEvent::event() const {
  // @@protoc_insertion_point(field_get:NetProto.RobotAttrEvent.event)
  return event_ != NULL ? *event_
                         : *::NetProto::RobotAttrEvent::internal_default_instance();
}
inline ::NetProto::RobotAttrEvent* RobotAttrEvent::mutable_event() {
  
  if (event_ == NULL) {
    event_ = new ::NetProto::RobotAttrEvent;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.RobotAttrEvent.event)
  return event_;
}
inline ::NetProto::RobotAttrEvent* RobotAttrEvent::release_event() {
  // @@protoc_insertion_point(field_release:NetProto.RobotAttrEvent.event)
  
  ::NetProto::RobotAttrEvent* temp = event_;
  event_ = NULL;
  return temp;
}
inline void RobotAttrEvent::set_allocated_event(::NetProto::RobotAttrEvent* event) {
  delete event_;
  event_ = event;
  if (event) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.RobotAttrEvent.event)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace NetProto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::NetProto::RobotAttrId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetProto::RobotAttrId>() {
  return ::NetProto::RobotAttrId_descriptor();
}
template <> struct is_proto_enum< ::NetProto::RobotAttrEventType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetProto::RobotAttrEventType>() {
  return ::NetProto::RobotAttrEventType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_robot_5fchange_5fattr_2eproto__INCLUDED
