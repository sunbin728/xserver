// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: world_event.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "world_event.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace NetProto {
class ObjTransferDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ObjTransfer> {
} _ObjTransfer_default_instance_;
class EmsArriveDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EmsArrive> {
} _EmsArrive_default_instance_;
class DoorBellRingDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DoorBellRing> {
} _DoorBellRing_default_instance_;
class S2CWorldEventDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<S2CWorldEvent> {
} _S2CWorldEvent_default_instance_;
class C2SWorldEventResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<C2SWorldEventResponse> {
} _C2SWorldEventResponse_default_instance_;

namespace protobuf_world_5fevent_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjTransfer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjTransfer, obj_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjTransfer, obj_ref_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjTransfer, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmsArrive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmsArrive, express_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoorBellRing, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoorBellRing, door_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CWorldEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CWorldEvent, msg_head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CWorldEvent, event_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CWorldEvent, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CWorldEvent, params_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SWorldEventResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SWorldEventResponse, msg_head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SWorldEventResponse, event_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SWorldEventResponse, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SWorldEventResponse, params_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(ObjTransfer)},
  { 8, -1, sizeof(EmsArrive)},
  { 14, -1, sizeof(DoorBellRing)},
  { 20, -1, sizeof(S2CWorldEvent)},
  { 29, -1, sizeof(C2SWorldEventResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ObjTransfer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EmsArrive_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DoorBellRing_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_S2CWorldEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_C2SWorldEventResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "world_event.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

}  // namespace

void TableStruct::Shutdown() {
  _ObjTransfer_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _EmsArrive_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _DoorBellRing_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _S2CWorldEvent_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _C2SWorldEventResponse_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::NetProto::protobuf_msg_5fhead_2eproto::InitDefaults();
  ::NetProto::protobuf_dynamic_5ftype_5fdef_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fany_2eproto::InitDefaults();
  _ObjTransfer_default_instance_.DefaultConstruct();
  _EmsArrive_default_instance_.DefaultConstruct();
  _DoorBellRing_default_instance_.DefaultConstruct();
  _S2CWorldEvent_default_instance_.DefaultConstruct();
  _C2SWorldEventResponse_default_instance_.DefaultConstruct();
  _EmsArrive_default_instance_.get_mutable()->express_ = const_cast< ::NetProto::StringData*>(
      ::NetProto::StringData::internal_default_instance());
  _DoorBellRing_default_instance_.get_mutable()->door_ = const_cast< ::NetProto::StringData*>(
      ::NetProto::StringData::internal_default_instance());
  _S2CWorldEvent_default_instance_.get_mutable()->msg_head_ = const_cast< ::NetProto::MsgHead*>(
      ::NetProto::MsgHead::internal_default_instance());
  _C2SWorldEventResponse_default_instance_.get_mutable()->msg_head_ = const_cast< ::NetProto::MsgHead*>(
      ::NetProto::MsgHead::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\021world_event.proto\022\010NetProto\032\016msg_head."
      "proto\032\026dynamic_type_def.proto\032\031google/pr"
      "otobuf/any.proto\"\256\001\n\013ObjTransfer\022\020\n\010obj_"
      "uuid\030\001 \001(\t\022\024\n\014obj_ref_uuid\030\002 \001(\t\0220\n\004type"
      "\030\003 \001(\0162\".NetProto.ObjTransfer.RelationTy"
      "pe\"E\n\014RelationType\022\010\n\004None\020\000\022\007\n\002On\020\350\007\022\t\n"
      "\004Down\020\320\017\022\n\n\005Aside\020\270\027\022\013\n\006Inside\020\240\037\"2\n\tEms"
      "Arrive\022%\n\007express\030\001 \001(\0132\024.NetProto.Strin"
      "gData\"2\n\014DoorBellRing\022\"\n\004door\030\001 \001(\0132\024.Ne"
      "tProto.StringData\"\224\001\n\rS2CWorldEvent\022#\n\010m"
      "sg_head\030\001 \001(\0132\021.NetProto.MsgHead\022\020\n\010even"
      "t_id\030\002 \001(\r\022&\n\004type\030\003 \001(\0162\030.NetProto.Worl"
      "dEventType\022$\n\006params\030\004 \003(\0132\024.google.prot"
      "obuf.Any\"\234\001\n\025C2SWorldEventResponse\022#\n\010ms"
      "g_head\030\001 \001(\0132\021.NetProto.MsgHead\022\020\n\010event"
      "_id\030\002 \001(\r\022&\n\004type\030\003 \001(\0162\030.NetProto.World"
      "EventType\022$\n\006params\030\004 \003(\0132\024.google.proto"
      "buf.Any*F\n\016WorldEventType\022\022\n\016DOOR_BELL_R"
      "ING\020\000\022\016\n\nEMS_ARRIVE\020\001\022\020\n\014OBJ_TRANSFER\020\002b"
      "\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 767);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "world_event.proto", &protobuf_RegisterTypes);
  ::NetProto::protobuf_msg_5fhead_2eproto::AddDescriptors();
  ::NetProto::protobuf_dynamic_5ftype_5fdef_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_world_5fevent_2eproto

const ::google::protobuf::EnumDescriptor* ObjTransfer_RelationType_descriptor() {
  protobuf_world_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_world_5fevent_2eproto::file_level_enum_descriptors[0];
}
bool ObjTransfer_RelationType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1000:
    case 2000:
    case 3000:
    case 4000:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ObjTransfer_RelationType ObjTransfer::None;
const ObjTransfer_RelationType ObjTransfer::On;
const ObjTransfer_RelationType ObjTransfer::Down;
const ObjTransfer_RelationType ObjTransfer::Aside;
const ObjTransfer_RelationType ObjTransfer::Inside;
const ObjTransfer_RelationType ObjTransfer::RelationType_MIN;
const ObjTransfer_RelationType ObjTransfer::RelationType_MAX;
const int ObjTransfer::RelationType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* WorldEventType_descriptor() {
  protobuf_world_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_world_5fevent_2eproto::file_level_enum_descriptors[1];
}
bool WorldEventType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjTransfer::kObjUuidFieldNumber;
const int ObjTransfer::kObjRefUuidFieldNumber;
const int ObjTransfer::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjTransfer::ObjTransfer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_world_5fevent_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.ObjTransfer)
}
ObjTransfer::ObjTransfer(const ObjTransfer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  obj_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.obj_uuid().size() > 0) {
    obj_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_uuid_);
  }
  obj_ref_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.obj_ref_uuid().size() > 0) {
    obj_ref_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_ref_uuid_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:NetProto.ObjTransfer)
}

void ObjTransfer::SharedCtor() {
  obj_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  obj_ref_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

ObjTransfer::~ObjTransfer() {
  // @@protoc_insertion_point(destructor:NetProto.ObjTransfer)
  SharedDtor();
}

void ObjTransfer::SharedDtor() {
  obj_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  obj_ref_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ObjTransfer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjTransfer::descriptor() {
  protobuf_world_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_world_5fevent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjTransfer& ObjTransfer::default_instance() {
  protobuf_world_5fevent_2eproto::InitDefaults();
  return *internal_default_instance();
}

ObjTransfer* ObjTransfer::New(::google::protobuf::Arena* arena) const {
  ObjTransfer* n = new ObjTransfer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjTransfer::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.ObjTransfer)
  obj_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  obj_ref_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

bool ObjTransfer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.ObjTransfer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string obj_uuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->obj_uuid().data(), this->obj_uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.ObjTransfer.obj_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string obj_ref_uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj_ref_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->obj_ref_uuid().data(), this->obj_ref_uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProto.ObjTransfer.obj_ref_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.ObjTransfer.RelationType type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::NetProto::ObjTransfer_RelationType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.ObjTransfer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.ObjTransfer)
  return false;
#undef DO_
}

void ObjTransfer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.ObjTransfer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string obj_uuid = 1;
  if (this->obj_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->obj_uuid().data(), this->obj_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.ObjTransfer.obj_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->obj_uuid(), output);
  }

  // string obj_ref_uuid = 2;
  if (this->obj_ref_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->obj_ref_uuid().data(), this->obj_ref_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.ObjTransfer.obj_ref_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->obj_ref_uuid(), output);
  }

  // .NetProto.ObjTransfer.RelationType type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.ObjTransfer)
}

::google::protobuf::uint8* ObjTransfer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.ObjTransfer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string obj_uuid = 1;
  if (this->obj_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->obj_uuid().data(), this->obj_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.ObjTransfer.obj_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->obj_uuid(), target);
  }

  // string obj_ref_uuid = 2;
  if (this->obj_ref_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->obj_ref_uuid().data(), this->obj_ref_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProto.ObjTransfer.obj_ref_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->obj_ref_uuid(), target);
  }

  // .NetProto.ObjTransfer.RelationType type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.ObjTransfer)
  return target;
}

size_t ObjTransfer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.ObjTransfer)
  size_t total_size = 0;

  // string obj_uuid = 1;
  if (this->obj_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj_uuid());
  }

  // string obj_ref_uuid = 2;
  if (this->obj_ref_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj_ref_uuid());
  }

  // .NetProto.ObjTransfer.RelationType type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjTransfer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.ObjTransfer)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjTransfer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjTransfer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.ObjTransfer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.ObjTransfer)
    MergeFrom(*source);
  }
}

void ObjTransfer::MergeFrom(const ObjTransfer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.ObjTransfer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_uuid().size() > 0) {

    obj_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_uuid_);
  }
  if (from.obj_ref_uuid().size() > 0) {

    obj_ref_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_ref_uuid_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void ObjTransfer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.ObjTransfer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjTransfer::CopyFrom(const ObjTransfer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.ObjTransfer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjTransfer::IsInitialized() const {
  return true;
}

void ObjTransfer::Swap(ObjTransfer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjTransfer::InternalSwap(ObjTransfer* other) {
  obj_uuid_.Swap(&other->obj_uuid_);
  obj_ref_uuid_.Swap(&other->obj_ref_uuid_);
  std::swap(type_, other->type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjTransfer::GetMetadata() const {
  protobuf_world_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_world_5fevent_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ObjTransfer

// string obj_uuid = 1;
void ObjTransfer::clear_obj_uuid() {
  obj_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ObjTransfer::obj_uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.ObjTransfer.obj_uuid)
  return obj_uuid_.GetNoArena();
}
void ObjTransfer::set_obj_uuid(const ::std::string& value) {
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.ObjTransfer.obj_uuid)
}
#if LANG_CXX11
void ObjTransfer::set_obj_uuid(::std::string&& value) {
  
  obj_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.ObjTransfer.obj_uuid)
}
#endif
void ObjTransfer::set_obj_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.ObjTransfer.obj_uuid)
}
void ObjTransfer::set_obj_uuid(const char* value, size_t size) {
  
  obj_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.ObjTransfer.obj_uuid)
}
::std::string* ObjTransfer::mutable_obj_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.ObjTransfer.obj_uuid)
  return obj_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ObjTransfer::release_obj_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.ObjTransfer.obj_uuid)
  
  return obj_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ObjTransfer::set_allocated_obj_uuid(::std::string* obj_uuid) {
  if (obj_uuid != NULL) {
    
  } else {
    
  }
  obj_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj_uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.ObjTransfer.obj_uuid)
}

// string obj_ref_uuid = 2;
void ObjTransfer::clear_obj_ref_uuid() {
  obj_ref_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ObjTransfer::obj_ref_uuid() const {
  // @@protoc_insertion_point(field_get:NetProto.ObjTransfer.obj_ref_uuid)
  return obj_ref_uuid_.GetNoArena();
}
void ObjTransfer::set_obj_ref_uuid(const ::std::string& value) {
  
  obj_ref_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetProto.ObjTransfer.obj_ref_uuid)
}
#if LANG_CXX11
void ObjTransfer::set_obj_ref_uuid(::std::string&& value) {
  
  obj_ref_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetProto.ObjTransfer.obj_ref_uuid)
}
#endif
void ObjTransfer::set_obj_ref_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  obj_ref_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetProto.ObjTransfer.obj_ref_uuid)
}
void ObjTransfer::set_obj_ref_uuid(const char* value, size_t size) {
  
  obj_ref_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetProto.ObjTransfer.obj_ref_uuid)
}
::std::string* ObjTransfer::mutable_obj_ref_uuid() {
  
  // @@protoc_insertion_point(field_mutable:NetProto.ObjTransfer.obj_ref_uuid)
  return obj_ref_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ObjTransfer::release_obj_ref_uuid() {
  // @@protoc_insertion_point(field_release:NetProto.ObjTransfer.obj_ref_uuid)
  
  return obj_ref_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ObjTransfer::set_allocated_obj_ref_uuid(::std::string* obj_ref_uuid) {
  if (obj_ref_uuid != NULL) {
    
  } else {
    
  }
  obj_ref_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj_ref_uuid);
  // @@protoc_insertion_point(field_set_allocated:NetProto.ObjTransfer.obj_ref_uuid)
}

// .NetProto.ObjTransfer.RelationType type = 3;
void ObjTransfer::clear_type() {
  type_ = 0;
}
::NetProto::ObjTransfer_RelationType ObjTransfer::type() const {
  // @@protoc_insertion_point(field_get:NetProto.ObjTransfer.type)
  return static_cast< ::NetProto::ObjTransfer_RelationType >(type_);
}
void ObjTransfer::set_type(::NetProto::ObjTransfer_RelationType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetProto.ObjTransfer.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EmsArrive::kExpressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmsArrive::EmsArrive()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_world_5fevent_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.EmsArrive)
}
EmsArrive::EmsArrive(const EmsArrive& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_express()) {
    express_ = new ::NetProto::StringData(*from.express_);
  } else {
    express_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NetProto.EmsArrive)
}

void EmsArrive::SharedCtor() {
  express_ = NULL;
  _cached_size_ = 0;
}

EmsArrive::~EmsArrive() {
  // @@protoc_insertion_point(destructor:NetProto.EmsArrive)
  SharedDtor();
}

void EmsArrive::SharedDtor() {
  if (this != internal_default_instance()) {
    delete express_;
  }
}

void EmsArrive::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EmsArrive::descriptor() {
  protobuf_world_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_world_5fevent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EmsArrive& EmsArrive::default_instance() {
  protobuf_world_5fevent_2eproto::InitDefaults();
  return *internal_default_instance();
}

EmsArrive* EmsArrive::New(::google::protobuf::Arena* arena) const {
  EmsArrive* n = new EmsArrive;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EmsArrive::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.EmsArrive)
  if (GetArenaNoVirtual() == NULL && express_ != NULL) {
    delete express_;
  }
  express_ = NULL;
}

bool EmsArrive::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.EmsArrive)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.StringData express = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_express()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.EmsArrive)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.EmsArrive)
  return false;
#undef DO_
}

void EmsArrive::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.EmsArrive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.StringData express = 1;
  if (this->has_express()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->express_, output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.EmsArrive)
}

::google::protobuf::uint8* EmsArrive::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.EmsArrive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.StringData express = 1;
  if (this->has_express()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->express_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.EmsArrive)
  return target;
}

size_t EmsArrive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.EmsArrive)
  size_t total_size = 0;

  // .NetProto.StringData express = 1;
  if (this->has_express()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->express_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EmsArrive::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.EmsArrive)
  GOOGLE_DCHECK_NE(&from, this);
  const EmsArrive* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EmsArrive>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.EmsArrive)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.EmsArrive)
    MergeFrom(*source);
  }
}

void EmsArrive::MergeFrom(const EmsArrive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.EmsArrive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_express()) {
    mutable_express()->::NetProto::StringData::MergeFrom(from.express());
  }
}

void EmsArrive::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.EmsArrive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmsArrive::CopyFrom(const EmsArrive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.EmsArrive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmsArrive::IsInitialized() const {
  return true;
}

void EmsArrive::Swap(EmsArrive* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmsArrive::InternalSwap(EmsArrive* other) {
  std::swap(express_, other->express_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EmsArrive::GetMetadata() const {
  protobuf_world_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_world_5fevent_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EmsArrive

// .NetProto.StringData express = 1;
bool EmsArrive::has_express() const {
  return this != internal_default_instance() && express_ != NULL;
}
void EmsArrive::clear_express() {
  if (GetArenaNoVirtual() == NULL && express_ != NULL) delete express_;
  express_ = NULL;
}
const ::NetProto::StringData& EmsArrive::express() const {
  // @@protoc_insertion_point(field_get:NetProto.EmsArrive.express)
  return express_ != NULL ? *express_
                         : *::NetProto::StringData::internal_default_instance();
}
::NetProto::StringData* EmsArrive::mutable_express() {
  
  if (express_ == NULL) {
    express_ = new ::NetProto::StringData;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.EmsArrive.express)
  return express_;
}
::NetProto::StringData* EmsArrive::release_express() {
  // @@protoc_insertion_point(field_release:NetProto.EmsArrive.express)
  
  ::NetProto::StringData* temp = express_;
  express_ = NULL;
  return temp;
}
void EmsArrive::set_allocated_express(::NetProto::StringData* express) {
  delete express_;
  express_ = express;
  if (express) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.EmsArrive.express)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DoorBellRing::kDoorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DoorBellRing::DoorBellRing()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_world_5fevent_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.DoorBellRing)
}
DoorBellRing::DoorBellRing(const DoorBellRing& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_door()) {
    door_ = new ::NetProto::StringData(*from.door_);
  } else {
    door_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NetProto.DoorBellRing)
}

void DoorBellRing::SharedCtor() {
  door_ = NULL;
  _cached_size_ = 0;
}

DoorBellRing::~DoorBellRing() {
  // @@protoc_insertion_point(destructor:NetProto.DoorBellRing)
  SharedDtor();
}

void DoorBellRing::SharedDtor() {
  if (this != internal_default_instance()) {
    delete door_;
  }
}

void DoorBellRing::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DoorBellRing::descriptor() {
  protobuf_world_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_world_5fevent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DoorBellRing& DoorBellRing::default_instance() {
  protobuf_world_5fevent_2eproto::InitDefaults();
  return *internal_default_instance();
}

DoorBellRing* DoorBellRing::New(::google::protobuf::Arena* arena) const {
  DoorBellRing* n = new DoorBellRing;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DoorBellRing::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.DoorBellRing)
  if (GetArenaNoVirtual() == NULL && door_ != NULL) {
    delete door_;
  }
  door_ = NULL;
}

bool DoorBellRing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.DoorBellRing)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.StringData door = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_door()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.DoorBellRing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.DoorBellRing)
  return false;
#undef DO_
}

void DoorBellRing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.DoorBellRing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.StringData door = 1;
  if (this->has_door()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->door_, output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.DoorBellRing)
}

::google::protobuf::uint8* DoorBellRing::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.DoorBellRing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.StringData door = 1;
  if (this->has_door()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->door_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.DoorBellRing)
  return target;
}

size_t DoorBellRing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.DoorBellRing)
  size_t total_size = 0;

  // .NetProto.StringData door = 1;
  if (this->has_door()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->door_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DoorBellRing::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.DoorBellRing)
  GOOGLE_DCHECK_NE(&from, this);
  const DoorBellRing* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DoorBellRing>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.DoorBellRing)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.DoorBellRing)
    MergeFrom(*source);
  }
}

void DoorBellRing::MergeFrom(const DoorBellRing& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.DoorBellRing)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_door()) {
    mutable_door()->::NetProto::StringData::MergeFrom(from.door());
  }
}

void DoorBellRing::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.DoorBellRing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DoorBellRing::CopyFrom(const DoorBellRing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.DoorBellRing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DoorBellRing::IsInitialized() const {
  return true;
}

void DoorBellRing::Swap(DoorBellRing* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DoorBellRing::InternalSwap(DoorBellRing* other) {
  std::swap(door_, other->door_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DoorBellRing::GetMetadata() const {
  protobuf_world_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_world_5fevent_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DoorBellRing

// .NetProto.StringData door = 1;
bool DoorBellRing::has_door() const {
  return this != internal_default_instance() && door_ != NULL;
}
void DoorBellRing::clear_door() {
  if (GetArenaNoVirtual() == NULL && door_ != NULL) delete door_;
  door_ = NULL;
}
const ::NetProto::StringData& DoorBellRing::door() const {
  // @@protoc_insertion_point(field_get:NetProto.DoorBellRing.door)
  return door_ != NULL ? *door_
                         : *::NetProto::StringData::internal_default_instance();
}
::NetProto::StringData* DoorBellRing::mutable_door() {
  
  if (door_ == NULL) {
    door_ = new ::NetProto::StringData;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.DoorBellRing.door)
  return door_;
}
::NetProto::StringData* DoorBellRing::release_door() {
  // @@protoc_insertion_point(field_release:NetProto.DoorBellRing.door)
  
  ::NetProto::StringData* temp = door_;
  door_ = NULL;
  return temp;
}
void DoorBellRing::set_allocated_door(::NetProto::StringData* door) {
  delete door_;
  door_ = door;
  if (door) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.DoorBellRing.door)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CWorldEvent::kMsgHeadFieldNumber;
const int S2CWorldEvent::kEventIdFieldNumber;
const int S2CWorldEvent::kTypeFieldNumber;
const int S2CWorldEvent::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CWorldEvent::S2CWorldEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_world_5fevent_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.S2CWorldEvent)
}
S2CWorldEvent::S2CWorldEvent(const S2CWorldEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      params_(from.params_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_msg_head()) {
    msg_head_ = new ::NetProto::MsgHead(*from.msg_head_);
  } else {
    msg_head_ = NULL;
  }
  ::memcpy(&event_id_, &from.event_id_,
    reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&event_id_) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:NetProto.S2CWorldEvent)
}

void S2CWorldEvent::SharedCtor() {
  ::memset(&msg_head_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&msg_head_) + sizeof(type_));
  _cached_size_ = 0;
}

S2CWorldEvent::~S2CWorldEvent() {
  // @@protoc_insertion_point(destructor:NetProto.S2CWorldEvent)
  SharedDtor();
}

void S2CWorldEvent::SharedDtor() {
  if (this != internal_default_instance()) {
    delete msg_head_;
  }
}

void S2CWorldEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CWorldEvent::descriptor() {
  protobuf_world_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_world_5fevent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2CWorldEvent& S2CWorldEvent::default_instance() {
  protobuf_world_5fevent_2eproto::InitDefaults();
  return *internal_default_instance();
}

S2CWorldEvent* S2CWorldEvent::New(::google::protobuf::Arena* arena) const {
  S2CWorldEvent* n = new S2CWorldEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CWorldEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.S2CWorldEvent)
  params_.Clear();
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) {
    delete msg_head_;
  }
  msg_head_ = NULL;
  ::memset(&event_id_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&event_id_) + sizeof(type_));
}

bool S2CWorldEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.S2CWorldEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.MsgHead msg_head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 event_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &event_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.WorldEventType type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::NetProto::WorldEventType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any params = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.S2CWorldEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.S2CWorldEvent)
  return false;
#undef DO_
}

void S2CWorldEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.S2CWorldEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msg_head_, output);
  }

  // uint32 event_id = 2;
  if (this->event_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->event_id(), output);
  }

  // .NetProto.WorldEventType type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  // repeated .google.protobuf.Any params = 4;
  for (unsigned int i = 0, n = this->params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->params(i), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.S2CWorldEvent)
}

::google::protobuf::uint8* S2CWorldEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.S2CWorldEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msg_head_, deterministic, target);
  }

  // uint32 event_id = 2;
  if (this->event_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->event_id(), target);
  }

  // .NetProto.WorldEventType type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  // repeated .google.protobuf.Any params = 4;
  for (unsigned int i = 0, n = this->params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->params(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.S2CWorldEvent)
  return target;
}

size_t S2CWorldEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.S2CWorldEvent)
  size_t total_size = 0;

  // repeated .google.protobuf.Any params = 4;
  {
    unsigned int count = this->params_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->params(i));
    }
  }

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_head_);
  }

  // uint32 event_id = 2;
  if (this->event_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->event_id());
  }

  // .NetProto.WorldEventType type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CWorldEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.S2CWorldEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const S2CWorldEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CWorldEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.S2CWorldEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.S2CWorldEvent)
    MergeFrom(*source);
  }
}

void S2CWorldEvent::MergeFrom(const S2CWorldEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.S2CWorldEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  if (from.has_msg_head()) {
    mutable_msg_head()->::NetProto::MsgHead::MergeFrom(from.msg_head());
  }
  if (from.event_id() != 0) {
    set_event_id(from.event_id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void S2CWorldEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.S2CWorldEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CWorldEvent::CopyFrom(const S2CWorldEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.S2CWorldEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CWorldEvent::IsInitialized() const {
  return true;
}

void S2CWorldEvent::Swap(S2CWorldEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CWorldEvent::InternalSwap(S2CWorldEvent* other) {
  params_.InternalSwap(&other->params_);
  std::swap(msg_head_, other->msg_head_);
  std::swap(event_id_, other->event_id_);
  std::swap(type_, other->type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CWorldEvent::GetMetadata() const {
  protobuf_world_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_world_5fevent_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CWorldEvent

// .NetProto.MsgHead msg_head = 1;
bool S2CWorldEvent::has_msg_head() const {
  return this != internal_default_instance() && msg_head_ != NULL;
}
void S2CWorldEvent::clear_msg_head() {
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) delete msg_head_;
  msg_head_ = NULL;
}
const ::NetProto::MsgHead& S2CWorldEvent::msg_head() const {
  // @@protoc_insertion_point(field_get:NetProto.S2CWorldEvent.msg_head)
  return msg_head_ != NULL ? *msg_head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
::NetProto::MsgHead* S2CWorldEvent::mutable_msg_head() {
  
  if (msg_head_ == NULL) {
    msg_head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.S2CWorldEvent.msg_head)
  return msg_head_;
}
::NetProto::MsgHead* S2CWorldEvent::release_msg_head() {
  // @@protoc_insertion_point(field_release:NetProto.S2CWorldEvent.msg_head)
  
  ::NetProto::MsgHead* temp = msg_head_;
  msg_head_ = NULL;
  return temp;
}
void S2CWorldEvent::set_allocated_msg_head(::NetProto::MsgHead* msg_head) {
  delete msg_head_;
  msg_head_ = msg_head;
  if (msg_head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.S2CWorldEvent.msg_head)
}

// uint32 event_id = 2;
void S2CWorldEvent::clear_event_id() {
  event_id_ = 0u;
}
::google::protobuf::uint32 S2CWorldEvent::event_id() const {
  // @@protoc_insertion_point(field_get:NetProto.S2CWorldEvent.event_id)
  return event_id_;
}
void S2CWorldEvent::set_event_id(::google::protobuf::uint32 value) {
  
  event_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.S2CWorldEvent.event_id)
}

// .NetProto.WorldEventType type = 3;
void S2CWorldEvent::clear_type() {
  type_ = 0;
}
::NetProto::WorldEventType S2CWorldEvent::type() const {
  // @@protoc_insertion_point(field_get:NetProto.S2CWorldEvent.type)
  return static_cast< ::NetProto::WorldEventType >(type_);
}
void S2CWorldEvent::set_type(::NetProto::WorldEventType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetProto.S2CWorldEvent.type)
}

// repeated .google.protobuf.Any params = 4;
int S2CWorldEvent::params_size() const {
  return params_.size();
}
void S2CWorldEvent::clear_params() {
  params_.Clear();
}
const ::google::protobuf::Any& S2CWorldEvent::params(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.S2CWorldEvent.params)
  return params_.Get(index);
}
::google::protobuf::Any* S2CWorldEvent::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.S2CWorldEvent.params)
  return params_.Mutable(index);
}
::google::protobuf::Any* S2CWorldEvent::add_params() {
  // @@protoc_insertion_point(field_add:NetProto.S2CWorldEvent.params)
  return params_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
S2CWorldEvent::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.S2CWorldEvent.params)
  return &params_;
}
const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
S2CWorldEvent::params() const {
  // @@protoc_insertion_point(field_list:NetProto.S2CWorldEvent.params)
  return params_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SWorldEventResponse::kMsgHeadFieldNumber;
const int C2SWorldEventResponse::kEventIdFieldNumber;
const int C2SWorldEventResponse::kTypeFieldNumber;
const int C2SWorldEventResponse::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SWorldEventResponse::C2SWorldEventResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_world_5fevent_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProto.C2SWorldEventResponse)
}
C2SWorldEventResponse::C2SWorldEventResponse(const C2SWorldEventResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      params_(from.params_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_msg_head()) {
    msg_head_ = new ::NetProto::MsgHead(*from.msg_head_);
  } else {
    msg_head_ = NULL;
  }
  ::memcpy(&event_id_, &from.event_id_,
    reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&event_id_) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:NetProto.C2SWorldEventResponse)
}

void C2SWorldEventResponse::SharedCtor() {
  ::memset(&msg_head_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&msg_head_) + sizeof(type_));
  _cached_size_ = 0;
}

C2SWorldEventResponse::~C2SWorldEventResponse() {
  // @@protoc_insertion_point(destructor:NetProto.C2SWorldEventResponse)
  SharedDtor();
}

void C2SWorldEventResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete msg_head_;
  }
}

void C2SWorldEventResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SWorldEventResponse::descriptor() {
  protobuf_world_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_world_5fevent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C2SWorldEventResponse& C2SWorldEventResponse::default_instance() {
  protobuf_world_5fevent_2eproto::InitDefaults();
  return *internal_default_instance();
}

C2SWorldEventResponse* C2SWorldEventResponse::New(::google::protobuf::Arena* arena) const {
  C2SWorldEventResponse* n = new C2SWorldEventResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SWorldEventResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProto.C2SWorldEventResponse)
  params_.Clear();
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) {
    delete msg_head_;
  }
  msg_head_ = NULL;
  ::memset(&event_id_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&event_id_) + sizeof(type_));
}

bool C2SWorldEventResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProto.C2SWorldEventResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProto.MsgHead msg_head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 event_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &event_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProto.WorldEventType type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::NetProto::WorldEventType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any params = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProto.C2SWorldEventResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProto.C2SWorldEventResponse)
  return false;
#undef DO_
}

void C2SWorldEventResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProto.C2SWorldEventResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msg_head_, output);
  }

  // uint32 event_id = 2;
  if (this->event_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->event_id(), output);
  }

  // .NetProto.WorldEventType type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  // repeated .google.protobuf.Any params = 4;
  for (unsigned int i = 0, n = this->params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->params(i), output);
  }

  // @@protoc_insertion_point(serialize_end:NetProto.C2SWorldEventResponse)
}

::google::protobuf::uint8* C2SWorldEventResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetProto.C2SWorldEventResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msg_head_, deterministic, target);
  }

  // uint32 event_id = 2;
  if (this->event_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->event_id(), target);
  }

  // .NetProto.WorldEventType type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  // repeated .google.protobuf.Any params = 4;
  for (unsigned int i = 0, n = this->params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->params(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NetProto.C2SWorldEventResponse)
  return target;
}

size_t C2SWorldEventResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProto.C2SWorldEventResponse)
  size_t total_size = 0;

  // repeated .google.protobuf.Any params = 4;
  {
    unsigned int count = this->params_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->params(i));
    }
  }

  // .NetProto.MsgHead msg_head = 1;
  if (this->has_msg_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_head_);
  }

  // uint32 event_id = 2;
  if (this->event_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->event_id());
  }

  // .NetProto.WorldEventType type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SWorldEventResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProto.C2SWorldEventResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SWorldEventResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SWorldEventResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProto.C2SWorldEventResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProto.C2SWorldEventResponse)
    MergeFrom(*source);
  }
}

void C2SWorldEventResponse::MergeFrom(const C2SWorldEventResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProto.C2SWorldEventResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  if (from.has_msg_head()) {
    mutable_msg_head()->::NetProto::MsgHead::MergeFrom(from.msg_head());
  }
  if (from.event_id() != 0) {
    set_event_id(from.event_id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void C2SWorldEventResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProto.C2SWorldEventResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SWorldEventResponse::CopyFrom(const C2SWorldEventResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProto.C2SWorldEventResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SWorldEventResponse::IsInitialized() const {
  return true;
}

void C2SWorldEventResponse::Swap(C2SWorldEventResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SWorldEventResponse::InternalSwap(C2SWorldEventResponse* other) {
  params_.InternalSwap(&other->params_);
  std::swap(msg_head_, other->msg_head_);
  std::swap(event_id_, other->event_id_);
  std::swap(type_, other->type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SWorldEventResponse::GetMetadata() const {
  protobuf_world_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_world_5fevent_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SWorldEventResponse

// .NetProto.MsgHead msg_head = 1;
bool C2SWorldEventResponse::has_msg_head() const {
  return this != internal_default_instance() && msg_head_ != NULL;
}
void C2SWorldEventResponse::clear_msg_head() {
  if (GetArenaNoVirtual() == NULL && msg_head_ != NULL) delete msg_head_;
  msg_head_ = NULL;
}
const ::NetProto::MsgHead& C2SWorldEventResponse::msg_head() const {
  // @@protoc_insertion_point(field_get:NetProto.C2SWorldEventResponse.msg_head)
  return msg_head_ != NULL ? *msg_head_
                         : *::NetProto::MsgHead::internal_default_instance();
}
::NetProto::MsgHead* C2SWorldEventResponse::mutable_msg_head() {
  
  if (msg_head_ == NULL) {
    msg_head_ = new ::NetProto::MsgHead;
  }
  // @@protoc_insertion_point(field_mutable:NetProto.C2SWorldEventResponse.msg_head)
  return msg_head_;
}
::NetProto::MsgHead* C2SWorldEventResponse::release_msg_head() {
  // @@protoc_insertion_point(field_release:NetProto.C2SWorldEventResponse.msg_head)
  
  ::NetProto::MsgHead* temp = msg_head_;
  msg_head_ = NULL;
  return temp;
}
void C2SWorldEventResponse::set_allocated_msg_head(::NetProto::MsgHead* msg_head) {
  delete msg_head_;
  msg_head_ = msg_head;
  if (msg_head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetProto.C2SWorldEventResponse.msg_head)
}

// uint32 event_id = 2;
void C2SWorldEventResponse::clear_event_id() {
  event_id_ = 0u;
}
::google::protobuf::uint32 C2SWorldEventResponse::event_id() const {
  // @@protoc_insertion_point(field_get:NetProto.C2SWorldEventResponse.event_id)
  return event_id_;
}
void C2SWorldEventResponse::set_event_id(::google::protobuf::uint32 value) {
  
  event_id_ = value;
  // @@protoc_insertion_point(field_set:NetProto.C2SWorldEventResponse.event_id)
}

// .NetProto.WorldEventType type = 3;
void C2SWorldEventResponse::clear_type() {
  type_ = 0;
}
::NetProto::WorldEventType C2SWorldEventResponse::type() const {
  // @@protoc_insertion_point(field_get:NetProto.C2SWorldEventResponse.type)
  return static_cast< ::NetProto::WorldEventType >(type_);
}
void C2SWorldEventResponse::set_type(::NetProto::WorldEventType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetProto.C2SWorldEventResponse.type)
}

// repeated .google.protobuf.Any params = 4;
int C2SWorldEventResponse::params_size() const {
  return params_.size();
}
void C2SWorldEventResponse::clear_params() {
  params_.Clear();
}
const ::google::protobuf::Any& C2SWorldEventResponse::params(int index) const {
  // @@protoc_insertion_point(field_get:NetProto.C2SWorldEventResponse.params)
  return params_.Get(index);
}
::google::protobuf::Any* C2SWorldEventResponse::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:NetProto.C2SWorldEventResponse.params)
  return params_.Mutable(index);
}
::google::protobuf::Any* C2SWorldEventResponse::add_params() {
  // @@protoc_insertion_point(field_add:NetProto.C2SWorldEventResponse.params)
  return params_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
C2SWorldEventResponse::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:NetProto.C2SWorldEventResponse.params)
  return &params_;
}
const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
C2SWorldEventResponse::params() const {
  // @@protoc_insertion_point(field_list:NetProto.C2SWorldEventResponse.params)
  return params_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace NetProto

// @@protoc_insertion_point(global_scope)
